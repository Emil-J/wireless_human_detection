
Zavrsni_rad_v1_f446re.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000485c  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000140  08004a2c  08004a2c  00014a2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004b6c  08004b6c  0002005c  2**0
                  CONTENTS
  4 .ARM          00000008  08004b6c  08004b6c  00014b6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004b74  08004b74  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004b74  08004b74  00014b74  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08004b78  08004b78  00014b78  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  08004b7c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000002e0  2000005c  08004bd8  0002005c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000033c  08004bd8  0002033c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00010f20  00000000  00000000  000200cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000292f  00000000  00000000  00030fef  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000f18  00000000  00000000  00033920  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000bbf  00000000  00000000  00034838  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0002315f  00000000  00000000  000353f7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000139d4  00000000  00000000  00058556  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000d2d7f  00000000  00000000  0006bf2a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000043d0  00000000  00000000  0013ecac  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000063  00000000  00000000  0014307c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	2000005c 	.word	0x2000005c
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08004a14 	.word	0x08004a14

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000060 	.word	0x20000060
 800020c:	08004a14 	.word	0x08004a14

08000210 <strlen>:
 8000210:	4603      	mov	r3, r0
 8000212:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000216:	2a00      	cmp	r2, #0
 8000218:	d1fb      	bne.n	8000212 <strlen+0x2>
 800021a:	1a18      	subs	r0, r3, r0
 800021c:	3801      	subs	r0, #1
 800021e:	4770      	bx	lr

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_uldivmod>:
 80002c0:	b953      	cbnz	r3, 80002d8 <__aeabi_uldivmod+0x18>
 80002c2:	b94a      	cbnz	r2, 80002d8 <__aeabi_uldivmod+0x18>
 80002c4:	2900      	cmp	r1, #0
 80002c6:	bf08      	it	eq
 80002c8:	2800      	cmpeq	r0, #0
 80002ca:	bf1c      	itt	ne
 80002cc:	f04f 31ff 	movne.w	r1, #4294967295
 80002d0:	f04f 30ff 	movne.w	r0, #4294967295
 80002d4:	f000 b970 	b.w	80005b8 <__aeabi_idiv0>
 80002d8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002dc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002e0:	f000 f806 	bl	80002f0 <__udivmoddi4>
 80002e4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002e8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ec:	b004      	add	sp, #16
 80002ee:	4770      	bx	lr

080002f0 <__udivmoddi4>:
 80002f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002f4:	9e08      	ldr	r6, [sp, #32]
 80002f6:	460d      	mov	r5, r1
 80002f8:	4604      	mov	r4, r0
 80002fa:	460f      	mov	r7, r1
 80002fc:	2b00      	cmp	r3, #0
 80002fe:	d14a      	bne.n	8000396 <__udivmoddi4+0xa6>
 8000300:	428a      	cmp	r2, r1
 8000302:	4694      	mov	ip, r2
 8000304:	d965      	bls.n	80003d2 <__udivmoddi4+0xe2>
 8000306:	fab2 f382 	clz	r3, r2
 800030a:	b143      	cbz	r3, 800031e <__udivmoddi4+0x2e>
 800030c:	fa02 fc03 	lsl.w	ip, r2, r3
 8000310:	f1c3 0220 	rsb	r2, r3, #32
 8000314:	409f      	lsls	r7, r3
 8000316:	fa20 f202 	lsr.w	r2, r0, r2
 800031a:	4317      	orrs	r7, r2
 800031c:	409c      	lsls	r4, r3
 800031e:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000322:	fa1f f58c 	uxth.w	r5, ip
 8000326:	fbb7 f1fe 	udiv	r1, r7, lr
 800032a:	0c22      	lsrs	r2, r4, #16
 800032c:	fb0e 7711 	mls	r7, lr, r1, r7
 8000330:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000334:	fb01 f005 	mul.w	r0, r1, r5
 8000338:	4290      	cmp	r0, r2
 800033a:	d90a      	bls.n	8000352 <__udivmoddi4+0x62>
 800033c:	eb1c 0202 	adds.w	r2, ip, r2
 8000340:	f101 37ff 	add.w	r7, r1, #4294967295
 8000344:	f080 811c 	bcs.w	8000580 <__udivmoddi4+0x290>
 8000348:	4290      	cmp	r0, r2
 800034a:	f240 8119 	bls.w	8000580 <__udivmoddi4+0x290>
 800034e:	3902      	subs	r1, #2
 8000350:	4462      	add	r2, ip
 8000352:	1a12      	subs	r2, r2, r0
 8000354:	b2a4      	uxth	r4, r4
 8000356:	fbb2 f0fe 	udiv	r0, r2, lr
 800035a:	fb0e 2210 	mls	r2, lr, r0, r2
 800035e:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000362:	fb00 f505 	mul.w	r5, r0, r5
 8000366:	42a5      	cmp	r5, r4
 8000368:	d90a      	bls.n	8000380 <__udivmoddi4+0x90>
 800036a:	eb1c 0404 	adds.w	r4, ip, r4
 800036e:	f100 32ff 	add.w	r2, r0, #4294967295
 8000372:	f080 8107 	bcs.w	8000584 <__udivmoddi4+0x294>
 8000376:	42a5      	cmp	r5, r4
 8000378:	f240 8104 	bls.w	8000584 <__udivmoddi4+0x294>
 800037c:	4464      	add	r4, ip
 800037e:	3802      	subs	r0, #2
 8000380:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000384:	1b64      	subs	r4, r4, r5
 8000386:	2100      	movs	r1, #0
 8000388:	b11e      	cbz	r6, 8000392 <__udivmoddi4+0xa2>
 800038a:	40dc      	lsrs	r4, r3
 800038c:	2300      	movs	r3, #0
 800038e:	e9c6 4300 	strd	r4, r3, [r6]
 8000392:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000396:	428b      	cmp	r3, r1
 8000398:	d908      	bls.n	80003ac <__udivmoddi4+0xbc>
 800039a:	2e00      	cmp	r6, #0
 800039c:	f000 80ed 	beq.w	800057a <__udivmoddi4+0x28a>
 80003a0:	2100      	movs	r1, #0
 80003a2:	e9c6 0500 	strd	r0, r5, [r6]
 80003a6:	4608      	mov	r0, r1
 80003a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003ac:	fab3 f183 	clz	r1, r3
 80003b0:	2900      	cmp	r1, #0
 80003b2:	d149      	bne.n	8000448 <__udivmoddi4+0x158>
 80003b4:	42ab      	cmp	r3, r5
 80003b6:	d302      	bcc.n	80003be <__udivmoddi4+0xce>
 80003b8:	4282      	cmp	r2, r0
 80003ba:	f200 80f8 	bhi.w	80005ae <__udivmoddi4+0x2be>
 80003be:	1a84      	subs	r4, r0, r2
 80003c0:	eb65 0203 	sbc.w	r2, r5, r3
 80003c4:	2001      	movs	r0, #1
 80003c6:	4617      	mov	r7, r2
 80003c8:	2e00      	cmp	r6, #0
 80003ca:	d0e2      	beq.n	8000392 <__udivmoddi4+0xa2>
 80003cc:	e9c6 4700 	strd	r4, r7, [r6]
 80003d0:	e7df      	b.n	8000392 <__udivmoddi4+0xa2>
 80003d2:	b902      	cbnz	r2, 80003d6 <__udivmoddi4+0xe6>
 80003d4:	deff      	udf	#255	; 0xff
 80003d6:	fab2 f382 	clz	r3, r2
 80003da:	2b00      	cmp	r3, #0
 80003dc:	f040 8090 	bne.w	8000500 <__udivmoddi4+0x210>
 80003e0:	1a8a      	subs	r2, r1, r2
 80003e2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003e6:	fa1f fe8c 	uxth.w	lr, ip
 80003ea:	2101      	movs	r1, #1
 80003ec:	fbb2 f5f7 	udiv	r5, r2, r7
 80003f0:	fb07 2015 	mls	r0, r7, r5, r2
 80003f4:	0c22      	lsrs	r2, r4, #16
 80003f6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80003fa:	fb0e f005 	mul.w	r0, lr, r5
 80003fe:	4290      	cmp	r0, r2
 8000400:	d908      	bls.n	8000414 <__udivmoddi4+0x124>
 8000402:	eb1c 0202 	adds.w	r2, ip, r2
 8000406:	f105 38ff 	add.w	r8, r5, #4294967295
 800040a:	d202      	bcs.n	8000412 <__udivmoddi4+0x122>
 800040c:	4290      	cmp	r0, r2
 800040e:	f200 80cb 	bhi.w	80005a8 <__udivmoddi4+0x2b8>
 8000412:	4645      	mov	r5, r8
 8000414:	1a12      	subs	r2, r2, r0
 8000416:	b2a4      	uxth	r4, r4
 8000418:	fbb2 f0f7 	udiv	r0, r2, r7
 800041c:	fb07 2210 	mls	r2, r7, r0, r2
 8000420:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000424:	fb0e fe00 	mul.w	lr, lr, r0
 8000428:	45a6      	cmp	lr, r4
 800042a:	d908      	bls.n	800043e <__udivmoddi4+0x14e>
 800042c:	eb1c 0404 	adds.w	r4, ip, r4
 8000430:	f100 32ff 	add.w	r2, r0, #4294967295
 8000434:	d202      	bcs.n	800043c <__udivmoddi4+0x14c>
 8000436:	45a6      	cmp	lr, r4
 8000438:	f200 80bb 	bhi.w	80005b2 <__udivmoddi4+0x2c2>
 800043c:	4610      	mov	r0, r2
 800043e:	eba4 040e 	sub.w	r4, r4, lr
 8000442:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000446:	e79f      	b.n	8000388 <__udivmoddi4+0x98>
 8000448:	f1c1 0720 	rsb	r7, r1, #32
 800044c:	408b      	lsls	r3, r1
 800044e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000452:	ea4c 0c03 	orr.w	ip, ip, r3
 8000456:	fa05 f401 	lsl.w	r4, r5, r1
 800045a:	fa20 f307 	lsr.w	r3, r0, r7
 800045e:	40fd      	lsrs	r5, r7
 8000460:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000464:	4323      	orrs	r3, r4
 8000466:	fbb5 f8f9 	udiv	r8, r5, r9
 800046a:	fa1f fe8c 	uxth.w	lr, ip
 800046e:	fb09 5518 	mls	r5, r9, r8, r5
 8000472:	0c1c      	lsrs	r4, r3, #16
 8000474:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000478:	fb08 f50e 	mul.w	r5, r8, lr
 800047c:	42a5      	cmp	r5, r4
 800047e:	fa02 f201 	lsl.w	r2, r2, r1
 8000482:	fa00 f001 	lsl.w	r0, r0, r1
 8000486:	d90b      	bls.n	80004a0 <__udivmoddi4+0x1b0>
 8000488:	eb1c 0404 	adds.w	r4, ip, r4
 800048c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000490:	f080 8088 	bcs.w	80005a4 <__udivmoddi4+0x2b4>
 8000494:	42a5      	cmp	r5, r4
 8000496:	f240 8085 	bls.w	80005a4 <__udivmoddi4+0x2b4>
 800049a:	f1a8 0802 	sub.w	r8, r8, #2
 800049e:	4464      	add	r4, ip
 80004a0:	1b64      	subs	r4, r4, r5
 80004a2:	b29d      	uxth	r5, r3
 80004a4:	fbb4 f3f9 	udiv	r3, r4, r9
 80004a8:	fb09 4413 	mls	r4, r9, r3, r4
 80004ac:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 80004b0:	fb03 fe0e 	mul.w	lr, r3, lr
 80004b4:	45a6      	cmp	lr, r4
 80004b6:	d908      	bls.n	80004ca <__udivmoddi4+0x1da>
 80004b8:	eb1c 0404 	adds.w	r4, ip, r4
 80004bc:	f103 35ff 	add.w	r5, r3, #4294967295
 80004c0:	d26c      	bcs.n	800059c <__udivmoddi4+0x2ac>
 80004c2:	45a6      	cmp	lr, r4
 80004c4:	d96a      	bls.n	800059c <__udivmoddi4+0x2ac>
 80004c6:	3b02      	subs	r3, #2
 80004c8:	4464      	add	r4, ip
 80004ca:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80004ce:	fba3 9502 	umull	r9, r5, r3, r2
 80004d2:	eba4 040e 	sub.w	r4, r4, lr
 80004d6:	42ac      	cmp	r4, r5
 80004d8:	46c8      	mov	r8, r9
 80004da:	46ae      	mov	lr, r5
 80004dc:	d356      	bcc.n	800058c <__udivmoddi4+0x29c>
 80004de:	d053      	beq.n	8000588 <__udivmoddi4+0x298>
 80004e0:	b156      	cbz	r6, 80004f8 <__udivmoddi4+0x208>
 80004e2:	ebb0 0208 	subs.w	r2, r0, r8
 80004e6:	eb64 040e 	sbc.w	r4, r4, lr
 80004ea:	fa04 f707 	lsl.w	r7, r4, r7
 80004ee:	40ca      	lsrs	r2, r1
 80004f0:	40cc      	lsrs	r4, r1
 80004f2:	4317      	orrs	r7, r2
 80004f4:	e9c6 7400 	strd	r7, r4, [r6]
 80004f8:	4618      	mov	r0, r3
 80004fa:	2100      	movs	r1, #0
 80004fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000500:	f1c3 0120 	rsb	r1, r3, #32
 8000504:	fa02 fc03 	lsl.w	ip, r2, r3
 8000508:	fa20 f201 	lsr.w	r2, r0, r1
 800050c:	fa25 f101 	lsr.w	r1, r5, r1
 8000510:	409d      	lsls	r5, r3
 8000512:	432a      	orrs	r2, r5
 8000514:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000518:	fa1f fe8c 	uxth.w	lr, ip
 800051c:	fbb1 f0f7 	udiv	r0, r1, r7
 8000520:	fb07 1510 	mls	r5, r7, r0, r1
 8000524:	0c11      	lsrs	r1, r2, #16
 8000526:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 800052a:	fb00 f50e 	mul.w	r5, r0, lr
 800052e:	428d      	cmp	r5, r1
 8000530:	fa04 f403 	lsl.w	r4, r4, r3
 8000534:	d908      	bls.n	8000548 <__udivmoddi4+0x258>
 8000536:	eb1c 0101 	adds.w	r1, ip, r1
 800053a:	f100 38ff 	add.w	r8, r0, #4294967295
 800053e:	d22f      	bcs.n	80005a0 <__udivmoddi4+0x2b0>
 8000540:	428d      	cmp	r5, r1
 8000542:	d92d      	bls.n	80005a0 <__udivmoddi4+0x2b0>
 8000544:	3802      	subs	r0, #2
 8000546:	4461      	add	r1, ip
 8000548:	1b49      	subs	r1, r1, r5
 800054a:	b292      	uxth	r2, r2
 800054c:	fbb1 f5f7 	udiv	r5, r1, r7
 8000550:	fb07 1115 	mls	r1, r7, r5, r1
 8000554:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000558:	fb05 f10e 	mul.w	r1, r5, lr
 800055c:	4291      	cmp	r1, r2
 800055e:	d908      	bls.n	8000572 <__udivmoddi4+0x282>
 8000560:	eb1c 0202 	adds.w	r2, ip, r2
 8000564:	f105 38ff 	add.w	r8, r5, #4294967295
 8000568:	d216      	bcs.n	8000598 <__udivmoddi4+0x2a8>
 800056a:	4291      	cmp	r1, r2
 800056c:	d914      	bls.n	8000598 <__udivmoddi4+0x2a8>
 800056e:	3d02      	subs	r5, #2
 8000570:	4462      	add	r2, ip
 8000572:	1a52      	subs	r2, r2, r1
 8000574:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000578:	e738      	b.n	80003ec <__udivmoddi4+0xfc>
 800057a:	4631      	mov	r1, r6
 800057c:	4630      	mov	r0, r6
 800057e:	e708      	b.n	8000392 <__udivmoddi4+0xa2>
 8000580:	4639      	mov	r1, r7
 8000582:	e6e6      	b.n	8000352 <__udivmoddi4+0x62>
 8000584:	4610      	mov	r0, r2
 8000586:	e6fb      	b.n	8000380 <__udivmoddi4+0x90>
 8000588:	4548      	cmp	r0, r9
 800058a:	d2a9      	bcs.n	80004e0 <__udivmoddi4+0x1f0>
 800058c:	ebb9 0802 	subs.w	r8, r9, r2
 8000590:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000594:	3b01      	subs	r3, #1
 8000596:	e7a3      	b.n	80004e0 <__udivmoddi4+0x1f0>
 8000598:	4645      	mov	r5, r8
 800059a:	e7ea      	b.n	8000572 <__udivmoddi4+0x282>
 800059c:	462b      	mov	r3, r5
 800059e:	e794      	b.n	80004ca <__udivmoddi4+0x1da>
 80005a0:	4640      	mov	r0, r8
 80005a2:	e7d1      	b.n	8000548 <__udivmoddi4+0x258>
 80005a4:	46d0      	mov	r8, sl
 80005a6:	e77b      	b.n	80004a0 <__udivmoddi4+0x1b0>
 80005a8:	3d02      	subs	r5, #2
 80005aa:	4462      	add	r2, ip
 80005ac:	e732      	b.n	8000414 <__udivmoddi4+0x124>
 80005ae:	4608      	mov	r0, r1
 80005b0:	e70a      	b.n	80003c8 <__udivmoddi4+0xd8>
 80005b2:	4464      	add	r4, ip
 80005b4:	3802      	subs	r0, #2
 80005b6:	e742      	b.n	800043e <__udivmoddi4+0x14e>

080005b8 <__aeabi_idiv0>:
 80005b8:	4770      	bx	lr
 80005ba:	bf00      	nop

080005bc <SPI_CS_WRITE>:
#include "CC1101_E07_M1101D_SMA.h"

void SPI_CS_WRITE(bool state)	 // State machine za CS
{
 80005bc:	b580      	push	{r7, lr}
 80005be:	b082      	sub	sp, #8
 80005c0:	af00      	add	r7, sp, #0
 80005c2:	4603      	mov	r3, r0
 80005c4:	71fb      	strb	r3, [r7, #7]
	if(state)
 80005c6:	79fb      	ldrb	r3, [r7, #7]
 80005c8:	2b00      	cmp	r3, #0
 80005ca:	d005      	beq.n	80005d8 <SPI_CS_WRITE+0x1c>
	  {
		HAL_GPIO_WritePin(SPI2_CS_GPIO_Port, SPI2_CS_Pin, GPIO_PIN_SET);
 80005cc:	2201      	movs	r2, #1
 80005ce:	2120      	movs	r1, #32
 80005d0:	4806      	ldr	r0, [pc, #24]	; (80005ec <SPI_CS_WRITE+0x30>)
 80005d2:	f001 fb71 	bl	8001cb8 <HAL_GPIO_WritePin>
	  }
	else
	  {
		HAL_GPIO_WritePin(SPI2_CS_GPIO_Port, SPI2_CS_Pin, GPIO_PIN_RESET);
	  }
}
 80005d6:	e004      	b.n	80005e2 <SPI_CS_WRITE+0x26>
		HAL_GPIO_WritePin(SPI2_CS_GPIO_Port, SPI2_CS_Pin, GPIO_PIN_RESET);
 80005d8:	2200      	movs	r2, #0
 80005da:	2120      	movs	r1, #32
 80005dc:	4803      	ldr	r0, [pc, #12]	; (80005ec <SPI_CS_WRITE+0x30>)
 80005de:	f001 fb6b 	bl	8001cb8 <HAL_GPIO_WritePin>
}
 80005e2:	bf00      	nop
 80005e4:	3708      	adds	r7, #8
 80005e6:	46bd      	mov	sp, r7
 80005e8:	bd80      	pop	{r7, pc}
 80005ea:	bf00      	nop
 80005ec:	40020400 	.word	0x40020400

080005f0 <manual_POR>:

void manual_POR()
{
 80005f0:	b580      	push	{r7, lr}
 80005f2:	b084      	sub	sp, #16
 80005f4:	af00      	add	r7, sp, #0
	uint8_t status = 0x00;
 80005f6:	2300      	movs	r3, #0
 80005f8:	73fb      	strb	r3, [r7, #15]
	char serialStatus[10];

	SPI_CS_WRITE(0);
 80005fa:	2000      	movs	r0, #0
 80005fc:	f7ff ffde 	bl	80005bc <SPI_CS_WRITE>
	delay_us(1);
 8000600:	2001      	movs	r0, #1
 8000602:	f000 ff97 	bl	8001534 <delay_us>
	SPI_CS_WRITE(1);
 8000606:	2001      	movs	r0, #1
 8000608:	f7ff ffd8 	bl	80005bc <SPI_CS_WRITE>
	delay_us(41);
 800060c:	2029      	movs	r0, #41	; 0x29
 800060e:	f000 ff91 	bl	8001534 <delay_us>

	SPI_CS_WRITE(0);
 8000612:	2000      	movs	r0, #0
 8000614:	f7ff ffd2 	bl	80005bc <SPI_CS_WRITE>
	while(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_2));
 8000618:	bf00      	nop
 800061a:	2104      	movs	r1, #4
 800061c:	4811      	ldr	r0, [pc, #68]	; (8000664 <manual_POR+0x74>)
 800061e:	f001 fb33 	bl	8001c88 <HAL_GPIO_ReadPin>
 8000622:	4603      	mov	r3, r0
 8000624:	2b00      	cmp	r3, #0
 8000626:	d1f8      	bne.n	800061a <manual_POR+0x2a>
	status = command_strobe(SRES);
 8000628:	2030      	movs	r0, #48	; 0x30
 800062a:	f000 f919 	bl	8000860 <command_strobe>
 800062e:	4603      	mov	r3, r0
 8000630:	73fb      	strb	r3, [r7, #15]
	SPI_CS_WRITE(1);
 8000632:	2001      	movs	r0, #1
 8000634:	f7ff ffc2 	bl	80005bc <SPI_CS_WRITE>

	snprintf(serialStatus, sizeof(serialStatus), "0x%02X\r\n", status);
 8000638:	7bfb      	ldrb	r3, [r7, #15]
 800063a:	1d38      	adds	r0, r7, #4
 800063c:	4a0a      	ldr	r2, [pc, #40]	; (8000668 <manual_POR+0x78>)
 800063e:	210a      	movs	r1, #10
 8000640:	f003 fd10 	bl	8004064 <sniprintf>
	HAL_UART_Transmit(&huart2, (uint8_t*)serialStatus, strlen(serialStatus), HAL_MAX_DELAY);
 8000644:	1d3b      	adds	r3, r7, #4
 8000646:	4618      	mov	r0, r3
 8000648:	f7ff fde2 	bl	8000210 <strlen>
 800064c:	4603      	mov	r3, r0
 800064e:	b29a      	uxth	r2, r3
 8000650:	1d39      	adds	r1, r7, #4
 8000652:	f04f 33ff 	mov.w	r3, #4294967295
 8000656:	4805      	ldr	r0, [pc, #20]	; (800066c <manual_POR+0x7c>)
 8000658:	f003 f98f 	bl	800397a <HAL_UART_Transmit>
}
 800065c:	bf00      	nop
 800065e:	3710      	adds	r7, #16
 8000660:	46bd      	mov	sp, r7
 8000662:	bd80      	pop	{r7, pc}
 8000664:	40020800 	.word	0x40020800
 8000668:	08004a2c 	.word	0x08004a2c
 800066c:	200001ac 	.word	0x200001ac

08000670 <cc1101_init>:

void cc1101_init(bool state)
{
 8000670:	b580      	push	{r7, lr}
 8000672:	b082      	sub	sp, #8
 8000674:	af00      	add	r7, sp, #0
 8000676:	4603      	mov	r3, r0
 8000678:	71fb      	strb	r3, [r7, #7]
	if(state)
 800067a:	79fb      	ldrb	r3, [r7, #7]
 800067c:	2b00      	cmp	r3, #0
 800067e:	d002      	beq.n	8000686 <cc1101_init+0x16>
	{
		write_tx_cc1101_config();	// Konfiguracija tx cc1101 čipa
 8000680:	f000 f80d 	bl	800069e <write_tx_cc1101_config>
 8000684:	e001      	b.n	800068a <cc1101_init+0x1a>
	}
	else
	{
		write_rx_cc1101_config();	// Konfiguracija rx cc1101 čipa
 8000686:	f000 f87a 	bl	800077e <write_rx_cc1101_config>
	}
	command_strobe(SFTX);		// Flush TX FIFO buffer
 800068a:	203b      	movs	r0, #59	; 0x3b
 800068c:	f000 f8e8 	bl	8000860 <command_strobe>
	command_strobe(SFRX);		// Flush RX FIFO buffer
 8000690:	203a      	movs	r0, #58	; 0x3a
 8000692:	f000 f8e5 	bl	8000860 <command_strobe>

}
 8000696:	bf00      	nop
 8000698:	3708      	adds	r7, #8
 800069a:	46bd      	mov	sp, r7
 800069c:	bd80      	pop	{r7, pc}

0800069e <write_tx_cc1101_config>:
	write_single_byte(TEST0, CC1101_POSTAVKA_TEST0);
}


void write_tx_cc1101_config()
{
 800069e:	b580      	push	{r7, lr}
 80006a0:	af00      	add	r7, sp, #0
	write_single_byte(PATABLE, 0x60);
 80006a2:	2160      	movs	r1, #96	; 0x60
 80006a4:	203e      	movs	r0, #62	; 0x3e
 80006a6:	f000 fa53 	bl	8000b50 <write_single_byte>
	write_single_byte(IOCFG0, CC1101_POSTAVKA_IOCFG0);
 80006aa:	2106      	movs	r1, #6
 80006ac:	2002      	movs	r0, #2
 80006ae:	f000 fa4f 	bl	8000b50 <write_single_byte>
	write_single_byte(FIFOTHR, CC1101_POSTAVKA_FIFOTHR);
 80006b2:	2147      	movs	r1, #71	; 0x47
 80006b4:	2003      	movs	r0, #3
 80006b6:	f000 fa4b 	bl	8000b50 <write_single_byte>
	write_single_byte(PKTLEN, CC1101_POSTAVKA_PKTLEN);
 80006ba:	2104      	movs	r1, #4
 80006bc:	2006      	movs	r0, #6
 80006be:	f000 fa47 	bl	8000b50 <write_single_byte>
	write_single_byte(PKTCTRL0, CC1101_POSTAVKA_PKTCTRL0);
 80006c2:	2144      	movs	r1, #68	; 0x44
 80006c4:	2008      	movs	r0, #8
 80006c6:	f000 fa43 	bl	8000b50 <write_single_byte>
	write_single_byte(FSCTRL1, CC1101_POSTAVKA_FSCTRL1);
 80006ca:	2106      	movs	r1, #6
 80006cc:	200b      	movs	r0, #11
 80006ce:	f000 fa3f 	bl	8000b50 <write_single_byte>
	write_single_byte(FREQ2, CC1101_POSTAVKA_FREQ2);
 80006d2:	2110      	movs	r1, #16
 80006d4:	200d      	movs	r0, #13
 80006d6:	f000 fa3b 	bl	8000b50 <write_single_byte>
	write_single_byte(FREQ1, CC1101_POSTAVKA_FREQ1);
 80006da:	21b0      	movs	r1, #176	; 0xb0
 80006dc:	200e      	movs	r0, #14
 80006de:	f000 fa37 	bl	8000b50 <write_single_byte>
	write_single_byte(FREQ0, CC1101_POSTAVKA_FREQ0);
 80006e2:	2171      	movs	r1, #113	; 0x71
 80006e4:	200f      	movs	r0, #15
 80006e6:	f000 fa33 	bl	8000b50 <write_single_byte>
	write_single_byte(MDMCFG4, CC1101_POSTAVKA_MDMCFG4);
 80006ea:	21f5      	movs	r1, #245	; 0xf5
 80006ec:	2010      	movs	r0, #16
 80006ee:	f000 fa2f 	bl	8000b50 <write_single_byte>
	write_single_byte(MDMCFG3, CC1101_POSTAVKA_MDMCFG3);
 80006f2:	2183      	movs	r1, #131	; 0x83
 80006f4:	2011      	movs	r0, #17
 80006f6:	f000 fa2b 	bl	8000b50 <write_single_byte>
	write_single_byte(MDMCFG2, CC1101_POSTAVKA_MDMCFG2);
 80006fa:	2111      	movs	r1, #17
 80006fc:	2012      	movs	r0, #18
 80006fe:	f000 fa27 	bl	8000b50 <write_single_byte>
	write_single_byte(MDMCFG1, CC1101_POSTAVKA_MDMCFG1);
 8000702:	21a2      	movs	r1, #162	; 0xa2
 8000704:	2013      	movs	r0, #19
 8000706:	f000 fa23 	bl	8000b50 <write_single_byte>
	write_single_byte(DEVIATN, CC1101_POSTAVKA_DEVIATN);
 800070a:	2115      	movs	r1, #21
 800070c:	2015      	movs	r0, #21
 800070e:	f000 fa1f 	bl	8000b50 <write_single_byte>
	write_single_byte(MCSM0, CC1101_POSTAVKA_MCSM0);
 8000712:	2118      	movs	r1, #24
 8000714:	2018      	movs	r0, #24
 8000716:	f000 fa1b 	bl	8000b50 <write_single_byte>
	write_single_byte(FOCCFG, CC1101_POSTAVKA_FOCCFG);
 800071a:	2116      	movs	r1, #22
 800071c:	2019      	movs	r0, #25
 800071e:	f000 fa17 	bl	8000b50 <write_single_byte>
	write_single_byte(WORCTRL, CC1101_POSTAVKA_WORCTRL);
 8000722:	21fb      	movs	r1, #251	; 0xfb
 8000724:	2020      	movs	r0, #32
 8000726:	f000 fa13 	bl	8000b50 <write_single_byte>
	write_single_byte(FSCAL3, CC1101_POSTAVKA_FSCAL3);
 800072a:	21e9      	movs	r1, #233	; 0xe9
 800072c:	2023      	movs	r0, #35	; 0x23
 800072e:	f000 fa0f 	bl	8000b50 <write_single_byte>
	write_single_byte(FSCAL2, CC1101_POSTAVKA_FSCAL2);
 8000732:	212a      	movs	r1, #42	; 0x2a
 8000734:	2024      	movs	r0, #36	; 0x24
 8000736:	f000 fa0b 	bl	8000b50 <write_single_byte>
	write_single_byte(FSCAL1, CC1101_POSTAVKA_FSCAL1);
 800073a:	2100      	movs	r1, #0
 800073c:	2025      	movs	r0, #37	; 0x25
 800073e:	f000 fa07 	bl	8000b50 <write_single_byte>
	write_single_byte(FSCAL0, CC1101_POSTAVKA_FSCAL0);
 8000742:	211f      	movs	r1, #31
 8000744:	2026      	movs	r0, #38	; 0x26
 8000746:	f000 fa03 	bl	8000b50 <write_single_byte>
	write_single_byte(FSTEST, CC1101_POSTAVKA_FSTEST);
 800074a:	2159      	movs	r1, #89	; 0x59
 800074c:	2029      	movs	r0, #41	; 0x29
 800074e:	f000 f9ff 	bl	8000b50 <write_single_byte>
	write_single_byte(PTEST, CC1101_POSTAVKA_PTEST);
 8000752:	217f      	movs	r1, #127	; 0x7f
 8000754:	202a      	movs	r0, #42	; 0x2a
 8000756:	f000 f9fb 	bl	8000b50 <write_single_byte>
	write_single_byte(AGCTEST, CC1101_POSTAVKA_AGCTEST);
 800075a:	213f      	movs	r1, #63	; 0x3f
 800075c:	202b      	movs	r0, #43	; 0x2b
 800075e:	f000 f9f7 	bl	8000b50 <write_single_byte>
	write_single_byte(TEST2, CC1101_POSTAVKA_TEST2);
 8000762:	2181      	movs	r1, #129	; 0x81
 8000764:	202c      	movs	r0, #44	; 0x2c
 8000766:	f000 f9f3 	bl	8000b50 <write_single_byte>
	write_single_byte(TEST1, CC1101_POSTAVKA_TEST1);
 800076a:	2135      	movs	r1, #53	; 0x35
 800076c:	202d      	movs	r0, #45	; 0x2d
 800076e:	f000 f9ef 	bl	8000b50 <write_single_byte>
	write_single_byte(TEST0, CC1101_POSTAVKA_TEST0);
 8000772:	2109      	movs	r1, #9
 8000774:	202e      	movs	r0, #46	; 0x2e
 8000776:	f000 f9eb 	bl	8000b50 <write_single_byte>

}
 800077a:	bf00      	nop
 800077c:	bd80      	pop	{r7, pc}

0800077e <write_rx_cc1101_config>:

void write_rx_cc1101_config()
{
 800077e:	b580      	push	{r7, lr}
 8000780:	af00      	add	r7, sp, #0
	write_single_byte(PATABLE, 0x60);
 8000782:	2160      	movs	r1, #96	; 0x60
 8000784:	203e      	movs	r0, #62	; 0x3e
 8000786:	f000 f9e3 	bl	8000b50 <write_single_byte>
	write_single_byte(IOCFG0, CC1101_POSTAVKA_IOCFG0);
 800078a:	2106      	movs	r1, #6
 800078c:	2002      	movs	r0, #2
 800078e:	f000 f9df 	bl	8000b50 <write_single_byte>
	write_single_byte(FIFOTHR, CC1101_POSTAVKA_FIFOTHR);
 8000792:	2147      	movs	r1, #71	; 0x47
 8000794:	2003      	movs	r0, #3
 8000796:	f000 f9db 	bl	8000b50 <write_single_byte>
	write_single_byte(PKTLEN, CC1101_POSTAVKA_PKTLEN);
 800079a:	2104      	movs	r1, #4
 800079c:	2006      	movs	r0, #6
 800079e:	f000 f9d7 	bl	8000b50 <write_single_byte>
	write_single_byte(PKTCTRL0, CC1101_POSTAVKA_PKTCTRL0);
 80007a2:	2144      	movs	r1, #68	; 0x44
 80007a4:	2008      	movs	r0, #8
 80007a6:	f000 f9d3 	bl	8000b50 <write_single_byte>
	write_single_byte(FSCTRL1, CC1101_POSTAVKA_FSCTRL1);
 80007aa:	2106      	movs	r1, #6
 80007ac:	200b      	movs	r0, #11
 80007ae:	f000 f9cf 	bl	8000b50 <write_single_byte>
	write_single_byte(FREQ2, CC1101_POSTAVKA_FREQ2);
 80007b2:	2110      	movs	r1, #16
 80007b4:	200d      	movs	r0, #13
 80007b6:	f000 f9cb 	bl	8000b50 <write_single_byte>
	write_single_byte(FREQ1, CC1101_POSTAVKA_FREQ1);
 80007ba:	21b0      	movs	r1, #176	; 0xb0
 80007bc:	200e      	movs	r0, #14
 80007be:	f000 f9c7 	bl	8000b50 <write_single_byte>
	write_single_byte(FREQ0, CC1101_POSTAVKA_FREQ0);
 80007c2:	2171      	movs	r1, #113	; 0x71
 80007c4:	200f      	movs	r0, #15
 80007c6:	f000 f9c3 	bl	8000b50 <write_single_byte>
	write_single_byte(MDMCFG4, CC1101_POSTAVKA_MDMCFG4);
 80007ca:	21f5      	movs	r1, #245	; 0xf5
 80007cc:	2010      	movs	r0, #16
 80007ce:	f000 f9bf 	bl	8000b50 <write_single_byte>
	write_single_byte(MDMCFG3, CC1101_POSTAVKA_MDMCFG3);
 80007d2:	2183      	movs	r1, #131	; 0x83
 80007d4:	2011      	movs	r0, #17
 80007d6:	f000 f9bb 	bl	8000b50 <write_single_byte>
	write_single_byte(MDMCFG2, CC1101_POSTAVKA_MDMCFG2);
 80007da:	2111      	movs	r1, #17
 80007dc:	2012      	movs	r0, #18
 80007de:	f000 f9b7 	bl	8000b50 <write_single_byte>
	write_single_byte(MDMCFG1, CC1101_POSTAVKA_MDMCFG1);
 80007e2:	21a2      	movs	r1, #162	; 0xa2
 80007e4:	2013      	movs	r0, #19
 80007e6:	f000 f9b3 	bl	8000b50 <write_single_byte>
	write_single_byte(DEVIATN, CC1101_POSTAVKA_DEVIATN);
 80007ea:	2115      	movs	r1, #21
 80007ec:	2015      	movs	r0, #21
 80007ee:	f000 f9af 	bl	8000b50 <write_single_byte>
	write_single_byte(MCSM0, CC1101_POSTAVKA_MCSM0);
 80007f2:	2118      	movs	r1, #24
 80007f4:	2018      	movs	r0, #24
 80007f6:	f000 f9ab 	bl	8000b50 <write_single_byte>
	write_single_byte(FOCCFG, CC1101_POSTAVKA_FOCCFG);
 80007fa:	2116      	movs	r1, #22
 80007fc:	2019      	movs	r0, #25
 80007fe:	f000 f9a7 	bl	8000b50 <write_single_byte>
	write_single_byte(WORCTRL, CC1101_POSTAVKA_WORCTRL);
 8000802:	21fb      	movs	r1, #251	; 0xfb
 8000804:	2020      	movs	r0, #32
 8000806:	f000 f9a3 	bl	8000b50 <write_single_byte>
	write_single_byte(FSCAL3, CC1101_POSTAVKA_FSCAL3);
 800080a:	21e9      	movs	r1, #233	; 0xe9
 800080c:	2023      	movs	r0, #35	; 0x23
 800080e:	f000 f99f 	bl	8000b50 <write_single_byte>
	write_single_byte(FSCAL2, CC1101_POSTAVKA_FSCAL2);
 8000812:	212a      	movs	r1, #42	; 0x2a
 8000814:	2024      	movs	r0, #36	; 0x24
 8000816:	f000 f99b 	bl	8000b50 <write_single_byte>
	write_single_byte(FSCAL1, CC1101_POSTAVKA_FSCAL1);
 800081a:	2100      	movs	r1, #0
 800081c:	2025      	movs	r0, #37	; 0x25
 800081e:	f000 f997 	bl	8000b50 <write_single_byte>
	write_single_byte(FSCAL0, CC1101_POSTAVKA_FSCAL0);
 8000822:	211f      	movs	r1, #31
 8000824:	2026      	movs	r0, #38	; 0x26
 8000826:	f000 f993 	bl	8000b50 <write_single_byte>
	write_single_byte(FSTEST, CC1101_POSTAVKA_FSTEST);
 800082a:	2159      	movs	r1, #89	; 0x59
 800082c:	2029      	movs	r0, #41	; 0x29
 800082e:	f000 f98f 	bl	8000b50 <write_single_byte>
	write_single_byte(PTEST, CC1101_POSTAVKA_PTEST);
 8000832:	217f      	movs	r1, #127	; 0x7f
 8000834:	202a      	movs	r0, #42	; 0x2a
 8000836:	f000 f98b 	bl	8000b50 <write_single_byte>
	write_single_byte(AGCTEST, CC1101_POSTAVKA_AGCTEST);
 800083a:	213f      	movs	r1, #63	; 0x3f
 800083c:	202b      	movs	r0, #43	; 0x2b
 800083e:	f000 f987 	bl	8000b50 <write_single_byte>
	write_single_byte(TEST2, CC1101_POSTAVKA_TEST2);
 8000842:	2181      	movs	r1, #129	; 0x81
 8000844:	202c      	movs	r0, #44	; 0x2c
 8000846:	f000 f983 	bl	8000b50 <write_single_byte>
	write_single_byte(TEST1, CC1101_POSTAVKA_TEST1);
 800084a:	2135      	movs	r1, #53	; 0x35
 800084c:	202d      	movs	r0, #45	; 0x2d
 800084e:	f000 f97f 	bl	8000b50 <write_single_byte>
	write_single_byte(TEST0, CC1101_POSTAVKA_TEST0);
 8000852:	2109      	movs	r1, #9
 8000854:	202e      	movs	r0, #46	; 0x2e
 8000856:	f000 f97b 	bl	8000b50 <write_single_byte>

}
 800085a:	bf00      	nop
 800085c:	bd80      	pop	{r7, pc}
	...

08000860 <command_strobe>:

uint8_t command_strobe(uint8_t addr)
{
 8000860:	b580      	push	{r7, lr}
 8000862:	b08a      	sub	sp, #40	; 0x28
 8000864:	af02      	add	r7, sp, #8
 8000866:	4603      	mov	r3, r0
 8000868:	71fb      	strb	r3, [r7, #7]
	delay_us(1000);					// Postavljen delay na pocetak, zbog mogucih krivih podataka od prijasnjeg strobe-a
 800086a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800086e:	f000 fe61 	bl	8001534 <delay_us>
	HAL_StatusTypeDef SPI_status;
	char status_message[15];

	uint8_t status;
	SPI_CS_WRITE(0);
 8000872:	2000      	movs	r0, #0
 8000874:	f7ff fea2 	bl	80005bc <SPI_CS_WRITE>
	while(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_2));
 8000878:	bf00      	nop
 800087a:	2104      	movs	r1, #4
 800087c:	4829      	ldr	r0, [pc, #164]	; (8000924 <command_strobe+0xc4>)
 800087e:	f001 fa03 	bl	8001c88 <HAL_GPIO_ReadPin>
 8000882:	4603      	mov	r3, r0
 8000884:	2b00      	cmp	r3, #0
 8000886:	d1f8      	bne.n	800087a <command_strobe+0x1a>
	SPI_status = HAL_SPI_TransmitReceive(&hspi2, &addr, &status, 1, HAL_MAX_DELAY);
 8000888:	f107 020f 	add.w	r2, r7, #15
 800088c:	1df9      	adds	r1, r7, #7
 800088e:	f04f 33ff 	mov.w	r3, #4294967295
 8000892:	9300      	str	r3, [sp, #0]
 8000894:	2301      	movs	r3, #1
 8000896:	4824      	ldr	r0, [pc, #144]	; (8000928 <command_strobe+0xc8>)
 8000898:	f002 f8cb 	bl	8002a32 <HAL_SPI_TransmitReceive>
 800089c:	4603      	mov	r3, r0
 800089e:	77fb      	strb	r3, [r7, #31]
	SPI_CS_WRITE(1);
 80008a0:	2001      	movs	r0, #1
 80008a2:	f7ff fe8b 	bl	80005bc <SPI_CS_WRITE>
	switch(SPI_status)
 80008a6:	7ffb      	ldrb	r3, [r7, #31]
 80008a8:	2b03      	cmp	r3, #3
 80008aa:	d827      	bhi.n	80008fc <command_strobe+0x9c>
 80008ac:	a201      	add	r2, pc, #4	; (adr r2, 80008b4 <command_strobe+0x54>)
 80008ae:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80008b2:	bf00      	nop
 80008b4:	080008c5 	.word	0x080008c5
 80008b8:	080008d3 	.word	0x080008d3
 80008bc:	080008e1 	.word	0x080008e1
 80008c0:	080008ef 	.word	0x080008ef
	{
		case HAL_OK:
			sprintf(status_message, "HAL OK.\r\n");
 80008c4:	f107 0310 	add.w	r3, r7, #16
 80008c8:	4918      	ldr	r1, [pc, #96]	; (800092c <command_strobe+0xcc>)
 80008ca:	4618      	mov	r0, r3
 80008cc:	f003 fbfe 	bl	80040cc <siprintf>
			break;
 80008d0:	e014      	b.n	80008fc <command_strobe+0x9c>
		case HAL_ERROR:
			sprintf(status_message, "HAL ERROR.\r\n");
 80008d2:	f107 0310 	add.w	r3, r7, #16
 80008d6:	4916      	ldr	r1, [pc, #88]	; (8000930 <command_strobe+0xd0>)
 80008d8:	4618      	mov	r0, r3
 80008da:	f003 fbf7 	bl	80040cc <siprintf>
			break;
 80008de:	e00d      	b.n	80008fc <command_strobe+0x9c>
		case HAL_BUSY:
			sprintf(status_message, "HAL BUSY.\r\n");
 80008e0:	f107 0310 	add.w	r3, r7, #16
 80008e4:	4913      	ldr	r1, [pc, #76]	; (8000934 <command_strobe+0xd4>)
 80008e6:	4618      	mov	r0, r3
 80008e8:	f003 fbf0 	bl	80040cc <siprintf>
			break;
 80008ec:	e006      	b.n	80008fc <command_strobe+0x9c>
		case HAL_TIMEOUT:
			sprintf(status_message, "HAL TIMEOUT.\r\n");
 80008ee:	f107 0310 	add.w	r3, r7, #16
 80008f2:	4911      	ldr	r1, [pc, #68]	; (8000938 <command_strobe+0xd8>)
 80008f4:	4618      	mov	r0, r3
 80008f6:	f003 fbe9 	bl	80040cc <siprintf>
			break;
 80008fa:	bf00      	nop
	}
	HAL_UART_Transmit(&huart2, (uint8_t*)status_message, strlen(status_message), HAL_MAX_DELAY);
 80008fc:	f107 0310 	add.w	r3, r7, #16
 8000900:	4618      	mov	r0, r3
 8000902:	f7ff fc85 	bl	8000210 <strlen>
 8000906:	4603      	mov	r3, r0
 8000908:	b29a      	uxth	r2, r3
 800090a:	f107 0110 	add.w	r1, r7, #16
 800090e:	f04f 33ff 	mov.w	r3, #4294967295
 8000912:	480a      	ldr	r0, [pc, #40]	; (800093c <command_strobe+0xdc>)
 8000914:	f003 f831 	bl	800397a <HAL_UART_Transmit>

	return status;
 8000918:	7bfb      	ldrb	r3, [r7, #15]
}
 800091a:	4618      	mov	r0, r3
 800091c:	3720      	adds	r7, #32
 800091e:	46bd      	mov	sp, r7
 8000920:	bd80      	pop	{r7, pc}
 8000922:	bf00      	nop
 8000924:	40020800 	.word	0x40020800
 8000928:	20000078 	.word	0x20000078
 800092c:	08004a38 	.word	0x08004a38
 8000930:	08004a44 	.word	0x08004a44
 8000934:	08004a54 	.word	0x08004a54
 8000938:	08004a60 	.word	0x08004a60
 800093c:	200001ac 	.word	0x200001ac

08000940 <read_status_reg>:

// TREBAM JOS ODVOJENE FUNKCIJE ZA TX I RX FIFO I PATABLE!
uint8_t read_status_reg(uint8_t addr, uint8_t *statusByte)
{
 8000940:	b580      	push	{r7, lr}
 8000942:	b086      	sub	sp, #24
 8000944:	af02      	add	r7, sp, #8
 8000946:	4603      	mov	r3, r0
 8000948:	6039      	str	r1, [r7, #0]
 800094a:	71fb      	strb	r3, [r7, #7]
	uint8_t statusReg = addr | burst_byte_read;
 800094c:	79fb      	ldrb	r3, [r7, #7]
 800094e:	f063 033f 	orn	r3, r3, #63	; 0x3f
 8000952:	b2db      	uxtb	r3, r3
 8000954:	73fb      	strb	r3, [r7, #15]
	uint8_t statusRegValue;
	if(addr >= 0x30 && addr <= 0x3D)
 8000956:	79fb      	ldrb	r3, [r7, #7]
 8000958:	2b2f      	cmp	r3, #47	; 0x2f
 800095a:	d92c      	bls.n	80009b6 <read_status_reg+0x76>
 800095c:	79fb      	ldrb	r3, [r7, #7]
 800095e:	2b3d      	cmp	r3, #61	; 0x3d
 8000960:	d829      	bhi.n	80009b6 <read_status_reg+0x76>
	{
		SPI_CS_WRITE(0);
 8000962:	2000      	movs	r0, #0
 8000964:	f7ff fe2a 	bl	80005bc <SPI_CS_WRITE>
		while(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_2)){
 8000968:	e002      	b.n	8000970 <read_status_reg+0x30>
			delay_25ns(1);		//delay od 25ns
 800096a:	2001      	movs	r0, #1
 800096c:	f000 fdfc 	bl	8001568 <delay_25ns>
		while(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_2)){
 8000970:	2104      	movs	r1, #4
 8000972:	4813      	ldr	r0, [pc, #76]	; (80009c0 <read_status_reg+0x80>)
 8000974:	f001 f988 	bl	8001c88 <HAL_GPIO_ReadPin>
 8000978:	4603      	mov	r3, r0
 800097a:	2b00      	cmp	r3, #0
 800097c:	d1f5      	bne.n	800096a <read_status_reg+0x2a>
		}
		HAL_SPI_TransmitReceive(&hspi2, &statusReg, statusByte, 1, HAL_MAX_DELAY);
 800097e:	f107 010f 	add.w	r1, r7, #15
 8000982:	f04f 33ff 	mov.w	r3, #4294967295
 8000986:	9300      	str	r3, [sp, #0]
 8000988:	2301      	movs	r3, #1
 800098a:	683a      	ldr	r2, [r7, #0]
 800098c:	480d      	ldr	r0, [pc, #52]	; (80009c4 <read_status_reg+0x84>)
 800098e:	f002 f850 	bl	8002a32 <HAL_SPI_TransmitReceive>
		delay_25ns(4);		//delay od 100ns, cc1101 datasheet pg.30
 8000992:	2004      	movs	r0, #4
 8000994:	f000 fde8 	bl	8001568 <delay_25ns>
		HAL_SPI_TransmitReceive(&hspi2, NULL, &statusRegValue, 1, HAL_MAX_DELAY);
 8000998:	f107 020e 	add.w	r2, r7, #14
 800099c:	f04f 33ff 	mov.w	r3, #4294967295
 80009a0:	9300      	str	r3, [sp, #0]
 80009a2:	2301      	movs	r3, #1
 80009a4:	2100      	movs	r1, #0
 80009a6:	4807      	ldr	r0, [pc, #28]	; (80009c4 <read_status_reg+0x84>)
 80009a8:	f002 f843 	bl	8002a32 <HAL_SPI_TransmitReceive>
		SPI_CS_WRITE(1);
 80009ac:	2001      	movs	r0, #1
 80009ae:	f7ff fe05 	bl	80005bc <SPI_CS_WRITE>
		return statusRegValue;
 80009b2:	7bbb      	ldrb	r3, [r7, #14]
 80009b4:	e000      	b.n	80009b8 <read_status_reg+0x78>
	}
	else
	{
		return 1;		// Error: 1, oznacava da je start addr u krivom rasponu
 80009b6:	2301      	movs	r3, #1
	}
}
 80009b8:	4618      	mov	r0, r3
 80009ba:	3710      	adds	r7, #16
 80009bc:	46bd      	mov	sp, r7
 80009be:	bd80      	pop	{r7, pc}
 80009c0:	40020800 	.word	0x40020800
 80009c4:	20000078 	.word	0x20000078

080009c8 <receive_burst_byte_433>:

	return statusByte;
}

uint8_t receive_burst_byte_433(uint8_t *rxData)
{
 80009c8:	b580      	push	{r7, lr}
 80009ca:	b092      	sub	sp, #72	; 0x48
 80009cc:	af00      	add	r7, sp, #0
 80009ce:	6078      	str	r0, [r7, #4]
	uint8_t statusByte;
	char status_message[50];
	uint8_t RX_FIFO = 0x3F;
 80009d0:	233f      	movs	r3, #63	; 0x3f
 80009d2:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
	uint8_t statusRXByte;
	uint8_t num_rxBytes = 0;
 80009d6:	2300      	movs	r3, #0
 80009d8:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47

	num_rxBytes = read_status_reg(RXBYTES, &statusRXByte);
 80009dc:	f107 030b 	add.w	r3, r7, #11
 80009e0:	4619      	mov	r1, r3
 80009e2:	203b      	movs	r0, #59	; 0x3b
 80009e4:	f7ff ffac 	bl	8000940 <read_status_reg>
 80009e8:	4603      	mov	r3, r0
 80009ea:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
	num_rxBytes = num_rxBytes & 0x7F;
 80009ee:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 80009f2:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80009f6:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
	sprintf(status_message, "No. Bytes before: 0x%02X\r\n", num_rxBytes);
 80009fa:	f897 2047 	ldrb.w	r2, [r7, #71]	; 0x47
 80009fe:	f107 030c 	add.w	r3, r7, #12
 8000a02:	494e      	ldr	r1, [pc, #312]	; (8000b3c <receive_burst_byte_433+0x174>)
 8000a04:	4618      	mov	r0, r3
 8000a06:	f003 fb61 	bl	80040cc <siprintf>
	HAL_UART_Transmit(&huart2, (uint8_t*)status_message, strlen(status_message), HAL_MAX_DELAY);
 8000a0a:	f107 030c 	add.w	r3, r7, #12
 8000a0e:	4618      	mov	r0, r3
 8000a10:	f7ff fbfe 	bl	8000210 <strlen>
 8000a14:	4603      	mov	r3, r0
 8000a16:	b29a      	uxth	r2, r3
 8000a18:	f107 010c 	add.w	r1, r7, #12
 8000a1c:	f04f 33ff 	mov.w	r3, #4294967295
 8000a20:	4847      	ldr	r0, [pc, #284]	; (8000b40 <receive_burst_byte_433+0x178>)
 8000a22:	f002 ffaa 	bl	800397a <HAL_UART_Transmit>

	statusByte = command_strobe(SRX);			// Prebaci iz IDLE stanja u RX stanje
 8000a26:	2034      	movs	r0, #52	; 0x34
 8000a28:	f7ff ff1a 	bl	8000860 <command_strobe>
 8000a2c:	4603      	mov	r3, r0
 8000a2e:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
	delay_us(800);							// Vrijeme potrebno za tranziciju IDLE->RX + RX->IDLE
 8000a32:	f44f 7048 	mov.w	r0, #800	; 0x320
 8000a36:	f000 fd7d 	bl	8001534 <delay_us>
	//HAL_Delay(2000);				// Pošto je brzina 1.2kBaud, cca. 5 sekundi treba za +/-10 byte-a podataka.

	snprintf(status_message, sizeof(status_message), "ChipStatus1: 0x%02X\r\n", statusByte);
 8000a3a:	f897 303e 	ldrb.w	r3, [r7, #62]	; 0x3e
 8000a3e:	f107 000c 	add.w	r0, r7, #12
 8000a42:	4a40      	ldr	r2, [pc, #256]	; (8000b44 <receive_burst_byte_433+0x17c>)
 8000a44:	2132      	movs	r1, #50	; 0x32
 8000a46:	f003 fb0d 	bl	8004064 <sniprintf>
	HAL_UART_Transmit(&huart2, (uint8_t*)status_message, strlen(status_message), HAL_MAX_DELAY);
 8000a4a:	f107 030c 	add.w	r3, r7, #12
 8000a4e:	4618      	mov	r0, r3
 8000a50:	f7ff fbde 	bl	8000210 <strlen>
 8000a54:	4603      	mov	r3, r0
 8000a56:	b29a      	uxth	r2, r3
 8000a58:	f107 010c 	add.w	r1, r7, #12
 8000a5c:	f04f 33ff 	mov.w	r3, #4294967295
 8000a60:	4837      	ldr	r0, [pc, #220]	; (8000b40 <receive_burst_byte_433+0x178>)
 8000a62:	f002 ff8a 	bl	800397a <HAL_UART_Transmit>

	while(num_rxBytes < 4)
 8000a66:	e05f      	b.n	8000b28 <receive_burst_byte_433+0x160>
	{
		num_rxBytes = read_status_reg(RXBYTES, &statusRXByte);
 8000a68:	f107 030b 	add.w	r3, r7, #11
 8000a6c:	4619      	mov	r1, r3
 8000a6e:	203b      	movs	r0, #59	; 0x3b
 8000a70:	f7ff ff66 	bl	8000940 <read_status_reg>
 8000a74:	4603      	mov	r3, r0
 8000a76:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
		num_rxBytes = num_rxBytes & 0x7F;
 8000a7a:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 8000a7e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8000a82:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
		sprintf(status_message, "No. Bytes after: 0x%02X\r\n", num_rxBytes);
 8000a86:	f897 2047 	ldrb.w	r2, [r7, #71]	; 0x47
 8000a8a:	f107 030c 	add.w	r3, r7, #12
 8000a8e:	492e      	ldr	r1, [pc, #184]	; (8000b48 <receive_burst_byte_433+0x180>)
 8000a90:	4618      	mov	r0, r3
 8000a92:	f003 fb1b 	bl	80040cc <siprintf>
		HAL_UART_Transmit(&huart2, (uint8_t*)status_message, strlen(status_message), HAL_MAX_DELAY);
 8000a96:	f107 030c 	add.w	r3, r7, #12
 8000a9a:	4618      	mov	r0, r3
 8000a9c:	f7ff fbb8 	bl	8000210 <strlen>
 8000aa0:	4603      	mov	r3, r0
 8000aa2:	b29a      	uxth	r2, r3
 8000aa4:	f107 010c 	add.w	r1, r7, #12
 8000aa8:	f04f 33ff 	mov.w	r3, #4294967295
 8000aac:	4824      	ldr	r0, [pc, #144]	; (8000b40 <receive_burst_byte_433+0x178>)
 8000aae:	f002 ff64 	bl	800397a <HAL_UART_Transmit>
		HAL_Delay(3500);
 8000ab2:	f640 50ac 	movw	r0, #3500	; 0xdac
 8000ab6:	f000 fe4d 	bl	8001754 <HAL_Delay>

		if(num_rxBytes>2)
 8000aba:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 8000abe:	2b02      	cmp	r3, #2
 8000ac0:	d932      	bls.n	8000b28 <receive_burst_byte_433+0x160>
		{
			read_burst_byte(RX_FIFO, &statusByte, rxData, num_rxBytes);	//Napuni TX FIFO
 8000ac2:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 8000ac6:	f107 013e 	add.w	r1, r7, #62	; 0x3e
 8000aca:	f897 003f 	ldrb.w	r0, [r7, #63]	; 0x3f
 8000ace:	687a      	ldr	r2, [r7, #4]
 8000ad0:	f000 f87e 	bl	8000bd0 <read_burst_byte>
			delay_us(1000);					// Vrijeme potrebno za tranziciju IDLE->RX + RX->IDLE
 8000ad4:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000ad8:	f000 fd2c 	bl	8001534 <delay_us>
			for(int i=0; i < num_rxBytes; i++)
 8000adc:	2300      	movs	r3, #0
 8000ade:	643b      	str	r3, [r7, #64]	; 0x40
 8000ae0:	e01a      	b.n	8000b18 <receive_burst_byte_433+0x150>
			{
				sprintf(status_message, "RXDATA[%d]: %d\r\n", i,rxData[i]);
 8000ae2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8000ae4:	687a      	ldr	r2, [r7, #4]
 8000ae6:	4413      	add	r3, r2
 8000ae8:	781b      	ldrb	r3, [r3, #0]
 8000aea:	f107 000c 	add.w	r0, r7, #12
 8000aee:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8000af0:	4916      	ldr	r1, [pc, #88]	; (8000b4c <receive_burst_byte_433+0x184>)
 8000af2:	f003 faeb 	bl	80040cc <siprintf>
				HAL_UART_Transmit(&huart2, (uint8_t*)status_message, strlen(status_message), HAL_MAX_DELAY);
 8000af6:	f107 030c 	add.w	r3, r7, #12
 8000afa:	4618      	mov	r0, r3
 8000afc:	f7ff fb88 	bl	8000210 <strlen>
 8000b00:	4603      	mov	r3, r0
 8000b02:	b29a      	uxth	r2, r3
 8000b04:	f107 010c 	add.w	r1, r7, #12
 8000b08:	f04f 33ff 	mov.w	r3, #4294967295
 8000b0c:	480c      	ldr	r0, [pc, #48]	; (8000b40 <receive_burst_byte_433+0x178>)
 8000b0e:	f002 ff34 	bl	800397a <HAL_UART_Transmit>
			for(int i=0; i < num_rxBytes; i++)
 8000b12:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8000b14:	3301      	adds	r3, #1
 8000b16:	643b      	str	r3, [r7, #64]	; 0x40
 8000b18:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 8000b1c:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8000b1e:	429a      	cmp	r2, r3
 8000b20:	dbdf      	blt.n	8000ae2 <receive_burst_byte_433+0x11a>
			}

			command_strobe(SFRX);			// Flush RX FIFO
 8000b22:	203a      	movs	r0, #58	; 0x3a
 8000b24:	f7ff fe9c 	bl	8000860 <command_strobe>
	while(num_rxBytes < 4)
 8000b28:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 8000b2c:	2b03      	cmp	r3, #3
 8000b2e:	d99b      	bls.n	8000a68 <receive_burst_byte_433+0xa0>
		}
	}
	return statusByte;
 8000b30:	f897 303e 	ldrb.w	r3, [r7, #62]	; 0x3e
}
 8000b34:	4618      	mov	r0, r3
 8000b36:	3748      	adds	r7, #72	; 0x48
 8000b38:	46bd      	mov	sp, r7
 8000b3a:	bd80      	pop	{r7, pc}
 8000b3c:	08004a70 	.word	0x08004a70
 8000b40:	200001ac 	.word	0x200001ac
 8000b44:	08004a8c 	.word	0x08004a8c
 8000b48:	08004aa4 	.word	0x08004aa4
 8000b4c:	08004ac0 	.word	0x08004ac0

08000b50 <write_single_byte>:
	SPI_CS_WRITE(1);
	return dataRx;
}

uint8_t write_single_byte(uint8_t addr, uint8_t txData)
{
 8000b50:	b580      	push	{r7, lr}
 8000b52:	b086      	sub	sp, #24
 8000b54:	af02      	add	r7, sp, #8
 8000b56:	4603      	mov	r3, r0
 8000b58:	460a      	mov	r2, r1
 8000b5a:	71fb      	strb	r3, [r7, #7]
 8000b5c:	4613      	mov	r3, r2
 8000b5e:	71bb      	strb	r3, [r7, #6]
	uint8_t statusByte;
	uint8_t txAddr = addr | single_byte_write;
 8000b60:	79fb      	ldrb	r3, [r7, #7]
 8000b62:	73bb      	strb	r3, [r7, #14]
	uint8_t dataTx = txData;
 8000b64:	79bb      	ldrb	r3, [r7, #6]
 8000b66:	737b      	strb	r3, [r7, #13]
	SPI_CS_WRITE(0);
 8000b68:	2000      	movs	r0, #0
 8000b6a:	f7ff fd27 	bl	80005bc <SPI_CS_WRITE>
	while(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_2)){
 8000b6e:	e002      	b.n	8000b76 <write_single_byte+0x26>
		delay_25ns(1);		//delay od 25ns
 8000b70:	2001      	movs	r0, #1
 8000b72:	f000 fcf9 	bl	8001568 <delay_25ns>
	while(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_2)){
 8000b76:	2104      	movs	r1, #4
 8000b78:	4813      	ldr	r0, [pc, #76]	; (8000bc8 <write_single_byte+0x78>)
 8000b7a:	f001 f885 	bl	8001c88 <HAL_GPIO_ReadPin>
 8000b7e:	4603      	mov	r3, r0
 8000b80:	2b00      	cmp	r3, #0
 8000b82:	d1f5      	bne.n	8000b70 <write_single_byte+0x20>
	}
	HAL_SPI_TransmitReceive(&hspi2, &txAddr, &statusByte, 1, HAL_MAX_DELAY);
 8000b84:	f107 020f 	add.w	r2, r7, #15
 8000b88:	f107 010e 	add.w	r1, r7, #14
 8000b8c:	f04f 33ff 	mov.w	r3, #4294967295
 8000b90:	9300      	str	r3, [sp, #0]
 8000b92:	2301      	movs	r3, #1
 8000b94:	480d      	ldr	r0, [pc, #52]	; (8000bcc <write_single_byte+0x7c>)
 8000b96:	f001 ff4c 	bl	8002a32 <HAL_SPI_TransmitReceive>
	delay_25ns(3);		//delay od 75ns, cc1101 datasheet pg.30
 8000b9a:	2003      	movs	r0, #3
 8000b9c:	f000 fce4 	bl	8001568 <delay_25ns>
	HAL_SPI_TransmitReceive(&hspi2, &dataTx, &statusByte, 1, HAL_MAX_DELAY);
 8000ba0:	f107 020f 	add.w	r2, r7, #15
 8000ba4:	f107 010d 	add.w	r1, r7, #13
 8000ba8:	f04f 33ff 	mov.w	r3, #4294967295
 8000bac:	9300      	str	r3, [sp, #0]
 8000bae:	2301      	movs	r3, #1
 8000bb0:	4806      	ldr	r0, [pc, #24]	; (8000bcc <write_single_byte+0x7c>)
 8000bb2:	f001 ff3e 	bl	8002a32 <HAL_SPI_TransmitReceive>
	SPI_CS_WRITE(1);
 8000bb6:	2001      	movs	r0, #1
 8000bb8:	f7ff fd00 	bl	80005bc <SPI_CS_WRITE>
	return statusByte;
 8000bbc:	7bfb      	ldrb	r3, [r7, #15]
}
 8000bbe:	4618      	mov	r0, r3
 8000bc0:	3710      	adds	r7, #16
 8000bc2:	46bd      	mov	sp, r7
 8000bc4:	bd80      	pop	{r7, pc}
 8000bc6:	bf00      	nop
 8000bc8:	40020800 	.word	0x40020800
 8000bcc:	20000078 	.word	0x20000078

08000bd0 <read_burst_byte>:

void read_burst_byte(uint8_t startAddr, uint8_t *statusByte, uint8_t *rxData, uint8_t len)
{
 8000bd0:	b580      	push	{r7, lr}
 8000bd2:	b088      	sub	sp, #32
 8000bd4:	af02      	add	r7, sp, #8
 8000bd6:	60b9      	str	r1, [r7, #8]
 8000bd8:	607a      	str	r2, [r7, #4]
 8000bda:	461a      	mov	r2, r3
 8000bdc:	4603      	mov	r3, r0
 8000bde:	73fb      	strb	r3, [r7, #15]
 8000be0:	4613      	mov	r3, r2
 8000be2:	73bb      	strb	r3, [r7, #14]
	if(startAddr <= 0x2F || startAddr == 0x3E || startAddr == 0x3F)
 8000be4:	7bfb      	ldrb	r3, [r7, #15]
 8000be6:	2b2f      	cmp	r3, #47	; 0x2f
 8000be8:	d905      	bls.n	8000bf6 <read_burst_byte+0x26>
 8000bea:	7bfb      	ldrb	r3, [r7, #15]
 8000bec:	2b3e      	cmp	r3, #62	; 0x3e
 8000bee:	d002      	beq.n	8000bf6 <read_burst_byte+0x26>
 8000bf0:	7bfb      	ldrb	r3, [r7, #15]
 8000bf2:	2b3f      	cmp	r3, #63	; 0x3f
 8000bf4:	d144      	bne.n	8000c80 <read_burst_byte+0xb0>
	{
		uint8_t addr = startAddr | burst_byte_read;
 8000bf6:	7bfb      	ldrb	r3, [r7, #15]
 8000bf8:	f063 033f 	orn	r3, r3, #63	; 0x3f
 8000bfc:	b2db      	uxtb	r3, r3
 8000bfe:	74fb      	strb	r3, [r7, #19]
		SPI_CS_WRITE(0);
 8000c00:	2000      	movs	r0, #0
 8000c02:	f7ff fcdb 	bl	80005bc <SPI_CS_WRITE>
		while(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_2)){
 8000c06:	e002      	b.n	8000c0e <read_burst_byte+0x3e>
			delay_25ns(1);		//delay od 25ns
 8000c08:	2001      	movs	r0, #1
 8000c0a:	f000 fcad 	bl	8001568 <delay_25ns>
		while(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_2)){
 8000c0e:	2104      	movs	r1, #4
 8000c10:	481f      	ldr	r0, [pc, #124]	; (8000c90 <read_burst_byte+0xc0>)
 8000c12:	f001 f839 	bl	8001c88 <HAL_GPIO_ReadPin>
 8000c16:	4603      	mov	r3, r0
 8000c18:	2b00      	cmp	r3, #0
 8000c1a:	d1f5      	bne.n	8000c08 <read_burst_byte+0x38>
		}
		HAL_SPI_TransmitReceive(&hspi2, &addr, statusByte, 1, HAL_MAX_DELAY);
 8000c1c:	f107 0113 	add.w	r1, r7, #19
 8000c20:	f04f 33ff 	mov.w	r3, #4294967295
 8000c24:	9300      	str	r3, [sp, #0]
 8000c26:	2301      	movs	r3, #1
 8000c28:	68ba      	ldr	r2, [r7, #8]
 8000c2a:	481a      	ldr	r0, [pc, #104]	; (8000c94 <read_burst_byte+0xc4>)
 8000c2c:	f001 ff01 	bl	8002a32 <HAL_SPI_TransmitReceive>
		delay_25ns(4);		//delay od 100ns, cc1101 datasheet pg.30
 8000c30:	2004      	movs	r0, #4
 8000c32:	f000 fc99 	bl	8001568 <delay_25ns>
		for(int i=0; i < len; i++)
 8000c36:	2300      	movs	r3, #0
 8000c38:	617b      	str	r3, [r7, #20]
 8000c3a:	e019      	b.n	8000c70 <read_burst_byte+0xa0>
		{
			HAL_SPI_TransmitReceive(&hspi2, NULL, &rxData[i], 1, HAL_MAX_DELAY);
 8000c3c:	697b      	ldr	r3, [r7, #20]
 8000c3e:	687a      	ldr	r2, [r7, #4]
 8000c40:	441a      	add	r2, r3
 8000c42:	f04f 33ff 	mov.w	r3, #4294967295
 8000c46:	9300      	str	r3, [sp, #0]
 8000c48:	2301      	movs	r3, #1
 8000c4a:	2100      	movs	r1, #0
 8000c4c:	4811      	ldr	r0, [pc, #68]	; (8000c94 <read_burst_byte+0xc4>)
 8000c4e:	f001 fef0 	bl	8002a32 <HAL_SPI_TransmitReceive>
			if(i<(len-1))
 8000c52:	7bbb      	ldrb	r3, [r7, #14]
 8000c54:	3b01      	subs	r3, #1
 8000c56:	697a      	ldr	r2, [r7, #20]
 8000c58:	429a      	cmp	r2, r3
 8000c5a:	da03      	bge.n	8000c64 <read_burst_byte+0x94>
			{
				delay_25ns(4);		//delay od 100ns, cc1101 datasheet pg.30
 8000c5c:	2004      	movs	r0, #4
 8000c5e:	f000 fc83 	bl	8001568 <delay_25ns>
 8000c62:	e002      	b.n	8000c6a <read_burst_byte+0x9a>
			}
			else
			{
				delay_25ns(1);
 8000c64:	2001      	movs	r0, #1
 8000c66:	f000 fc7f 	bl	8001568 <delay_25ns>
		for(int i=0; i < len; i++)
 8000c6a:	697b      	ldr	r3, [r7, #20]
 8000c6c:	3301      	adds	r3, #1
 8000c6e:	617b      	str	r3, [r7, #20]
 8000c70:	7bbb      	ldrb	r3, [r7, #14]
 8000c72:	697a      	ldr	r2, [r7, #20]
 8000c74:	429a      	cmp	r2, r3
 8000c76:	dbe1      	blt.n	8000c3c <read_burst_byte+0x6c>
			}
		}
		SPI_CS_WRITE(1);
 8000c78:	2001      	movs	r0, #1
 8000c7a:	f7ff fc9f 	bl	80005bc <SPI_CS_WRITE>
	{
 8000c7e:	e003      	b.n	8000c88 <read_burst_byte+0xb8>
	}
	else
	{
		*statusByte = 1;		// Error: 1, oznacava da je start addr u krivom rasponu
 8000c80:	68bb      	ldr	r3, [r7, #8]
 8000c82:	2201      	movs	r2, #1
 8000c84:	701a      	strb	r2, [r3, #0]
	}

}
 8000c86:	bf00      	nop
 8000c88:	bf00      	nop
 8000c8a:	3718      	adds	r7, #24
 8000c8c:	46bd      	mov	sp, r7
 8000c8e:	bd80      	pop	{r7, pc}
 8000c90:	40020800 	.word	0x40020800
 8000c94:	20000078 	.word	0x20000078

08000c98 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8000c98:	b580      	push	{r7, lr}
 8000c9a:	b08a      	sub	sp, #40	; 0x28
 8000c9c:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c9e:	f107 0314 	add.w	r3, r7, #20
 8000ca2:	2200      	movs	r2, #0
 8000ca4:	601a      	str	r2, [r3, #0]
 8000ca6:	605a      	str	r2, [r3, #4]
 8000ca8:	609a      	str	r2, [r3, #8]
 8000caa:	60da      	str	r2, [r3, #12]
 8000cac:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000cae:	2300      	movs	r3, #0
 8000cb0:	613b      	str	r3, [r7, #16]
 8000cb2:	4b37      	ldr	r3, [pc, #220]	; (8000d90 <MX_GPIO_Init+0xf8>)
 8000cb4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000cb6:	4a36      	ldr	r2, [pc, #216]	; (8000d90 <MX_GPIO_Init+0xf8>)
 8000cb8:	f043 0304 	orr.w	r3, r3, #4
 8000cbc:	6313      	str	r3, [r2, #48]	; 0x30
 8000cbe:	4b34      	ldr	r3, [pc, #208]	; (8000d90 <MX_GPIO_Init+0xf8>)
 8000cc0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000cc2:	f003 0304 	and.w	r3, r3, #4
 8000cc6:	613b      	str	r3, [r7, #16]
 8000cc8:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000cca:	2300      	movs	r3, #0
 8000ccc:	60fb      	str	r3, [r7, #12]
 8000cce:	4b30      	ldr	r3, [pc, #192]	; (8000d90 <MX_GPIO_Init+0xf8>)
 8000cd0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000cd2:	4a2f      	ldr	r2, [pc, #188]	; (8000d90 <MX_GPIO_Init+0xf8>)
 8000cd4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000cd8:	6313      	str	r3, [r2, #48]	; 0x30
 8000cda:	4b2d      	ldr	r3, [pc, #180]	; (8000d90 <MX_GPIO_Init+0xf8>)
 8000cdc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000cde:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000ce2:	60fb      	str	r3, [r7, #12]
 8000ce4:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000ce6:	2300      	movs	r3, #0
 8000ce8:	60bb      	str	r3, [r7, #8]
 8000cea:	4b29      	ldr	r3, [pc, #164]	; (8000d90 <MX_GPIO_Init+0xf8>)
 8000cec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000cee:	4a28      	ldr	r2, [pc, #160]	; (8000d90 <MX_GPIO_Init+0xf8>)
 8000cf0:	f043 0301 	orr.w	r3, r3, #1
 8000cf4:	6313      	str	r3, [r2, #48]	; 0x30
 8000cf6:	4b26      	ldr	r3, [pc, #152]	; (8000d90 <MX_GPIO_Init+0xf8>)
 8000cf8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000cfa:	f003 0301 	and.w	r3, r3, #1
 8000cfe:	60bb      	str	r3, [r7, #8]
 8000d00:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000d02:	2300      	movs	r3, #0
 8000d04:	607b      	str	r3, [r7, #4]
 8000d06:	4b22      	ldr	r3, [pc, #136]	; (8000d90 <MX_GPIO_Init+0xf8>)
 8000d08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000d0a:	4a21      	ldr	r2, [pc, #132]	; (8000d90 <MX_GPIO_Init+0xf8>)
 8000d0c:	f043 0302 	orr.w	r3, r3, #2
 8000d10:	6313      	str	r3, [r2, #48]	; 0x30
 8000d12:	4b1f      	ldr	r3, [pc, #124]	; (8000d90 <MX_GPIO_Init+0xf8>)
 8000d14:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000d16:	f003 0302 	and.w	r3, r3, #2
 8000d1a:	607b      	str	r3, [r7, #4]
 8000d1c:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 8000d1e:	2200      	movs	r2, #0
 8000d20:	2120      	movs	r1, #32
 8000d22:	481c      	ldr	r0, [pc, #112]	; (8000d94 <MX_GPIO_Init+0xfc>)
 8000d24:	f000 ffc8 	bl	8001cb8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(SPI2_CS_GPIO_Port, SPI2_CS_Pin, GPIO_PIN_SET);
 8000d28:	2201      	movs	r2, #1
 8000d2a:	2120      	movs	r1, #32
 8000d2c:	481a      	ldr	r0, [pc, #104]	; (8000d98 <MX_GPIO_Init+0x100>)
 8000d2e:	f000 ffc3 	bl	8001cb8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = B1_Pin;
 8000d32:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000d36:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8000d38:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8000d3c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d3e:	2300      	movs	r3, #0
 8000d40:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8000d42:	f107 0314 	add.w	r3, r7, #20
 8000d46:	4619      	mov	r1, r3
 8000d48:	4814      	ldr	r0, [pc, #80]	; (8000d9c <MX_GPIO_Init+0x104>)
 8000d4a:	f000 fe09 	bl	8001960 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = LD2_Pin;
 8000d4e:	2320      	movs	r3, #32
 8000d50:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d52:	2301      	movs	r3, #1
 8000d54:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d56:	2300      	movs	r3, #0
 8000d58:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d5a:	2300      	movs	r3, #0
 8000d5c:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 8000d5e:	f107 0314 	add.w	r3, r7, #20
 8000d62:	4619      	mov	r1, r3
 8000d64:	480b      	ldr	r0, [pc, #44]	; (8000d94 <MX_GPIO_Init+0xfc>)
 8000d66:	f000 fdfb 	bl	8001960 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = SPI2_CS_Pin;
 8000d6a:	2320      	movs	r3, #32
 8000d6c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d6e:	2301      	movs	r3, #1
 8000d70:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d72:	2300      	movs	r3, #0
 8000d74:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d76:	2300      	movs	r3, #0
 8000d78:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(SPI2_CS_GPIO_Port, &GPIO_InitStruct);
 8000d7a:	f107 0314 	add.w	r3, r7, #20
 8000d7e:	4619      	mov	r1, r3
 8000d80:	4805      	ldr	r0, [pc, #20]	; (8000d98 <MX_GPIO_Init+0x100>)
 8000d82:	f000 fded 	bl	8001960 <HAL_GPIO_Init>

}
 8000d86:	bf00      	nop
 8000d88:	3728      	adds	r7, #40	; 0x28
 8000d8a:	46bd      	mov	sp, r7
 8000d8c:	bd80      	pop	{r7, pc}
 8000d8e:	bf00      	nop
 8000d90:	40023800 	.word	0x40023800
 8000d94:	40020000 	.word	0x40020000
 8000d98:	40020400 	.word	0x40020400
 8000d9c:	40020800 	.word	0x40020800

08000da0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000da0:	b580      	push	{r7, lr}
 8000da2:	b09a      	sub	sp, #104	; 0x68
 8000da4:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000da6:	f000 fc93 	bl	80016d0 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000daa:	f000 f89b 	bl	8000ee4 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000dae:	f7ff ff73 	bl	8000c98 <MX_GPIO_Init>
  MX_SPI2_Init();
 8000db2:	f000 f91d 	bl	8000ff0 <MX_SPI2_Init>
  MX_TIM1_Init();
 8000db6:	f000 faeb 	bl	8001390 <MX_TIM1_Init>
  MX_TIM2_Init();
 8000dba:	f000 fb39 	bl	8001430 <MX_TIM2_Init>
  MX_USART2_UART_Init();
 8000dbe:	f000 fbeb 	bl	8001598 <MX_USART2_UART_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start(&htim1);
 8000dc2:	4841      	ldr	r0, [pc, #260]	; (8000ec8 <main+0x128>)
 8000dc4:	f002 f8f2 	bl	8002fac <HAL_TIM_Base_Start>
  HAL_TIM_Base_Start(&htim2);
 8000dc8:	4840      	ldr	r0, [pc, #256]	; (8000ecc <main+0x12c>)
 8000dca:	f002 f8ef 	bl	8002fac <HAL_TIM_Base_Start>

//  uint8_t cnt = 0;
  uint8_t rxData[32];
  uint8_t status = 0x77;
 8000dce:	2377      	movs	r3, #119	; 0x77
 8000dd0:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
  uint8_t RXBytesStatus;
  char serialStatus[50];
  char aTxBuffer[] = "ovdje1\r\n";
 8000dd4:	4a3e      	ldr	r2, [pc, #248]	; (8000ed0 <main+0x130>)
 8000dd6:	1d3b      	adds	r3, r7, #4
 8000dd8:	ca07      	ldmia	r2, {r0, r1, r2}
 8000dda:	c303      	stmia	r3!, {r0, r1}
 8000ddc:	701a      	strb	r2, [r3, #0]
  HAL_UART_Transmit(&huart2, (uint8_t*)aTxBuffer, strlen(aTxBuffer), HAL_MAX_DELAY);
 8000dde:	1d3b      	adds	r3, r7, #4
 8000de0:	4618      	mov	r0, r3
 8000de2:	f7ff fa15 	bl	8000210 <strlen>
 8000de6:	4603      	mov	r3, r0
 8000de8:	b29a      	uxth	r2, r3
 8000dea:	1d39      	adds	r1, r7, #4
 8000dec:	f04f 33ff 	mov.w	r3, #4294967295
 8000df0:	4838      	ldr	r0, [pc, #224]	; (8000ed4 <main+0x134>)
 8000df2:	f002 fdc2 	bl	800397a <HAL_UART_Transmit>
  manual_POR();
 8000df6:	f7ff fbfb 	bl	80005f0 <manual_POR>
  cc1101_init(0);
 8000dfa:	2000      	movs	r0, #0
 8000dfc:	f7ff fc38 	bl	8000670 <cc1101_init>

  status = command_strobe(SNOP);
 8000e00:	203d      	movs	r0, #61	; 0x3d
 8000e02:	f7ff fd2d 	bl	8000860 <command_strobe>
 8000e06:	4603      	mov	r3, r0
 8000e08:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
  snprintf(serialStatus, sizeof(serialStatus), "0x%02X\r\n", status);
 8000e0c:	f897 3043 	ldrb.w	r3, [r7, #67]	; 0x43
 8000e10:	f107 0010 	add.w	r0, r7, #16
 8000e14:	4a30      	ldr	r2, [pc, #192]	; (8000ed8 <main+0x138>)
 8000e16:	2132      	movs	r1, #50	; 0x32
 8000e18:	f003 f924 	bl	8004064 <sniprintf>
  HAL_UART_Transmit(&huart2, (uint8_t*)serialStatus, strlen(serialStatus), HAL_MAX_DELAY);
 8000e1c:	f107 0310 	add.w	r3, r7, #16
 8000e20:	4618      	mov	r0, r3
 8000e22:	f7ff f9f5 	bl	8000210 <strlen>
 8000e26:	4603      	mov	r3, r0
 8000e28:	b29a      	uxth	r2, r3
 8000e2a:	f107 0110 	add.w	r1, r7, #16
 8000e2e:	f04f 33ff 	mov.w	r3, #4294967295
 8000e32:	4828      	ldr	r0, [pc, #160]	; (8000ed4 <main+0x134>)
 8000e34:	f002 fda1 	bl	800397a <HAL_UART_Transmit>
  /* USER CODE BEGIN WHILE */
  while (1)
  {
//	  char aTxBuffer[32];
//	  HAL_UART_Transmit(&huart2, (uint8_t*)aTxBuffer, strlen(aTxBuffer), HAL_MAX_DELAY);
	  HAL_Delay(2000);
 8000e38:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 8000e3c:	f000 fc8a 	bl	8001754 <HAL_Delay>
	  RXBytesStatus = read_status_reg(RXBYTES, &status);
 8000e40:	f107 0343 	add.w	r3, r7, #67	; 0x43
 8000e44:	4619      	mov	r1, r3
 8000e46:	203b      	movs	r0, #59	; 0x3b
 8000e48:	f7ff fd7a 	bl	8000940 <read_status_reg>
 8000e4c:	4603      	mov	r3, r0
 8000e4e:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
	  snprintf(serialStatus, sizeof(serialStatus), "RXBYTES_before: 0x%02X\r\n", RXBytesStatus);
 8000e52:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 8000e56:	f107 0010 	add.w	r0, r7, #16
 8000e5a:	4a20      	ldr	r2, [pc, #128]	; (8000edc <main+0x13c>)
 8000e5c:	2132      	movs	r1, #50	; 0x32
 8000e5e:	f003 f901 	bl	8004064 <sniprintf>
	  HAL_UART_Transmit(&huart2, (uint8_t*)serialStatus, strlen(serialStatus), HAL_MAX_DELAY);
 8000e62:	f107 0310 	add.w	r3, r7, #16
 8000e66:	4618      	mov	r0, r3
 8000e68:	f7ff f9d2 	bl	8000210 <strlen>
 8000e6c:	4603      	mov	r3, r0
 8000e6e:	b29a      	uxth	r2, r3
 8000e70:	f107 0110 	add.w	r1, r7, #16
 8000e74:	f04f 33ff 	mov.w	r3, #4294967295
 8000e78:	4816      	ldr	r0, [pc, #88]	; (8000ed4 <main+0x134>)
 8000e7a:	f002 fd7e 	bl	800397a <HAL_UART_Transmit>

	  receive_burst_byte_433(rxData);
 8000e7e:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8000e82:	4618      	mov	r0, r3
 8000e84:	f7ff fda0 	bl	80009c8 <receive_burst_byte_433>

	  RXBytesStatus = read_status_reg(RXBYTES, &status);
 8000e88:	f107 0343 	add.w	r3, r7, #67	; 0x43
 8000e8c:	4619      	mov	r1, r3
 8000e8e:	203b      	movs	r0, #59	; 0x3b
 8000e90:	f7ff fd56 	bl	8000940 <read_status_reg>
 8000e94:	4603      	mov	r3, r0
 8000e96:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
	  snprintf(serialStatus, sizeof(serialStatus), "RXBYTES_after: 0x%02X\r\n", RXBytesStatus);
 8000e9a:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 8000e9e:	f107 0010 	add.w	r0, r7, #16
 8000ea2:	4a0f      	ldr	r2, [pc, #60]	; (8000ee0 <main+0x140>)
 8000ea4:	2132      	movs	r1, #50	; 0x32
 8000ea6:	f003 f8dd 	bl	8004064 <sniprintf>
	  HAL_UART_Transmit(&huart2, (uint8_t*)serialStatus, strlen(serialStatus), HAL_MAX_DELAY);
 8000eaa:	f107 0310 	add.w	r3, r7, #16
 8000eae:	4618      	mov	r0, r3
 8000eb0:	f7ff f9ae 	bl	8000210 <strlen>
 8000eb4:	4603      	mov	r3, r0
 8000eb6:	b29a      	uxth	r2, r3
 8000eb8:	f107 0110 	add.w	r1, r7, #16
 8000ebc:	f04f 33ff 	mov.w	r3, #4294967295
 8000ec0:	4804      	ldr	r0, [pc, #16]	; (8000ed4 <main+0x134>)
 8000ec2:	f002 fd5a 	bl	800397a <HAL_UART_Transmit>
	  HAL_Delay(2000);
 8000ec6:	e7b7      	b.n	8000e38 <main+0x98>
 8000ec8:	2000011c 	.word	0x2000011c
 8000ecc:	20000164 	.word	0x20000164
 8000ed0:	08004b14 	.word	0x08004b14
 8000ed4:	200001ac 	.word	0x200001ac
 8000ed8:	08004ad4 	.word	0x08004ad4
 8000edc:	08004ae0 	.word	0x08004ae0
 8000ee0:	08004afc 	.word	0x08004afc

08000ee4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000ee4:	b580      	push	{r7, lr}
 8000ee6:	b094      	sub	sp, #80	; 0x50
 8000ee8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000eea:	f107 031c 	add.w	r3, r7, #28
 8000eee:	2234      	movs	r2, #52	; 0x34
 8000ef0:	2100      	movs	r1, #0
 8000ef2:	4618      	mov	r0, r3
 8000ef4:	f003 f90a 	bl	800410c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000ef8:	f107 0308 	add.w	r3, r7, #8
 8000efc:	2200      	movs	r2, #0
 8000efe:	601a      	str	r2, [r3, #0]
 8000f00:	605a      	str	r2, [r3, #4]
 8000f02:	609a      	str	r2, [r3, #8]
 8000f04:	60da      	str	r2, [r3, #12]
 8000f06:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000f08:	2300      	movs	r3, #0
 8000f0a:	607b      	str	r3, [r7, #4]
 8000f0c:	4b2a      	ldr	r3, [pc, #168]	; (8000fb8 <SystemClock_Config+0xd4>)
 8000f0e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000f10:	4a29      	ldr	r2, [pc, #164]	; (8000fb8 <SystemClock_Config+0xd4>)
 8000f12:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000f16:	6413      	str	r3, [r2, #64]	; 0x40
 8000f18:	4b27      	ldr	r3, [pc, #156]	; (8000fb8 <SystemClock_Config+0xd4>)
 8000f1a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000f1c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000f20:	607b      	str	r3, [r7, #4]
 8000f22:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 8000f24:	2300      	movs	r3, #0
 8000f26:	603b      	str	r3, [r7, #0]
 8000f28:	4b24      	ldr	r3, [pc, #144]	; (8000fbc <SystemClock_Config+0xd8>)
 8000f2a:	681b      	ldr	r3, [r3, #0]
 8000f2c:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8000f30:	4a22      	ldr	r2, [pc, #136]	; (8000fbc <SystemClock_Config+0xd8>)
 8000f32:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000f36:	6013      	str	r3, [r2, #0]
 8000f38:	4b20      	ldr	r3, [pc, #128]	; (8000fbc <SystemClock_Config+0xd8>)
 8000f3a:	681b      	ldr	r3, [r3, #0]
 8000f3c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000f40:	603b      	str	r3, [r7, #0]
 8000f42:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000f44:	2302      	movs	r3, #2
 8000f46:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000f48:	2301      	movs	r3, #1
 8000f4a:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000f4c:	2310      	movs	r3, #16
 8000f4e:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000f50:	2302      	movs	r3, #2
 8000f52:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8000f54:	2300      	movs	r3, #0
 8000f56:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000f58:	2308      	movs	r3, #8
 8000f5a:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLN = 100;
 8000f5c:	2364      	movs	r3, #100	; 0x64
 8000f5e:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000f60:	2302      	movs	r3, #2
 8000f62:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8000f64:	2302      	movs	r3, #2
 8000f66:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8000f68:	2302      	movs	r3, #2
 8000f6a:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000f6c:	f107 031c 	add.w	r3, r7, #28
 8000f70:	4618      	mov	r0, r3
 8000f72:	f001 fa37 	bl	80023e4 <HAL_RCC_OscConfig>
 8000f76:	4603      	mov	r3, r0
 8000f78:	2b00      	cmp	r3, #0
 8000f7a:	d001      	beq.n	8000f80 <SystemClock_Config+0x9c>
  {
    Error_Handler();
 8000f7c:	f000 f832 	bl	8000fe4 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000f80:	230f      	movs	r3, #15
 8000f82:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000f84:	2302      	movs	r3, #2
 8000f86:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000f88:	2300      	movs	r3, #0
 8000f8a:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000f8c:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8000f90:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000f92:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000f96:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 8000f98:	f107 0308 	add.w	r3, r7, #8
 8000f9c:	2103      	movs	r1, #3
 8000f9e:	4618      	mov	r0, r3
 8000fa0:	f000 fea4 	bl	8001cec <HAL_RCC_ClockConfig>
 8000fa4:	4603      	mov	r3, r0
 8000fa6:	2b00      	cmp	r3, #0
 8000fa8:	d001      	beq.n	8000fae <SystemClock_Config+0xca>
  {
    Error_Handler();
 8000faa:	f000 f81b 	bl	8000fe4 <Error_Handler>
  }
}
 8000fae:	bf00      	nop
 8000fb0:	3750      	adds	r7, #80	; 0x50
 8000fb2:	46bd      	mov	sp, r7
 8000fb4:	bd80      	pop	{r7, pc}
 8000fb6:	bf00      	nop
 8000fb8:	40023800 	.word	0x40023800
 8000fbc:	40007000 	.word	0x40007000

08000fc0 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8000fc0:	b580      	push	{r7, lr}
 8000fc2:	b082      	sub	sp, #8
 8000fc4:	af00      	add	r7, sp, #0
 8000fc6:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8000fc8:	687b      	ldr	r3, [r7, #4]
 8000fca:	681b      	ldr	r3, [r3, #0]
 8000fcc:	4a04      	ldr	r2, [pc, #16]	; (8000fe0 <HAL_TIM_PeriodElapsedCallback+0x20>)
 8000fce:	4293      	cmp	r3, r2
 8000fd0:	d101      	bne.n	8000fd6 <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 8000fd2:	f000 fb9f 	bl	8001714 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8000fd6:	bf00      	nop
 8000fd8:	3708      	adds	r7, #8
 8000fda:	46bd      	mov	sp, r7
 8000fdc:	bd80      	pop	{r7, pc}
 8000fde:	bf00      	nop
 8000fe0:	40001000 	.word	0x40001000

08000fe4 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000fe4:	b480      	push	{r7}
 8000fe6:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000fe8:	b672      	cpsid	i
}
 8000fea:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000fec:	e7fe      	b.n	8000fec <Error_Handler+0x8>
	...

08000ff0 <MX_SPI2_Init>:

SPI_HandleTypeDef hspi2;

/* SPI2 init function */
void MX_SPI2_Init(void)
{
 8000ff0:	b580      	push	{r7, lr}
 8000ff2:	af00      	add	r7, sp, #0
  /* USER CODE END SPI2_Init 0 */

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  hspi2.Instance = SPI2;
 8000ff4:	4b17      	ldr	r3, [pc, #92]	; (8001054 <MX_SPI2_Init+0x64>)
 8000ff6:	4a18      	ldr	r2, [pc, #96]	; (8001058 <MX_SPI2_Init+0x68>)
 8000ff8:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 8000ffa:	4b16      	ldr	r3, [pc, #88]	; (8001054 <MX_SPI2_Init+0x64>)
 8000ffc:	f44f 7282 	mov.w	r2, #260	; 0x104
 8001000:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 8001002:	4b14      	ldr	r3, [pc, #80]	; (8001054 <MX_SPI2_Init+0x64>)
 8001004:	2200      	movs	r2, #0
 8001006:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 8001008:	4b12      	ldr	r3, [pc, #72]	; (8001054 <MX_SPI2_Init+0x64>)
 800100a:	2200      	movs	r2, #0
 800100c:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 800100e:	4b11      	ldr	r3, [pc, #68]	; (8001054 <MX_SPI2_Init+0x64>)
 8001010:	2200      	movs	r2, #0
 8001012:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001014:	4b0f      	ldr	r3, [pc, #60]	; (8001054 <MX_SPI2_Init+0x64>)
 8001016:	2200      	movs	r2, #0
 8001018:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 800101a:	4b0e      	ldr	r3, [pc, #56]	; (8001054 <MX_SPI2_Init+0x64>)
 800101c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001020:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001022:	4b0c      	ldr	r3, [pc, #48]	; (8001054 <MX_SPI2_Init+0x64>)
 8001024:	2218      	movs	r2, #24
 8001026:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001028:	4b0a      	ldr	r3, [pc, #40]	; (8001054 <MX_SPI2_Init+0x64>)
 800102a:	2200      	movs	r2, #0
 800102c:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 800102e:	4b09      	ldr	r3, [pc, #36]	; (8001054 <MX_SPI2_Init+0x64>)
 8001030:	2200      	movs	r2, #0
 8001032:	625a      	str	r2, [r3, #36]	; 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001034:	4b07      	ldr	r3, [pc, #28]	; (8001054 <MX_SPI2_Init+0x64>)
 8001036:	2200      	movs	r2, #0
 8001038:	629a      	str	r2, [r3, #40]	; 0x28
  hspi2.Init.CRCPolynomial = 10;
 800103a:	4b06      	ldr	r3, [pc, #24]	; (8001054 <MX_SPI2_Init+0x64>)
 800103c:	220a      	movs	r2, #10
 800103e:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 8001040:	4804      	ldr	r0, [pc, #16]	; (8001054 <MX_SPI2_Init+0x64>)
 8001042:	f001 fc6d 	bl	8002920 <HAL_SPI_Init>
 8001046:	4603      	mov	r3, r0
 8001048:	2b00      	cmp	r3, #0
 800104a:	d001      	beq.n	8001050 <MX_SPI2_Init+0x60>
  {
    Error_Handler();
 800104c:	f7ff ffca 	bl	8000fe4 <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 8001050:	bf00      	nop
 8001052:	bd80      	pop	{r7, pc}
 8001054:	20000078 	.word	0x20000078
 8001058:	40003800 	.word	0x40003800

0800105c <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 800105c:	b580      	push	{r7, lr}
 800105e:	b08a      	sub	sp, #40	; 0x28
 8001060:	af00      	add	r7, sp, #0
 8001062:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001064:	f107 0314 	add.w	r3, r7, #20
 8001068:	2200      	movs	r2, #0
 800106a:	601a      	str	r2, [r3, #0]
 800106c:	605a      	str	r2, [r3, #4]
 800106e:	609a      	str	r2, [r3, #8]
 8001070:	60da      	str	r2, [r3, #12]
 8001072:	611a      	str	r2, [r3, #16]
  if(spiHandle->Instance==SPI2)
 8001074:	687b      	ldr	r3, [r7, #4]
 8001076:	681b      	ldr	r3, [r3, #0]
 8001078:	4a30      	ldr	r2, [pc, #192]	; (800113c <HAL_SPI_MspInit+0xe0>)
 800107a:	4293      	cmp	r3, r2
 800107c:	d15a      	bne.n	8001134 <HAL_SPI_MspInit+0xd8>
  {
  /* USER CODE BEGIN SPI2_MspInit 0 */

  /* USER CODE END SPI2_MspInit 0 */
    /* SPI2 clock enable */
    __HAL_RCC_SPI2_CLK_ENABLE();
 800107e:	2300      	movs	r3, #0
 8001080:	613b      	str	r3, [r7, #16]
 8001082:	4b2f      	ldr	r3, [pc, #188]	; (8001140 <HAL_SPI_MspInit+0xe4>)
 8001084:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001086:	4a2e      	ldr	r2, [pc, #184]	; (8001140 <HAL_SPI_MspInit+0xe4>)
 8001088:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800108c:	6413      	str	r3, [r2, #64]	; 0x40
 800108e:	4b2c      	ldr	r3, [pc, #176]	; (8001140 <HAL_SPI_MspInit+0xe4>)
 8001090:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001092:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001096:	613b      	str	r3, [r7, #16]
 8001098:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 800109a:	2300      	movs	r3, #0
 800109c:	60fb      	str	r3, [r7, #12]
 800109e:	4b28      	ldr	r3, [pc, #160]	; (8001140 <HAL_SPI_MspInit+0xe4>)
 80010a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80010a2:	4a27      	ldr	r2, [pc, #156]	; (8001140 <HAL_SPI_MspInit+0xe4>)
 80010a4:	f043 0304 	orr.w	r3, r3, #4
 80010a8:	6313      	str	r3, [r2, #48]	; 0x30
 80010aa:	4b25      	ldr	r3, [pc, #148]	; (8001140 <HAL_SPI_MspInit+0xe4>)
 80010ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80010ae:	f003 0304 	and.w	r3, r3, #4
 80010b2:	60fb      	str	r3, [r7, #12]
 80010b4:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80010b6:	2300      	movs	r3, #0
 80010b8:	60bb      	str	r3, [r7, #8]
 80010ba:	4b21      	ldr	r3, [pc, #132]	; (8001140 <HAL_SPI_MspInit+0xe4>)
 80010bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80010be:	4a20      	ldr	r2, [pc, #128]	; (8001140 <HAL_SPI_MspInit+0xe4>)
 80010c0:	f043 0302 	orr.w	r3, r3, #2
 80010c4:	6313      	str	r3, [r2, #48]	; 0x30
 80010c6:	4b1e      	ldr	r3, [pc, #120]	; (8001140 <HAL_SPI_MspInit+0xe4>)
 80010c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80010ca:	f003 0302 	and.w	r3, r3, #2
 80010ce:	60bb      	str	r3, [r7, #8]
 80010d0:	68bb      	ldr	r3, [r7, #8]
    /**SPI2 GPIO Configuration
    PC1     ------> SPI2_MOSI
    PC2     ------> SPI2_MISO
    PB10     ------> SPI2_SCK
    */
    GPIO_InitStruct.Pin = GPIO_PIN_1;
 80010d2:	2302      	movs	r3, #2
 80010d4:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010d6:	2302      	movs	r3, #2
 80010d8:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010da:	2300      	movs	r3, #0
 80010dc:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80010de:	2303      	movs	r3, #3
 80010e0:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_SPI2;
 80010e2:	2307      	movs	r3, #7
 80010e4:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80010e6:	f107 0314 	add.w	r3, r7, #20
 80010ea:	4619      	mov	r1, r3
 80010ec:	4815      	ldr	r0, [pc, #84]	; (8001144 <HAL_SPI_MspInit+0xe8>)
 80010ee:	f000 fc37 	bl	8001960 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_2;
 80010f2:	2304      	movs	r3, #4
 80010f4:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010f6:	2302      	movs	r3, #2
 80010f8:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010fa:	2300      	movs	r3, #0
 80010fc:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80010fe:	2303      	movs	r3, #3
 8001100:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8001102:	2305      	movs	r3, #5
 8001104:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001106:	f107 0314 	add.w	r3, r7, #20
 800110a:	4619      	mov	r1, r3
 800110c:	480d      	ldr	r0, [pc, #52]	; (8001144 <HAL_SPI_MspInit+0xe8>)
 800110e:	f000 fc27 	bl	8001960 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001112:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001116:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001118:	2302      	movs	r3, #2
 800111a:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800111c:	2300      	movs	r3, #0
 800111e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001120:	2303      	movs	r3, #3
 8001122:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8001124:	2305      	movs	r3, #5
 8001126:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001128:	f107 0314 	add.w	r3, r7, #20
 800112c:	4619      	mov	r1, r3
 800112e:	4806      	ldr	r0, [pc, #24]	; (8001148 <HAL_SPI_MspInit+0xec>)
 8001130:	f000 fc16 	bl	8001960 <HAL_GPIO_Init>

  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }
}
 8001134:	bf00      	nop
 8001136:	3728      	adds	r7, #40	; 0x28
 8001138:	46bd      	mov	sp, r7
 800113a:	bd80      	pop	{r7, pc}
 800113c:	40003800 	.word	0x40003800
 8001140:	40023800 	.word	0x40023800
 8001144:	40020800 	.word	0x40020800
 8001148:	40020400 	.word	0x40020400

0800114c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800114c:	b580      	push	{r7, lr}
 800114e:	b082      	sub	sp, #8
 8001150:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001152:	2300      	movs	r3, #0
 8001154:	607b      	str	r3, [r7, #4]
 8001156:	4b10      	ldr	r3, [pc, #64]	; (8001198 <HAL_MspInit+0x4c>)
 8001158:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800115a:	4a0f      	ldr	r2, [pc, #60]	; (8001198 <HAL_MspInit+0x4c>)
 800115c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001160:	6453      	str	r3, [r2, #68]	; 0x44
 8001162:	4b0d      	ldr	r3, [pc, #52]	; (8001198 <HAL_MspInit+0x4c>)
 8001164:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001166:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800116a:	607b      	str	r3, [r7, #4]
 800116c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 800116e:	2300      	movs	r3, #0
 8001170:	603b      	str	r3, [r7, #0]
 8001172:	4b09      	ldr	r3, [pc, #36]	; (8001198 <HAL_MspInit+0x4c>)
 8001174:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001176:	4a08      	ldr	r2, [pc, #32]	; (8001198 <HAL_MspInit+0x4c>)
 8001178:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800117c:	6413      	str	r3, [r2, #64]	; 0x40
 800117e:	4b06      	ldr	r3, [pc, #24]	; (8001198 <HAL_MspInit+0x4c>)
 8001180:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001182:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001186:	603b      	str	r3, [r7, #0]
 8001188:	683b      	ldr	r3, [r7, #0]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_0);
 800118a:	2007      	movs	r0, #7
 800118c:	f000 fbb3 	bl	80018f6 <HAL_NVIC_SetPriorityGrouping>
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001190:	bf00      	nop
 8001192:	3708      	adds	r7, #8
 8001194:	46bd      	mov	sp, r7
 8001196:	bd80      	pop	{r7, pc}
 8001198:	40023800 	.word	0x40023800

0800119c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800119c:	b580      	push	{r7, lr}
 800119e:	b08e      	sub	sp, #56	; 0x38
 80011a0:	af00      	add	r7, sp, #0
 80011a2:	6078      	str	r0, [r7, #4]
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock, uwAPB1Prescaler = 0U;
 80011a4:	2300      	movs	r3, #0
 80011a6:	62fb      	str	r3, [r7, #44]	; 0x2c

  uint32_t              uwPrescalerValue = 0U;
 80011a8:	2300      	movs	r3, #0
 80011aa:	62bb      	str	r3, [r7, #40]	; 0x28
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 80011ac:	2300      	movs	r3, #0
 80011ae:	60fb      	str	r3, [r7, #12]
 80011b0:	4b33      	ldr	r3, [pc, #204]	; (8001280 <HAL_InitTick+0xe4>)
 80011b2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80011b4:	4a32      	ldr	r2, [pc, #200]	; (8001280 <HAL_InitTick+0xe4>)
 80011b6:	f043 0310 	orr.w	r3, r3, #16
 80011ba:	6413      	str	r3, [r2, #64]	; 0x40
 80011bc:	4b30      	ldr	r3, [pc, #192]	; (8001280 <HAL_InitTick+0xe4>)
 80011be:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80011c0:	f003 0310 	and.w	r3, r3, #16
 80011c4:	60fb      	str	r3, [r7, #12]
 80011c6:	68fb      	ldr	r3, [r7, #12]

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80011c8:	f107 0210 	add.w	r2, r7, #16
 80011cc:	f107 0314 	add.w	r3, r7, #20
 80011d0:	4611      	mov	r1, r2
 80011d2:	4618      	mov	r0, r3
 80011d4:	f000 fea4 	bl	8001f20 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
 80011d8:	6a3b      	ldr	r3, [r7, #32]
 80011da:	62fb      	str	r3, [r7, #44]	; 0x2c
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 80011dc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80011de:	2b00      	cmp	r3, #0
 80011e0:	d103      	bne.n	80011ea <HAL_InitTick+0x4e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 80011e2:	f000 fe75 	bl	8001ed0 <HAL_RCC_GetPCLK1Freq>
 80011e6:	6378      	str	r0, [r7, #52]	; 0x34
 80011e8:	e004      	b.n	80011f4 <HAL_InitTick+0x58>
  }
  else
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 80011ea:	f000 fe71 	bl	8001ed0 <HAL_RCC_GetPCLK1Freq>
 80011ee:	4603      	mov	r3, r0
 80011f0:	005b      	lsls	r3, r3, #1
 80011f2:	637b      	str	r3, [r7, #52]	; 0x34
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80011f4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80011f6:	4a23      	ldr	r2, [pc, #140]	; (8001284 <HAL_InitTick+0xe8>)
 80011f8:	fba2 2303 	umull	r2, r3, r2, r3
 80011fc:	0c9b      	lsrs	r3, r3, #18
 80011fe:	3b01      	subs	r3, #1
 8001200:	62bb      	str	r3, [r7, #40]	; 0x28

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001202:	4b21      	ldr	r3, [pc, #132]	; (8001288 <HAL_InitTick+0xec>)
 8001204:	4a21      	ldr	r2, [pc, #132]	; (800128c <HAL_InitTick+0xf0>)
 8001206:	601a      	str	r2, [r3, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001208:	4b1f      	ldr	r3, [pc, #124]	; (8001288 <HAL_InitTick+0xec>)
 800120a:	f240 32e7 	movw	r2, #999	; 0x3e7
 800120e:	60da      	str	r2, [r3, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
 8001210:	4a1d      	ldr	r2, [pc, #116]	; (8001288 <HAL_InitTick+0xec>)
 8001212:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001214:	6053      	str	r3, [r2, #4]
  htim6.Init.ClockDivision = 0;
 8001216:	4b1c      	ldr	r3, [pc, #112]	; (8001288 <HAL_InitTick+0xec>)
 8001218:	2200      	movs	r2, #0
 800121a:	611a      	str	r2, [r3, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 800121c:	4b1a      	ldr	r3, [pc, #104]	; (8001288 <HAL_InitTick+0xec>)
 800121e:	2200      	movs	r2, #0
 8001220:	609a      	str	r2, [r3, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001222:	4b19      	ldr	r3, [pc, #100]	; (8001288 <HAL_InitTick+0xec>)
 8001224:	2200      	movs	r2, #0
 8001226:	619a      	str	r2, [r3, #24]

  status = HAL_TIM_Base_Init(&htim6);
 8001228:	4817      	ldr	r0, [pc, #92]	; (8001288 <HAL_InitTick+0xec>)
 800122a:	f001 fe6f 	bl	8002f0c <HAL_TIM_Base_Init>
 800122e:	4603      	mov	r3, r0
 8001230:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
  if (status == HAL_OK)
 8001234:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8001238:	2b00      	cmp	r3, #0
 800123a:	d11b      	bne.n	8001274 <HAL_InitTick+0xd8>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 800123c:	4812      	ldr	r0, [pc, #72]	; (8001288 <HAL_InitTick+0xec>)
 800123e:	f001 ff1d 	bl	800307c <HAL_TIM_Base_Start_IT>
 8001242:	4603      	mov	r3, r0
 8001244:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
    if (status == HAL_OK)
 8001248:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 800124c:	2b00      	cmp	r3, #0
 800124e:	d111      	bne.n	8001274 <HAL_InitTick+0xd8>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001250:	2036      	movs	r0, #54	; 0x36
 8001252:	f000 fb77 	bl	8001944 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001256:	687b      	ldr	r3, [r7, #4]
 8001258:	2b0f      	cmp	r3, #15
 800125a:	d808      	bhi.n	800126e <HAL_InitTick+0xd2>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 800125c:	2200      	movs	r2, #0
 800125e:	6879      	ldr	r1, [r7, #4]
 8001260:	2036      	movs	r0, #54	; 0x36
 8001262:	f000 fb53 	bl	800190c <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8001266:	4a0a      	ldr	r2, [pc, #40]	; (8001290 <HAL_InitTick+0xf4>)
 8001268:	687b      	ldr	r3, [r7, #4]
 800126a:	6013      	str	r3, [r2, #0]
 800126c:	e002      	b.n	8001274 <HAL_InitTick+0xd8>
      }
      else
      {
        status = HAL_ERROR;
 800126e:	2301      	movs	r3, #1
 8001270:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
      }
    }
  }

 /* Return function status */
  return status;
 8001274:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
}
 8001278:	4618      	mov	r0, r3
 800127a:	3738      	adds	r7, #56	; 0x38
 800127c:	46bd      	mov	sp, r7
 800127e:	bd80      	pop	{r7, pc}
 8001280:	40023800 	.word	0x40023800
 8001284:	431bde83 	.word	0x431bde83
 8001288:	200000d0 	.word	0x200000d0
 800128c:	40001000 	.word	0x40001000
 8001290:	20000004 	.word	0x20000004

08001294 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001294:	b480      	push	{r7}
 8001296:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001298:	e7fe      	b.n	8001298 <NMI_Handler+0x4>

0800129a <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800129a:	b480      	push	{r7}
 800129c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800129e:	e7fe      	b.n	800129e <HardFault_Handler+0x4>

080012a0 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80012a0:	b480      	push	{r7}
 80012a2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80012a4:	e7fe      	b.n	80012a4 <MemManage_Handler+0x4>

080012a6 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80012a6:	b480      	push	{r7}
 80012a8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80012aa:	e7fe      	b.n	80012aa <BusFault_Handler+0x4>

080012ac <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80012ac:	b480      	push	{r7}
 80012ae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80012b0:	e7fe      	b.n	80012b0 <UsageFault_Handler+0x4>

080012b2 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80012b2:	b480      	push	{r7}
 80012b4:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80012b6:	bf00      	nop
 80012b8:	46bd      	mov	sp, r7
 80012ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012be:	4770      	bx	lr

080012c0 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80012c0:	b480      	push	{r7}
 80012c2:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80012c4:	bf00      	nop
 80012c6:	46bd      	mov	sp, r7
 80012c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012cc:	4770      	bx	lr

080012ce <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80012ce:	b480      	push	{r7}
 80012d0:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80012d2:	bf00      	nop
 80012d4:	46bd      	mov	sp, r7
 80012d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012da:	4770      	bx	lr

080012dc <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80012dc:	b480      	push	{r7}
 80012de:	af00      	add	r7, sp, #0
  /* USER CODE END SysTick_IRQn 0 */

  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80012e0:	bf00      	nop
 80012e2:	46bd      	mov	sp, r7
 80012e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012e8:	4770      	bx	lr
	...

080012ec <TIM6_DAC_IRQHandler>:

/**
  * @brief This function handles TIM6 global interrupt and DAC1, DAC2 underrun error interrupts.
  */
void TIM6_DAC_IRQHandler(void)
{
 80012ec:	b580      	push	{r7, lr}
 80012ee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 80012f0:	4802      	ldr	r0, [pc, #8]	; (80012fc <TIM6_DAC_IRQHandler+0x10>)
 80012f2:	f001 ff33 	bl	800315c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM6_DAC_IRQn 1 */

  /* USER CODE END TIM6_DAC_IRQn 1 */
}
 80012f6:	bf00      	nop
 80012f8:	bd80      	pop	{r7, pc}
 80012fa:	bf00      	nop
 80012fc:	200000d0 	.word	0x200000d0

08001300 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001300:	b580      	push	{r7, lr}
 8001302:	b086      	sub	sp, #24
 8001304:	af00      	add	r7, sp, #0
 8001306:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001308:	4a14      	ldr	r2, [pc, #80]	; (800135c <_sbrk+0x5c>)
 800130a:	4b15      	ldr	r3, [pc, #84]	; (8001360 <_sbrk+0x60>)
 800130c:	1ad3      	subs	r3, r2, r3
 800130e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001310:	697b      	ldr	r3, [r7, #20]
 8001312:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001314:	4b13      	ldr	r3, [pc, #76]	; (8001364 <_sbrk+0x64>)
 8001316:	681b      	ldr	r3, [r3, #0]
 8001318:	2b00      	cmp	r3, #0
 800131a:	d102      	bne.n	8001322 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800131c:	4b11      	ldr	r3, [pc, #68]	; (8001364 <_sbrk+0x64>)
 800131e:	4a12      	ldr	r2, [pc, #72]	; (8001368 <_sbrk+0x68>)
 8001320:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001322:	4b10      	ldr	r3, [pc, #64]	; (8001364 <_sbrk+0x64>)
 8001324:	681a      	ldr	r2, [r3, #0]
 8001326:	687b      	ldr	r3, [r7, #4]
 8001328:	4413      	add	r3, r2
 800132a:	693a      	ldr	r2, [r7, #16]
 800132c:	429a      	cmp	r2, r3
 800132e:	d207      	bcs.n	8001340 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001330:	f002 fef4 	bl	800411c <__errno>
 8001334:	4603      	mov	r3, r0
 8001336:	220c      	movs	r2, #12
 8001338:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800133a:	f04f 33ff 	mov.w	r3, #4294967295
 800133e:	e009      	b.n	8001354 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001340:	4b08      	ldr	r3, [pc, #32]	; (8001364 <_sbrk+0x64>)
 8001342:	681b      	ldr	r3, [r3, #0]
 8001344:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001346:	4b07      	ldr	r3, [pc, #28]	; (8001364 <_sbrk+0x64>)
 8001348:	681a      	ldr	r2, [r3, #0]
 800134a:	687b      	ldr	r3, [r7, #4]
 800134c:	4413      	add	r3, r2
 800134e:	4a05      	ldr	r2, [pc, #20]	; (8001364 <_sbrk+0x64>)
 8001350:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001352:	68fb      	ldr	r3, [r7, #12]
}
 8001354:	4618      	mov	r0, r3
 8001356:	3718      	adds	r7, #24
 8001358:	46bd      	mov	sp, r7
 800135a:	bd80      	pop	{r7, pc}
 800135c:	20020000 	.word	0x20020000
 8001360:	00000400 	.word	0x00000400
 8001364:	20000118 	.word	0x20000118
 8001368:	20000340 	.word	0x20000340

0800136c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800136c:	b480      	push	{r7}
 800136e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001370:	4b06      	ldr	r3, [pc, #24]	; (800138c <SystemInit+0x20>)
 8001372:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001376:	4a05      	ldr	r2, [pc, #20]	; (800138c <SystemInit+0x20>)
 8001378:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800137c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001380:	bf00      	nop
 8001382:	46bd      	mov	sp, r7
 8001384:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001388:	4770      	bx	lr
 800138a:	bf00      	nop
 800138c:	e000ed00 	.word	0xe000ed00

08001390 <MX_TIM1_Init>:
TIM_HandleTypeDef htim1;
TIM_HandleTypeDef htim2;

/* TIM1 init function */
void MX_TIM1_Init(void)
{
 8001390:	b580      	push	{r7, lr}
 8001392:	b086      	sub	sp, #24
 8001394:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001396:	f107 0308 	add.w	r3, r7, #8
 800139a:	2200      	movs	r2, #0
 800139c:	601a      	str	r2, [r3, #0]
 800139e:	605a      	str	r2, [r3, #4]
 80013a0:	609a      	str	r2, [r3, #8]
 80013a2:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80013a4:	463b      	mov	r3, r7
 80013a6:	2200      	movs	r2, #0
 80013a8:	601a      	str	r2, [r3, #0]
 80013aa:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 80013ac:	4b1e      	ldr	r3, [pc, #120]	; (8001428 <MX_TIM1_Init+0x98>)
 80013ae:	4a1f      	ldr	r2, [pc, #124]	; (800142c <MX_TIM1_Init+0x9c>)
 80013b0:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 80-1;
 80013b2:	4b1d      	ldr	r3, [pc, #116]	; (8001428 <MX_TIM1_Init+0x98>)
 80013b4:	224f      	movs	r2, #79	; 0x4f
 80013b6:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 80013b8:	4b1b      	ldr	r3, [pc, #108]	; (8001428 <MX_TIM1_Init+0x98>)
 80013ba:	2200      	movs	r2, #0
 80013bc:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 65535;
 80013be:	4b1a      	ldr	r3, [pc, #104]	; (8001428 <MX_TIM1_Init+0x98>)
 80013c0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80013c4:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80013c6:	4b18      	ldr	r3, [pc, #96]	; (8001428 <MX_TIM1_Init+0x98>)
 80013c8:	2200      	movs	r2, #0
 80013ca:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 80013cc:	4b16      	ldr	r3, [pc, #88]	; (8001428 <MX_TIM1_Init+0x98>)
 80013ce:	2200      	movs	r2, #0
 80013d0:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80013d2:	4b15      	ldr	r3, [pc, #84]	; (8001428 <MX_TIM1_Init+0x98>)
 80013d4:	2200      	movs	r2, #0
 80013d6:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 80013d8:	4813      	ldr	r0, [pc, #76]	; (8001428 <MX_TIM1_Init+0x98>)
 80013da:	f001 fd97 	bl	8002f0c <HAL_TIM_Base_Init>
 80013de:	4603      	mov	r3, r0
 80013e0:	2b00      	cmp	r3, #0
 80013e2:	d001      	beq.n	80013e8 <MX_TIM1_Init+0x58>
  {
    Error_Handler();
 80013e4:	f7ff fdfe 	bl	8000fe4 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80013e8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80013ec:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 80013ee:	f107 0308 	add.w	r3, r7, #8
 80013f2:	4619      	mov	r1, r3
 80013f4:	480c      	ldr	r0, [pc, #48]	; (8001428 <MX_TIM1_Init+0x98>)
 80013f6:	f001 ffb9 	bl	800336c <HAL_TIM_ConfigClockSource>
 80013fa:	4603      	mov	r3, r0
 80013fc:	2b00      	cmp	r3, #0
 80013fe:	d001      	beq.n	8001404 <MX_TIM1_Init+0x74>
  {
    Error_Handler();
 8001400:	f7ff fdf0 	bl	8000fe4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001404:	2300      	movs	r3, #0
 8001406:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001408:	2300      	movs	r3, #0
 800140a:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800140c:	463b      	mov	r3, r7
 800140e:	4619      	mov	r1, r3
 8001410:	4805      	ldr	r0, [pc, #20]	; (8001428 <MX_TIM1_Init+0x98>)
 8001412:	f002 f9d5 	bl	80037c0 <HAL_TIMEx_MasterConfigSynchronization>
 8001416:	4603      	mov	r3, r0
 8001418:	2b00      	cmp	r3, #0
 800141a:	d001      	beq.n	8001420 <MX_TIM1_Init+0x90>
  {
    Error_Handler();
 800141c:	f7ff fde2 	bl	8000fe4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 8001420:	bf00      	nop
 8001422:	3718      	adds	r7, #24
 8001424:	46bd      	mov	sp, r7
 8001426:	bd80      	pop	{r7, pc}
 8001428:	2000011c 	.word	0x2000011c
 800142c:	40010000 	.word	0x40010000

08001430 <MX_TIM2_Init>:
/* TIM2 init function */
void MX_TIM2_Init(void)
{
 8001430:	b580      	push	{r7, lr}
 8001432:	b086      	sub	sp, #24
 8001434:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001436:	f107 0308 	add.w	r3, r7, #8
 800143a:	2200      	movs	r2, #0
 800143c:	601a      	str	r2, [r3, #0]
 800143e:	605a      	str	r2, [r3, #4]
 8001440:	609a      	str	r2, [r3, #8]
 8001442:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001444:	463b      	mov	r3, r7
 8001446:	2200      	movs	r2, #0
 8001448:	601a      	str	r2, [r3, #0]
 800144a:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 800144c:	4b1d      	ldr	r3, [pc, #116]	; (80014c4 <MX_TIM2_Init+0x94>)
 800144e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001452:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 100-1;
 8001454:	4b1b      	ldr	r3, [pc, #108]	; (80014c4 <MX_TIM2_Init+0x94>)
 8001456:	2263      	movs	r2, #99	; 0x63
 8001458:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 800145a:	4b1a      	ldr	r3, [pc, #104]	; (80014c4 <MX_TIM2_Init+0x94>)
 800145c:	2200      	movs	r2, #0
 800145e:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 4294967295;
 8001460:	4b18      	ldr	r3, [pc, #96]	; (80014c4 <MX_TIM2_Init+0x94>)
 8001462:	f04f 32ff 	mov.w	r2, #4294967295
 8001466:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001468:	4b16      	ldr	r3, [pc, #88]	; (80014c4 <MX_TIM2_Init+0x94>)
 800146a:	2200      	movs	r2, #0
 800146c:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800146e:	4b15      	ldr	r3, [pc, #84]	; (80014c4 <MX_TIM2_Init+0x94>)
 8001470:	2200      	movs	r2, #0
 8001472:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001474:	4813      	ldr	r0, [pc, #76]	; (80014c4 <MX_TIM2_Init+0x94>)
 8001476:	f001 fd49 	bl	8002f0c <HAL_TIM_Base_Init>
 800147a:	4603      	mov	r3, r0
 800147c:	2b00      	cmp	r3, #0
 800147e:	d001      	beq.n	8001484 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8001480:	f7ff fdb0 	bl	8000fe4 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001484:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001488:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 800148a:	f107 0308 	add.w	r3, r7, #8
 800148e:	4619      	mov	r1, r3
 8001490:	480c      	ldr	r0, [pc, #48]	; (80014c4 <MX_TIM2_Init+0x94>)
 8001492:	f001 ff6b 	bl	800336c <HAL_TIM_ConfigClockSource>
 8001496:	4603      	mov	r3, r0
 8001498:	2b00      	cmp	r3, #0
 800149a:	d001      	beq.n	80014a0 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 800149c:	f7ff fda2 	bl	8000fe4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80014a0:	2300      	movs	r3, #0
 80014a2:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80014a4:	2300      	movs	r3, #0
 80014a6:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80014a8:	463b      	mov	r3, r7
 80014aa:	4619      	mov	r1, r3
 80014ac:	4805      	ldr	r0, [pc, #20]	; (80014c4 <MX_TIM2_Init+0x94>)
 80014ae:	f002 f987 	bl	80037c0 <HAL_TIMEx_MasterConfigSynchronization>
 80014b2:	4603      	mov	r3, r0
 80014b4:	2b00      	cmp	r3, #0
 80014b6:	d001      	beq.n	80014bc <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 80014b8:	f7ff fd94 	bl	8000fe4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 80014bc:	bf00      	nop
 80014be:	3718      	adds	r7, #24
 80014c0:	46bd      	mov	sp, r7
 80014c2:	bd80      	pop	{r7, pc}
 80014c4:	20000164 	.word	0x20000164

080014c8 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 80014c8:	b480      	push	{r7}
 80014ca:	b085      	sub	sp, #20
 80014cc:	af00      	add	r7, sp, #0
 80014ce:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM1)
 80014d0:	687b      	ldr	r3, [r7, #4]
 80014d2:	681b      	ldr	r3, [r3, #0]
 80014d4:	4a15      	ldr	r2, [pc, #84]	; (800152c <HAL_TIM_Base_MspInit+0x64>)
 80014d6:	4293      	cmp	r3, r2
 80014d8:	d10e      	bne.n	80014f8 <HAL_TIM_Base_MspInit+0x30>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* TIM1 clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 80014da:	2300      	movs	r3, #0
 80014dc:	60fb      	str	r3, [r7, #12]
 80014de:	4b14      	ldr	r3, [pc, #80]	; (8001530 <HAL_TIM_Base_MspInit+0x68>)
 80014e0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80014e2:	4a13      	ldr	r2, [pc, #76]	; (8001530 <HAL_TIM_Base_MspInit+0x68>)
 80014e4:	f043 0301 	orr.w	r3, r3, #1
 80014e8:	6453      	str	r3, [r2, #68]	; 0x44
 80014ea:	4b11      	ldr	r3, [pc, #68]	; (8001530 <HAL_TIM_Base_MspInit+0x68>)
 80014ec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80014ee:	f003 0301 	and.w	r3, r3, #1
 80014f2:	60fb      	str	r3, [r7, #12]
 80014f4:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_TIM2_CLK_ENABLE();
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
}
 80014f6:	e012      	b.n	800151e <HAL_TIM_Base_MspInit+0x56>
  else if(tim_baseHandle->Instance==TIM2)
 80014f8:	687b      	ldr	r3, [r7, #4]
 80014fa:	681b      	ldr	r3, [r3, #0]
 80014fc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001500:	d10d      	bne.n	800151e <HAL_TIM_Base_MspInit+0x56>
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001502:	2300      	movs	r3, #0
 8001504:	60bb      	str	r3, [r7, #8]
 8001506:	4b0a      	ldr	r3, [pc, #40]	; (8001530 <HAL_TIM_Base_MspInit+0x68>)
 8001508:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800150a:	4a09      	ldr	r2, [pc, #36]	; (8001530 <HAL_TIM_Base_MspInit+0x68>)
 800150c:	f043 0301 	orr.w	r3, r3, #1
 8001510:	6413      	str	r3, [r2, #64]	; 0x40
 8001512:	4b07      	ldr	r3, [pc, #28]	; (8001530 <HAL_TIM_Base_MspInit+0x68>)
 8001514:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001516:	f003 0301 	and.w	r3, r3, #1
 800151a:	60bb      	str	r3, [r7, #8]
 800151c:	68bb      	ldr	r3, [r7, #8]
}
 800151e:	bf00      	nop
 8001520:	3714      	adds	r7, #20
 8001522:	46bd      	mov	sp, r7
 8001524:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001528:	4770      	bx	lr
 800152a:	bf00      	nop
 800152c:	40010000 	.word	0x40010000
 8001530:	40023800 	.word	0x40023800

08001534 <delay_us>:
}

/* USER CODE BEGIN 1 */

void delay_us(uint16_t us)			// Zbog clock postavki svaki count up je 1us
{
 8001534:	b480      	push	{r7}
 8001536:	b083      	sub	sp, #12
 8001538:	af00      	add	r7, sp, #0
 800153a:	4603      	mov	r3, r0
 800153c:	80fb      	strh	r3, [r7, #6]
	__HAL_TIM_SET_COUNTER(&htim1,0);			// Postavi counter vrijednost na 0
 800153e:	4b09      	ldr	r3, [pc, #36]	; (8001564 <delay_us+0x30>)
 8001540:	681b      	ldr	r3, [r3, #0]
 8001542:	2200      	movs	r2, #0
 8001544:	625a      	str	r2, [r3, #36]	; 0x24
	while(__HAL_TIM_GET_COUNTER(&htim1) < us);	// Cekaj dok se izbroji do te vrijednosti
 8001546:	bf00      	nop
 8001548:	4b06      	ldr	r3, [pc, #24]	; (8001564 <delay_us+0x30>)
 800154a:	681b      	ldr	r3, [r3, #0]
 800154c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800154e:	88fb      	ldrh	r3, [r7, #6]
 8001550:	429a      	cmp	r2, r3
 8001552:	d3f9      	bcc.n	8001548 <delay_us+0x14>
}
 8001554:	bf00      	nop
 8001556:	bf00      	nop
 8001558:	370c      	adds	r7, #12
 800155a:	46bd      	mov	sp, r7
 800155c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001560:	4770      	bx	lr
 8001562:	bf00      	nop
 8001564:	2000011c 	.word	0x2000011c

08001568 <delay_25ns>:

void delay_25ns(uint32_t ns)		// Zbog clock postavki svaki count up je 25ns
{
 8001568:	b480      	push	{r7}
 800156a:	b083      	sub	sp, #12
 800156c:	af00      	add	r7, sp, #0
 800156e:	6078      	str	r0, [r7, #4]
	__HAL_TIM_SET_COUNTER(&htim2,0);			// Postavi counter vrijednost na 0
 8001570:	4b08      	ldr	r3, [pc, #32]	; (8001594 <delay_25ns+0x2c>)
 8001572:	681b      	ldr	r3, [r3, #0]
 8001574:	2200      	movs	r2, #0
 8001576:	625a      	str	r2, [r3, #36]	; 0x24
	while(__HAL_TIM_GET_COUNTER(&htim2) < ns);	// Cekaj dok se izbroji do te vrijednosti
 8001578:	bf00      	nop
 800157a:	4b06      	ldr	r3, [pc, #24]	; (8001594 <delay_25ns+0x2c>)
 800157c:	681b      	ldr	r3, [r3, #0]
 800157e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001580:	687a      	ldr	r2, [r7, #4]
 8001582:	429a      	cmp	r2, r3
 8001584:	d8f9      	bhi.n	800157a <delay_25ns+0x12>
}
 8001586:	bf00      	nop
 8001588:	bf00      	nop
 800158a:	370c      	adds	r7, #12
 800158c:	46bd      	mov	sp, r7
 800158e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001592:	4770      	bx	lr
 8001594:	20000164 	.word	0x20000164

08001598 <MX_USART2_UART_Init>:
UART_HandleTypeDef huart2;

/* USART2 init function */

void MX_USART2_UART_Init(void)
{
 8001598:	b580      	push	{r7, lr}
 800159a:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 800159c:	4b11      	ldr	r3, [pc, #68]	; (80015e4 <MX_USART2_UART_Init+0x4c>)
 800159e:	4a12      	ldr	r2, [pc, #72]	; (80015e8 <MX_USART2_UART_Init+0x50>)
 80015a0:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 80015a2:	4b10      	ldr	r3, [pc, #64]	; (80015e4 <MX_USART2_UART_Init+0x4c>)
 80015a4:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80015a8:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80015aa:	4b0e      	ldr	r3, [pc, #56]	; (80015e4 <MX_USART2_UART_Init+0x4c>)
 80015ac:	2200      	movs	r2, #0
 80015ae:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80015b0:	4b0c      	ldr	r3, [pc, #48]	; (80015e4 <MX_USART2_UART_Init+0x4c>)
 80015b2:	2200      	movs	r2, #0
 80015b4:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80015b6:	4b0b      	ldr	r3, [pc, #44]	; (80015e4 <MX_USART2_UART_Init+0x4c>)
 80015b8:	2200      	movs	r2, #0
 80015ba:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80015bc:	4b09      	ldr	r3, [pc, #36]	; (80015e4 <MX_USART2_UART_Init+0x4c>)
 80015be:	220c      	movs	r2, #12
 80015c0:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80015c2:	4b08      	ldr	r3, [pc, #32]	; (80015e4 <MX_USART2_UART_Init+0x4c>)
 80015c4:	2200      	movs	r2, #0
 80015c6:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80015c8:	4b06      	ldr	r3, [pc, #24]	; (80015e4 <MX_USART2_UART_Init+0x4c>)
 80015ca:	2200      	movs	r2, #0
 80015cc:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80015ce:	4805      	ldr	r0, [pc, #20]	; (80015e4 <MX_USART2_UART_Init+0x4c>)
 80015d0:	f002 f986 	bl	80038e0 <HAL_UART_Init>
 80015d4:	4603      	mov	r3, r0
 80015d6:	2b00      	cmp	r3, #0
 80015d8:	d001      	beq.n	80015de <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 80015da:	f7ff fd03 	bl	8000fe4 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80015de:	bf00      	nop
 80015e0:	bd80      	pop	{r7, pc}
 80015e2:	bf00      	nop
 80015e4:	200001ac 	.word	0x200001ac
 80015e8:	40004400 	.word	0x40004400

080015ec <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 80015ec:	b580      	push	{r7, lr}
 80015ee:	b08a      	sub	sp, #40	; 0x28
 80015f0:	af00      	add	r7, sp, #0
 80015f2:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80015f4:	f107 0314 	add.w	r3, r7, #20
 80015f8:	2200      	movs	r2, #0
 80015fa:	601a      	str	r2, [r3, #0]
 80015fc:	605a      	str	r2, [r3, #4]
 80015fe:	609a      	str	r2, [r3, #8]
 8001600:	60da      	str	r2, [r3, #12]
 8001602:	611a      	str	r2, [r3, #16]
  if(uartHandle->Instance==USART2)
 8001604:	687b      	ldr	r3, [r7, #4]
 8001606:	681b      	ldr	r3, [r3, #0]
 8001608:	4a19      	ldr	r2, [pc, #100]	; (8001670 <HAL_UART_MspInit+0x84>)
 800160a:	4293      	cmp	r3, r2
 800160c:	d12b      	bne.n	8001666 <HAL_UART_MspInit+0x7a>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* USART2 clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 800160e:	2300      	movs	r3, #0
 8001610:	613b      	str	r3, [r7, #16]
 8001612:	4b18      	ldr	r3, [pc, #96]	; (8001674 <HAL_UART_MspInit+0x88>)
 8001614:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001616:	4a17      	ldr	r2, [pc, #92]	; (8001674 <HAL_UART_MspInit+0x88>)
 8001618:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800161c:	6413      	str	r3, [r2, #64]	; 0x40
 800161e:	4b15      	ldr	r3, [pc, #84]	; (8001674 <HAL_UART_MspInit+0x88>)
 8001620:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001622:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001626:	613b      	str	r3, [r7, #16]
 8001628:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800162a:	2300      	movs	r3, #0
 800162c:	60fb      	str	r3, [r7, #12]
 800162e:	4b11      	ldr	r3, [pc, #68]	; (8001674 <HAL_UART_MspInit+0x88>)
 8001630:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001632:	4a10      	ldr	r2, [pc, #64]	; (8001674 <HAL_UART_MspInit+0x88>)
 8001634:	f043 0301 	orr.w	r3, r3, #1
 8001638:	6313      	str	r3, [r2, #48]	; 0x30
 800163a:	4b0e      	ldr	r3, [pc, #56]	; (8001674 <HAL_UART_MspInit+0x88>)
 800163c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800163e:	f003 0301 	and.w	r3, r3, #1
 8001642:	60fb      	str	r3, [r7, #12]
 8001644:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 8001646:	230c      	movs	r3, #12
 8001648:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800164a:	2302      	movs	r3, #2
 800164c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800164e:	2300      	movs	r3, #0
 8001650:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001652:	2303      	movs	r3, #3
 8001654:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8001656:	2307      	movs	r3, #7
 8001658:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800165a:	f107 0314 	add.w	r3, r7, #20
 800165e:	4619      	mov	r1, r3
 8001660:	4805      	ldr	r0, [pc, #20]	; (8001678 <HAL_UART_MspInit+0x8c>)
 8001662:	f000 f97d 	bl	8001960 <HAL_GPIO_Init>

  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }
}
 8001666:	bf00      	nop
 8001668:	3728      	adds	r7, #40	; 0x28
 800166a:	46bd      	mov	sp, r7
 800166c:	bd80      	pop	{r7, pc}
 800166e:	bf00      	nop
 8001670:	40004400 	.word	0x40004400
 8001674:	40023800 	.word	0x40023800
 8001678:	40020000 	.word	0x40020000

0800167c <Reset_Handler>:
 800167c:	f8df d034 	ldr.w	sp, [pc, #52]	; 80016b4 <LoopFillZerobss+0x12>
 8001680:	480d      	ldr	r0, [pc, #52]	; (80016b8 <LoopFillZerobss+0x16>)
 8001682:	490e      	ldr	r1, [pc, #56]	; (80016bc <LoopFillZerobss+0x1a>)
 8001684:	4a0e      	ldr	r2, [pc, #56]	; (80016c0 <LoopFillZerobss+0x1e>)
 8001686:	2300      	movs	r3, #0
 8001688:	e002      	b.n	8001690 <LoopCopyDataInit>

0800168a <CopyDataInit>:
 800168a:	58d4      	ldr	r4, [r2, r3]
 800168c:	50c4      	str	r4, [r0, r3]
 800168e:	3304      	adds	r3, #4

08001690 <LoopCopyDataInit>:
 8001690:	18c4      	adds	r4, r0, r3
 8001692:	428c      	cmp	r4, r1
 8001694:	d3f9      	bcc.n	800168a <CopyDataInit>
 8001696:	4a0b      	ldr	r2, [pc, #44]	; (80016c4 <LoopFillZerobss+0x22>)
 8001698:	4c0b      	ldr	r4, [pc, #44]	; (80016c8 <LoopFillZerobss+0x26>)
 800169a:	2300      	movs	r3, #0
 800169c:	e001      	b.n	80016a2 <LoopFillZerobss>

0800169e <FillZerobss>:
 800169e:	6013      	str	r3, [r2, #0]
 80016a0:	3204      	adds	r2, #4

080016a2 <LoopFillZerobss>:
 80016a2:	42a2      	cmp	r2, r4
 80016a4:	d3fb      	bcc.n	800169e <FillZerobss>
 80016a6:	f7ff fe61 	bl	800136c <SystemInit>
 80016aa:	f002 fd3d 	bl	8004128 <__libc_init_array>
 80016ae:	f7ff fb77 	bl	8000da0 <main>
 80016b2:	4770      	bx	lr
 80016b4:	20020000 	.word	0x20020000
 80016b8:	20000000 	.word	0x20000000
 80016bc:	2000005c 	.word	0x2000005c
 80016c0:	08004b7c 	.word	0x08004b7c
 80016c4:	2000005c 	.word	0x2000005c
 80016c8:	2000033c 	.word	0x2000033c

080016cc <ADC_IRQHandler>:
 80016cc:	e7fe      	b.n	80016cc <ADC_IRQHandler>
	...

080016d0 <HAL_Init>:
 80016d0:	b580      	push	{r7, lr}
 80016d2:	af00      	add	r7, sp, #0
 80016d4:	4b0e      	ldr	r3, [pc, #56]	; (8001710 <HAL_Init+0x40>)
 80016d6:	681b      	ldr	r3, [r3, #0]
 80016d8:	4a0d      	ldr	r2, [pc, #52]	; (8001710 <HAL_Init+0x40>)
 80016da:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80016de:	6013      	str	r3, [r2, #0]
 80016e0:	4b0b      	ldr	r3, [pc, #44]	; (8001710 <HAL_Init+0x40>)
 80016e2:	681b      	ldr	r3, [r3, #0]
 80016e4:	4a0a      	ldr	r2, [pc, #40]	; (8001710 <HAL_Init+0x40>)
 80016e6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80016ea:	6013      	str	r3, [r2, #0]
 80016ec:	4b08      	ldr	r3, [pc, #32]	; (8001710 <HAL_Init+0x40>)
 80016ee:	681b      	ldr	r3, [r3, #0]
 80016f0:	4a07      	ldr	r2, [pc, #28]	; (8001710 <HAL_Init+0x40>)
 80016f2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80016f6:	6013      	str	r3, [r2, #0]
 80016f8:	2003      	movs	r0, #3
 80016fa:	f000 f8fc 	bl	80018f6 <HAL_NVIC_SetPriorityGrouping>
 80016fe:	2000      	movs	r0, #0
 8001700:	f7ff fd4c 	bl	800119c <HAL_InitTick>
 8001704:	f7ff fd22 	bl	800114c <HAL_MspInit>
 8001708:	2300      	movs	r3, #0
 800170a:	4618      	mov	r0, r3
 800170c:	bd80      	pop	{r7, pc}
 800170e:	bf00      	nop
 8001710:	40023c00 	.word	0x40023c00

08001714 <HAL_IncTick>:
 8001714:	b480      	push	{r7}
 8001716:	af00      	add	r7, sp, #0
 8001718:	4b06      	ldr	r3, [pc, #24]	; (8001734 <HAL_IncTick+0x20>)
 800171a:	781b      	ldrb	r3, [r3, #0]
 800171c:	461a      	mov	r2, r3
 800171e:	4b06      	ldr	r3, [pc, #24]	; (8001738 <HAL_IncTick+0x24>)
 8001720:	681b      	ldr	r3, [r3, #0]
 8001722:	4413      	add	r3, r2
 8001724:	4a04      	ldr	r2, [pc, #16]	; (8001738 <HAL_IncTick+0x24>)
 8001726:	6013      	str	r3, [r2, #0]
 8001728:	bf00      	nop
 800172a:	46bd      	mov	sp, r7
 800172c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001730:	4770      	bx	lr
 8001732:	bf00      	nop
 8001734:	20000008 	.word	0x20000008
 8001738:	200001f0 	.word	0x200001f0

0800173c <HAL_GetTick>:
 800173c:	b480      	push	{r7}
 800173e:	af00      	add	r7, sp, #0
 8001740:	4b03      	ldr	r3, [pc, #12]	; (8001750 <HAL_GetTick+0x14>)
 8001742:	681b      	ldr	r3, [r3, #0]
 8001744:	4618      	mov	r0, r3
 8001746:	46bd      	mov	sp, r7
 8001748:	f85d 7b04 	ldr.w	r7, [sp], #4
 800174c:	4770      	bx	lr
 800174e:	bf00      	nop
 8001750:	200001f0 	.word	0x200001f0

08001754 <HAL_Delay>:
 8001754:	b580      	push	{r7, lr}
 8001756:	b084      	sub	sp, #16
 8001758:	af00      	add	r7, sp, #0
 800175a:	6078      	str	r0, [r7, #4]
 800175c:	f7ff ffee 	bl	800173c <HAL_GetTick>
 8001760:	60b8      	str	r0, [r7, #8]
 8001762:	687b      	ldr	r3, [r7, #4]
 8001764:	60fb      	str	r3, [r7, #12]
 8001766:	68fb      	ldr	r3, [r7, #12]
 8001768:	f1b3 3fff 	cmp.w	r3, #4294967295
 800176c:	d005      	beq.n	800177a <HAL_Delay+0x26>
 800176e:	4b0a      	ldr	r3, [pc, #40]	; (8001798 <HAL_Delay+0x44>)
 8001770:	781b      	ldrb	r3, [r3, #0]
 8001772:	461a      	mov	r2, r3
 8001774:	68fb      	ldr	r3, [r7, #12]
 8001776:	4413      	add	r3, r2
 8001778:	60fb      	str	r3, [r7, #12]
 800177a:	bf00      	nop
 800177c:	f7ff ffde 	bl	800173c <HAL_GetTick>
 8001780:	4602      	mov	r2, r0
 8001782:	68bb      	ldr	r3, [r7, #8]
 8001784:	1ad3      	subs	r3, r2, r3
 8001786:	68fa      	ldr	r2, [r7, #12]
 8001788:	429a      	cmp	r2, r3
 800178a:	d8f7      	bhi.n	800177c <HAL_Delay+0x28>
 800178c:	bf00      	nop
 800178e:	bf00      	nop
 8001790:	3710      	adds	r7, #16
 8001792:	46bd      	mov	sp, r7
 8001794:	bd80      	pop	{r7, pc}
 8001796:	bf00      	nop
 8001798:	20000008 	.word	0x20000008

0800179c <__NVIC_SetPriorityGrouping>:
 800179c:	b480      	push	{r7}
 800179e:	b085      	sub	sp, #20
 80017a0:	af00      	add	r7, sp, #0
 80017a2:	6078      	str	r0, [r7, #4]
 80017a4:	687b      	ldr	r3, [r7, #4]
 80017a6:	f003 0307 	and.w	r3, r3, #7
 80017aa:	60fb      	str	r3, [r7, #12]
 80017ac:	4b0c      	ldr	r3, [pc, #48]	; (80017e0 <__NVIC_SetPriorityGrouping+0x44>)
 80017ae:	68db      	ldr	r3, [r3, #12]
 80017b0:	60bb      	str	r3, [r7, #8]
 80017b2:	68ba      	ldr	r2, [r7, #8]
 80017b4:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80017b8:	4013      	ands	r3, r2
 80017ba:	60bb      	str	r3, [r7, #8]
 80017bc:	68fb      	ldr	r3, [r7, #12]
 80017be:	021a      	lsls	r2, r3, #8
 80017c0:	68bb      	ldr	r3, [r7, #8]
 80017c2:	4313      	orrs	r3, r2
 80017c4:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80017c8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80017cc:	60bb      	str	r3, [r7, #8]
 80017ce:	4a04      	ldr	r2, [pc, #16]	; (80017e0 <__NVIC_SetPriorityGrouping+0x44>)
 80017d0:	68bb      	ldr	r3, [r7, #8]
 80017d2:	60d3      	str	r3, [r2, #12]
 80017d4:	bf00      	nop
 80017d6:	3714      	adds	r7, #20
 80017d8:	46bd      	mov	sp, r7
 80017da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017de:	4770      	bx	lr
 80017e0:	e000ed00 	.word	0xe000ed00

080017e4 <__NVIC_GetPriorityGrouping>:
 80017e4:	b480      	push	{r7}
 80017e6:	af00      	add	r7, sp, #0
 80017e8:	4b04      	ldr	r3, [pc, #16]	; (80017fc <__NVIC_GetPriorityGrouping+0x18>)
 80017ea:	68db      	ldr	r3, [r3, #12]
 80017ec:	0a1b      	lsrs	r3, r3, #8
 80017ee:	f003 0307 	and.w	r3, r3, #7
 80017f2:	4618      	mov	r0, r3
 80017f4:	46bd      	mov	sp, r7
 80017f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017fa:	4770      	bx	lr
 80017fc:	e000ed00 	.word	0xe000ed00

08001800 <__NVIC_EnableIRQ>:
 8001800:	b480      	push	{r7}
 8001802:	b083      	sub	sp, #12
 8001804:	af00      	add	r7, sp, #0
 8001806:	4603      	mov	r3, r0
 8001808:	71fb      	strb	r3, [r7, #7]
 800180a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800180e:	2b00      	cmp	r3, #0
 8001810:	db0b      	blt.n	800182a <__NVIC_EnableIRQ+0x2a>
 8001812:	79fb      	ldrb	r3, [r7, #7]
 8001814:	f003 021f 	and.w	r2, r3, #31
 8001818:	4907      	ldr	r1, [pc, #28]	; (8001838 <__NVIC_EnableIRQ+0x38>)
 800181a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800181e:	095b      	lsrs	r3, r3, #5
 8001820:	2001      	movs	r0, #1
 8001822:	fa00 f202 	lsl.w	r2, r0, r2
 8001826:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800182a:	bf00      	nop
 800182c:	370c      	adds	r7, #12
 800182e:	46bd      	mov	sp, r7
 8001830:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001834:	4770      	bx	lr
 8001836:	bf00      	nop
 8001838:	e000e100 	.word	0xe000e100

0800183c <__NVIC_SetPriority>:
 800183c:	b480      	push	{r7}
 800183e:	b083      	sub	sp, #12
 8001840:	af00      	add	r7, sp, #0
 8001842:	4603      	mov	r3, r0
 8001844:	6039      	str	r1, [r7, #0]
 8001846:	71fb      	strb	r3, [r7, #7]
 8001848:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800184c:	2b00      	cmp	r3, #0
 800184e:	db0a      	blt.n	8001866 <__NVIC_SetPriority+0x2a>
 8001850:	683b      	ldr	r3, [r7, #0]
 8001852:	b2da      	uxtb	r2, r3
 8001854:	490c      	ldr	r1, [pc, #48]	; (8001888 <__NVIC_SetPriority+0x4c>)
 8001856:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800185a:	0112      	lsls	r2, r2, #4
 800185c:	b2d2      	uxtb	r2, r2
 800185e:	440b      	add	r3, r1
 8001860:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001864:	e00a      	b.n	800187c <__NVIC_SetPriority+0x40>
 8001866:	683b      	ldr	r3, [r7, #0]
 8001868:	b2da      	uxtb	r2, r3
 800186a:	4908      	ldr	r1, [pc, #32]	; (800188c <__NVIC_SetPriority+0x50>)
 800186c:	79fb      	ldrb	r3, [r7, #7]
 800186e:	f003 030f 	and.w	r3, r3, #15
 8001872:	3b04      	subs	r3, #4
 8001874:	0112      	lsls	r2, r2, #4
 8001876:	b2d2      	uxtb	r2, r2
 8001878:	440b      	add	r3, r1
 800187a:	761a      	strb	r2, [r3, #24]
 800187c:	bf00      	nop
 800187e:	370c      	adds	r7, #12
 8001880:	46bd      	mov	sp, r7
 8001882:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001886:	4770      	bx	lr
 8001888:	e000e100 	.word	0xe000e100
 800188c:	e000ed00 	.word	0xe000ed00

08001890 <NVIC_EncodePriority>:
 8001890:	b480      	push	{r7}
 8001892:	b089      	sub	sp, #36	; 0x24
 8001894:	af00      	add	r7, sp, #0
 8001896:	60f8      	str	r0, [r7, #12]
 8001898:	60b9      	str	r1, [r7, #8]
 800189a:	607a      	str	r2, [r7, #4]
 800189c:	68fb      	ldr	r3, [r7, #12]
 800189e:	f003 0307 	and.w	r3, r3, #7
 80018a2:	61fb      	str	r3, [r7, #28]
 80018a4:	69fb      	ldr	r3, [r7, #28]
 80018a6:	f1c3 0307 	rsb	r3, r3, #7
 80018aa:	2b04      	cmp	r3, #4
 80018ac:	bf28      	it	cs
 80018ae:	2304      	movcs	r3, #4
 80018b0:	61bb      	str	r3, [r7, #24]
 80018b2:	69fb      	ldr	r3, [r7, #28]
 80018b4:	3304      	adds	r3, #4
 80018b6:	2b06      	cmp	r3, #6
 80018b8:	d902      	bls.n	80018c0 <NVIC_EncodePriority+0x30>
 80018ba:	69fb      	ldr	r3, [r7, #28]
 80018bc:	3b03      	subs	r3, #3
 80018be:	e000      	b.n	80018c2 <NVIC_EncodePriority+0x32>
 80018c0:	2300      	movs	r3, #0
 80018c2:	617b      	str	r3, [r7, #20]
 80018c4:	f04f 32ff 	mov.w	r2, #4294967295
 80018c8:	69bb      	ldr	r3, [r7, #24]
 80018ca:	fa02 f303 	lsl.w	r3, r2, r3
 80018ce:	43da      	mvns	r2, r3
 80018d0:	68bb      	ldr	r3, [r7, #8]
 80018d2:	401a      	ands	r2, r3
 80018d4:	697b      	ldr	r3, [r7, #20]
 80018d6:	409a      	lsls	r2, r3
 80018d8:	f04f 31ff 	mov.w	r1, #4294967295
 80018dc:	697b      	ldr	r3, [r7, #20]
 80018de:	fa01 f303 	lsl.w	r3, r1, r3
 80018e2:	43d9      	mvns	r1, r3
 80018e4:	687b      	ldr	r3, [r7, #4]
 80018e6:	400b      	ands	r3, r1
 80018e8:	4313      	orrs	r3, r2
 80018ea:	4618      	mov	r0, r3
 80018ec:	3724      	adds	r7, #36	; 0x24
 80018ee:	46bd      	mov	sp, r7
 80018f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018f4:	4770      	bx	lr

080018f6 <HAL_NVIC_SetPriorityGrouping>:
 80018f6:	b580      	push	{r7, lr}
 80018f8:	b082      	sub	sp, #8
 80018fa:	af00      	add	r7, sp, #0
 80018fc:	6078      	str	r0, [r7, #4]
 80018fe:	6878      	ldr	r0, [r7, #4]
 8001900:	f7ff ff4c 	bl	800179c <__NVIC_SetPriorityGrouping>
 8001904:	bf00      	nop
 8001906:	3708      	adds	r7, #8
 8001908:	46bd      	mov	sp, r7
 800190a:	bd80      	pop	{r7, pc}

0800190c <HAL_NVIC_SetPriority>:
 800190c:	b580      	push	{r7, lr}
 800190e:	b086      	sub	sp, #24
 8001910:	af00      	add	r7, sp, #0
 8001912:	4603      	mov	r3, r0
 8001914:	60b9      	str	r1, [r7, #8]
 8001916:	607a      	str	r2, [r7, #4]
 8001918:	73fb      	strb	r3, [r7, #15]
 800191a:	2300      	movs	r3, #0
 800191c:	617b      	str	r3, [r7, #20]
 800191e:	f7ff ff61 	bl	80017e4 <__NVIC_GetPriorityGrouping>
 8001922:	6178      	str	r0, [r7, #20]
 8001924:	687a      	ldr	r2, [r7, #4]
 8001926:	68b9      	ldr	r1, [r7, #8]
 8001928:	6978      	ldr	r0, [r7, #20]
 800192a:	f7ff ffb1 	bl	8001890 <NVIC_EncodePriority>
 800192e:	4602      	mov	r2, r0
 8001930:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001934:	4611      	mov	r1, r2
 8001936:	4618      	mov	r0, r3
 8001938:	f7ff ff80 	bl	800183c <__NVIC_SetPriority>
 800193c:	bf00      	nop
 800193e:	3718      	adds	r7, #24
 8001940:	46bd      	mov	sp, r7
 8001942:	bd80      	pop	{r7, pc}

08001944 <HAL_NVIC_EnableIRQ>:
 8001944:	b580      	push	{r7, lr}
 8001946:	b082      	sub	sp, #8
 8001948:	af00      	add	r7, sp, #0
 800194a:	4603      	mov	r3, r0
 800194c:	71fb      	strb	r3, [r7, #7]
 800194e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001952:	4618      	mov	r0, r3
 8001954:	f7ff ff54 	bl	8001800 <__NVIC_EnableIRQ>
 8001958:	bf00      	nop
 800195a:	3708      	adds	r7, #8
 800195c:	46bd      	mov	sp, r7
 800195e:	bd80      	pop	{r7, pc}

08001960 <HAL_GPIO_Init>:
 8001960:	b480      	push	{r7}
 8001962:	b089      	sub	sp, #36	; 0x24
 8001964:	af00      	add	r7, sp, #0
 8001966:	6078      	str	r0, [r7, #4]
 8001968:	6039      	str	r1, [r7, #0]
 800196a:	2300      	movs	r3, #0
 800196c:	617b      	str	r3, [r7, #20]
 800196e:	2300      	movs	r3, #0
 8001970:	613b      	str	r3, [r7, #16]
 8001972:	2300      	movs	r3, #0
 8001974:	61bb      	str	r3, [r7, #24]
 8001976:	2300      	movs	r3, #0
 8001978:	61fb      	str	r3, [r7, #28]
 800197a:	e165      	b.n	8001c48 <HAL_GPIO_Init+0x2e8>
 800197c:	2201      	movs	r2, #1
 800197e:	69fb      	ldr	r3, [r7, #28]
 8001980:	fa02 f303 	lsl.w	r3, r2, r3
 8001984:	617b      	str	r3, [r7, #20]
 8001986:	683b      	ldr	r3, [r7, #0]
 8001988:	681b      	ldr	r3, [r3, #0]
 800198a:	697a      	ldr	r2, [r7, #20]
 800198c:	4013      	ands	r3, r2
 800198e:	613b      	str	r3, [r7, #16]
 8001990:	693a      	ldr	r2, [r7, #16]
 8001992:	697b      	ldr	r3, [r7, #20]
 8001994:	429a      	cmp	r2, r3
 8001996:	f040 8154 	bne.w	8001c42 <HAL_GPIO_Init+0x2e2>
 800199a:	683b      	ldr	r3, [r7, #0]
 800199c:	685b      	ldr	r3, [r3, #4]
 800199e:	f003 0303 	and.w	r3, r3, #3
 80019a2:	2b01      	cmp	r3, #1
 80019a4:	d005      	beq.n	80019b2 <HAL_GPIO_Init+0x52>
 80019a6:	683b      	ldr	r3, [r7, #0]
 80019a8:	685b      	ldr	r3, [r3, #4]
 80019aa:	f003 0303 	and.w	r3, r3, #3
 80019ae:	2b02      	cmp	r3, #2
 80019b0:	d130      	bne.n	8001a14 <HAL_GPIO_Init+0xb4>
 80019b2:	687b      	ldr	r3, [r7, #4]
 80019b4:	689b      	ldr	r3, [r3, #8]
 80019b6:	61bb      	str	r3, [r7, #24]
 80019b8:	69fb      	ldr	r3, [r7, #28]
 80019ba:	005b      	lsls	r3, r3, #1
 80019bc:	2203      	movs	r2, #3
 80019be:	fa02 f303 	lsl.w	r3, r2, r3
 80019c2:	43db      	mvns	r3, r3
 80019c4:	69ba      	ldr	r2, [r7, #24]
 80019c6:	4013      	ands	r3, r2
 80019c8:	61bb      	str	r3, [r7, #24]
 80019ca:	683b      	ldr	r3, [r7, #0]
 80019cc:	68da      	ldr	r2, [r3, #12]
 80019ce:	69fb      	ldr	r3, [r7, #28]
 80019d0:	005b      	lsls	r3, r3, #1
 80019d2:	fa02 f303 	lsl.w	r3, r2, r3
 80019d6:	69ba      	ldr	r2, [r7, #24]
 80019d8:	4313      	orrs	r3, r2
 80019da:	61bb      	str	r3, [r7, #24]
 80019dc:	687b      	ldr	r3, [r7, #4]
 80019de:	69ba      	ldr	r2, [r7, #24]
 80019e0:	609a      	str	r2, [r3, #8]
 80019e2:	687b      	ldr	r3, [r7, #4]
 80019e4:	685b      	ldr	r3, [r3, #4]
 80019e6:	61bb      	str	r3, [r7, #24]
 80019e8:	2201      	movs	r2, #1
 80019ea:	69fb      	ldr	r3, [r7, #28]
 80019ec:	fa02 f303 	lsl.w	r3, r2, r3
 80019f0:	43db      	mvns	r3, r3
 80019f2:	69ba      	ldr	r2, [r7, #24]
 80019f4:	4013      	ands	r3, r2
 80019f6:	61bb      	str	r3, [r7, #24]
 80019f8:	683b      	ldr	r3, [r7, #0]
 80019fa:	685b      	ldr	r3, [r3, #4]
 80019fc:	091b      	lsrs	r3, r3, #4
 80019fe:	f003 0201 	and.w	r2, r3, #1
 8001a02:	69fb      	ldr	r3, [r7, #28]
 8001a04:	fa02 f303 	lsl.w	r3, r2, r3
 8001a08:	69ba      	ldr	r2, [r7, #24]
 8001a0a:	4313      	orrs	r3, r2
 8001a0c:	61bb      	str	r3, [r7, #24]
 8001a0e:	687b      	ldr	r3, [r7, #4]
 8001a10:	69ba      	ldr	r2, [r7, #24]
 8001a12:	605a      	str	r2, [r3, #4]
 8001a14:	683b      	ldr	r3, [r7, #0]
 8001a16:	685b      	ldr	r3, [r3, #4]
 8001a18:	f003 0303 	and.w	r3, r3, #3
 8001a1c:	2b03      	cmp	r3, #3
 8001a1e:	d017      	beq.n	8001a50 <HAL_GPIO_Init+0xf0>
 8001a20:	687b      	ldr	r3, [r7, #4]
 8001a22:	68db      	ldr	r3, [r3, #12]
 8001a24:	61bb      	str	r3, [r7, #24]
 8001a26:	69fb      	ldr	r3, [r7, #28]
 8001a28:	005b      	lsls	r3, r3, #1
 8001a2a:	2203      	movs	r2, #3
 8001a2c:	fa02 f303 	lsl.w	r3, r2, r3
 8001a30:	43db      	mvns	r3, r3
 8001a32:	69ba      	ldr	r2, [r7, #24]
 8001a34:	4013      	ands	r3, r2
 8001a36:	61bb      	str	r3, [r7, #24]
 8001a38:	683b      	ldr	r3, [r7, #0]
 8001a3a:	689a      	ldr	r2, [r3, #8]
 8001a3c:	69fb      	ldr	r3, [r7, #28]
 8001a3e:	005b      	lsls	r3, r3, #1
 8001a40:	fa02 f303 	lsl.w	r3, r2, r3
 8001a44:	69ba      	ldr	r2, [r7, #24]
 8001a46:	4313      	orrs	r3, r2
 8001a48:	61bb      	str	r3, [r7, #24]
 8001a4a:	687b      	ldr	r3, [r7, #4]
 8001a4c:	69ba      	ldr	r2, [r7, #24]
 8001a4e:	60da      	str	r2, [r3, #12]
 8001a50:	683b      	ldr	r3, [r7, #0]
 8001a52:	685b      	ldr	r3, [r3, #4]
 8001a54:	f003 0303 	and.w	r3, r3, #3
 8001a58:	2b02      	cmp	r3, #2
 8001a5a:	d123      	bne.n	8001aa4 <HAL_GPIO_Init+0x144>
 8001a5c:	69fb      	ldr	r3, [r7, #28]
 8001a5e:	08da      	lsrs	r2, r3, #3
 8001a60:	687b      	ldr	r3, [r7, #4]
 8001a62:	3208      	adds	r2, #8
 8001a64:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001a68:	61bb      	str	r3, [r7, #24]
 8001a6a:	69fb      	ldr	r3, [r7, #28]
 8001a6c:	f003 0307 	and.w	r3, r3, #7
 8001a70:	009b      	lsls	r3, r3, #2
 8001a72:	220f      	movs	r2, #15
 8001a74:	fa02 f303 	lsl.w	r3, r2, r3
 8001a78:	43db      	mvns	r3, r3
 8001a7a:	69ba      	ldr	r2, [r7, #24]
 8001a7c:	4013      	ands	r3, r2
 8001a7e:	61bb      	str	r3, [r7, #24]
 8001a80:	683b      	ldr	r3, [r7, #0]
 8001a82:	691a      	ldr	r2, [r3, #16]
 8001a84:	69fb      	ldr	r3, [r7, #28]
 8001a86:	f003 0307 	and.w	r3, r3, #7
 8001a8a:	009b      	lsls	r3, r3, #2
 8001a8c:	fa02 f303 	lsl.w	r3, r2, r3
 8001a90:	69ba      	ldr	r2, [r7, #24]
 8001a92:	4313      	orrs	r3, r2
 8001a94:	61bb      	str	r3, [r7, #24]
 8001a96:	69fb      	ldr	r3, [r7, #28]
 8001a98:	08da      	lsrs	r2, r3, #3
 8001a9a:	687b      	ldr	r3, [r7, #4]
 8001a9c:	3208      	adds	r2, #8
 8001a9e:	69b9      	ldr	r1, [r7, #24]
 8001aa0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001aa4:	687b      	ldr	r3, [r7, #4]
 8001aa6:	681b      	ldr	r3, [r3, #0]
 8001aa8:	61bb      	str	r3, [r7, #24]
 8001aaa:	69fb      	ldr	r3, [r7, #28]
 8001aac:	005b      	lsls	r3, r3, #1
 8001aae:	2203      	movs	r2, #3
 8001ab0:	fa02 f303 	lsl.w	r3, r2, r3
 8001ab4:	43db      	mvns	r3, r3
 8001ab6:	69ba      	ldr	r2, [r7, #24]
 8001ab8:	4013      	ands	r3, r2
 8001aba:	61bb      	str	r3, [r7, #24]
 8001abc:	683b      	ldr	r3, [r7, #0]
 8001abe:	685b      	ldr	r3, [r3, #4]
 8001ac0:	f003 0203 	and.w	r2, r3, #3
 8001ac4:	69fb      	ldr	r3, [r7, #28]
 8001ac6:	005b      	lsls	r3, r3, #1
 8001ac8:	fa02 f303 	lsl.w	r3, r2, r3
 8001acc:	69ba      	ldr	r2, [r7, #24]
 8001ace:	4313      	orrs	r3, r2
 8001ad0:	61bb      	str	r3, [r7, #24]
 8001ad2:	687b      	ldr	r3, [r7, #4]
 8001ad4:	69ba      	ldr	r2, [r7, #24]
 8001ad6:	601a      	str	r2, [r3, #0]
 8001ad8:	683b      	ldr	r3, [r7, #0]
 8001ada:	685b      	ldr	r3, [r3, #4]
 8001adc:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8001ae0:	2b00      	cmp	r3, #0
 8001ae2:	f000 80ae 	beq.w	8001c42 <HAL_GPIO_Init+0x2e2>
 8001ae6:	2300      	movs	r3, #0
 8001ae8:	60fb      	str	r3, [r7, #12]
 8001aea:	4b5d      	ldr	r3, [pc, #372]	; (8001c60 <HAL_GPIO_Init+0x300>)
 8001aec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001aee:	4a5c      	ldr	r2, [pc, #368]	; (8001c60 <HAL_GPIO_Init+0x300>)
 8001af0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001af4:	6453      	str	r3, [r2, #68]	; 0x44
 8001af6:	4b5a      	ldr	r3, [pc, #360]	; (8001c60 <HAL_GPIO_Init+0x300>)
 8001af8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001afa:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001afe:	60fb      	str	r3, [r7, #12]
 8001b00:	68fb      	ldr	r3, [r7, #12]
 8001b02:	4a58      	ldr	r2, [pc, #352]	; (8001c64 <HAL_GPIO_Init+0x304>)
 8001b04:	69fb      	ldr	r3, [r7, #28]
 8001b06:	089b      	lsrs	r3, r3, #2
 8001b08:	3302      	adds	r3, #2
 8001b0a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001b0e:	61bb      	str	r3, [r7, #24]
 8001b10:	69fb      	ldr	r3, [r7, #28]
 8001b12:	f003 0303 	and.w	r3, r3, #3
 8001b16:	009b      	lsls	r3, r3, #2
 8001b18:	220f      	movs	r2, #15
 8001b1a:	fa02 f303 	lsl.w	r3, r2, r3
 8001b1e:	43db      	mvns	r3, r3
 8001b20:	69ba      	ldr	r2, [r7, #24]
 8001b22:	4013      	ands	r3, r2
 8001b24:	61bb      	str	r3, [r7, #24]
 8001b26:	687b      	ldr	r3, [r7, #4]
 8001b28:	4a4f      	ldr	r2, [pc, #316]	; (8001c68 <HAL_GPIO_Init+0x308>)
 8001b2a:	4293      	cmp	r3, r2
 8001b2c:	d025      	beq.n	8001b7a <HAL_GPIO_Init+0x21a>
 8001b2e:	687b      	ldr	r3, [r7, #4]
 8001b30:	4a4e      	ldr	r2, [pc, #312]	; (8001c6c <HAL_GPIO_Init+0x30c>)
 8001b32:	4293      	cmp	r3, r2
 8001b34:	d01f      	beq.n	8001b76 <HAL_GPIO_Init+0x216>
 8001b36:	687b      	ldr	r3, [r7, #4]
 8001b38:	4a4d      	ldr	r2, [pc, #308]	; (8001c70 <HAL_GPIO_Init+0x310>)
 8001b3a:	4293      	cmp	r3, r2
 8001b3c:	d019      	beq.n	8001b72 <HAL_GPIO_Init+0x212>
 8001b3e:	687b      	ldr	r3, [r7, #4]
 8001b40:	4a4c      	ldr	r2, [pc, #304]	; (8001c74 <HAL_GPIO_Init+0x314>)
 8001b42:	4293      	cmp	r3, r2
 8001b44:	d013      	beq.n	8001b6e <HAL_GPIO_Init+0x20e>
 8001b46:	687b      	ldr	r3, [r7, #4]
 8001b48:	4a4b      	ldr	r2, [pc, #300]	; (8001c78 <HAL_GPIO_Init+0x318>)
 8001b4a:	4293      	cmp	r3, r2
 8001b4c:	d00d      	beq.n	8001b6a <HAL_GPIO_Init+0x20a>
 8001b4e:	687b      	ldr	r3, [r7, #4]
 8001b50:	4a4a      	ldr	r2, [pc, #296]	; (8001c7c <HAL_GPIO_Init+0x31c>)
 8001b52:	4293      	cmp	r3, r2
 8001b54:	d007      	beq.n	8001b66 <HAL_GPIO_Init+0x206>
 8001b56:	687b      	ldr	r3, [r7, #4]
 8001b58:	4a49      	ldr	r2, [pc, #292]	; (8001c80 <HAL_GPIO_Init+0x320>)
 8001b5a:	4293      	cmp	r3, r2
 8001b5c:	d101      	bne.n	8001b62 <HAL_GPIO_Init+0x202>
 8001b5e:	2306      	movs	r3, #6
 8001b60:	e00c      	b.n	8001b7c <HAL_GPIO_Init+0x21c>
 8001b62:	2307      	movs	r3, #7
 8001b64:	e00a      	b.n	8001b7c <HAL_GPIO_Init+0x21c>
 8001b66:	2305      	movs	r3, #5
 8001b68:	e008      	b.n	8001b7c <HAL_GPIO_Init+0x21c>
 8001b6a:	2304      	movs	r3, #4
 8001b6c:	e006      	b.n	8001b7c <HAL_GPIO_Init+0x21c>
 8001b6e:	2303      	movs	r3, #3
 8001b70:	e004      	b.n	8001b7c <HAL_GPIO_Init+0x21c>
 8001b72:	2302      	movs	r3, #2
 8001b74:	e002      	b.n	8001b7c <HAL_GPIO_Init+0x21c>
 8001b76:	2301      	movs	r3, #1
 8001b78:	e000      	b.n	8001b7c <HAL_GPIO_Init+0x21c>
 8001b7a:	2300      	movs	r3, #0
 8001b7c:	69fa      	ldr	r2, [r7, #28]
 8001b7e:	f002 0203 	and.w	r2, r2, #3
 8001b82:	0092      	lsls	r2, r2, #2
 8001b84:	4093      	lsls	r3, r2
 8001b86:	69ba      	ldr	r2, [r7, #24]
 8001b88:	4313      	orrs	r3, r2
 8001b8a:	61bb      	str	r3, [r7, #24]
 8001b8c:	4935      	ldr	r1, [pc, #212]	; (8001c64 <HAL_GPIO_Init+0x304>)
 8001b8e:	69fb      	ldr	r3, [r7, #28]
 8001b90:	089b      	lsrs	r3, r3, #2
 8001b92:	3302      	adds	r3, #2
 8001b94:	69ba      	ldr	r2, [r7, #24]
 8001b96:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001b9a:	4b3a      	ldr	r3, [pc, #232]	; (8001c84 <HAL_GPIO_Init+0x324>)
 8001b9c:	689b      	ldr	r3, [r3, #8]
 8001b9e:	61bb      	str	r3, [r7, #24]
 8001ba0:	693b      	ldr	r3, [r7, #16]
 8001ba2:	43db      	mvns	r3, r3
 8001ba4:	69ba      	ldr	r2, [r7, #24]
 8001ba6:	4013      	ands	r3, r2
 8001ba8:	61bb      	str	r3, [r7, #24]
 8001baa:	683b      	ldr	r3, [r7, #0]
 8001bac:	685b      	ldr	r3, [r3, #4]
 8001bae:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001bb2:	2b00      	cmp	r3, #0
 8001bb4:	d003      	beq.n	8001bbe <HAL_GPIO_Init+0x25e>
 8001bb6:	69ba      	ldr	r2, [r7, #24]
 8001bb8:	693b      	ldr	r3, [r7, #16]
 8001bba:	4313      	orrs	r3, r2
 8001bbc:	61bb      	str	r3, [r7, #24]
 8001bbe:	4a31      	ldr	r2, [pc, #196]	; (8001c84 <HAL_GPIO_Init+0x324>)
 8001bc0:	69bb      	ldr	r3, [r7, #24]
 8001bc2:	6093      	str	r3, [r2, #8]
 8001bc4:	4b2f      	ldr	r3, [pc, #188]	; (8001c84 <HAL_GPIO_Init+0x324>)
 8001bc6:	68db      	ldr	r3, [r3, #12]
 8001bc8:	61bb      	str	r3, [r7, #24]
 8001bca:	693b      	ldr	r3, [r7, #16]
 8001bcc:	43db      	mvns	r3, r3
 8001bce:	69ba      	ldr	r2, [r7, #24]
 8001bd0:	4013      	ands	r3, r2
 8001bd2:	61bb      	str	r3, [r7, #24]
 8001bd4:	683b      	ldr	r3, [r7, #0]
 8001bd6:	685b      	ldr	r3, [r3, #4]
 8001bd8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001bdc:	2b00      	cmp	r3, #0
 8001bde:	d003      	beq.n	8001be8 <HAL_GPIO_Init+0x288>
 8001be0:	69ba      	ldr	r2, [r7, #24]
 8001be2:	693b      	ldr	r3, [r7, #16]
 8001be4:	4313      	orrs	r3, r2
 8001be6:	61bb      	str	r3, [r7, #24]
 8001be8:	4a26      	ldr	r2, [pc, #152]	; (8001c84 <HAL_GPIO_Init+0x324>)
 8001bea:	69bb      	ldr	r3, [r7, #24]
 8001bec:	60d3      	str	r3, [r2, #12]
 8001bee:	4b25      	ldr	r3, [pc, #148]	; (8001c84 <HAL_GPIO_Init+0x324>)
 8001bf0:	685b      	ldr	r3, [r3, #4]
 8001bf2:	61bb      	str	r3, [r7, #24]
 8001bf4:	693b      	ldr	r3, [r7, #16]
 8001bf6:	43db      	mvns	r3, r3
 8001bf8:	69ba      	ldr	r2, [r7, #24]
 8001bfa:	4013      	ands	r3, r2
 8001bfc:	61bb      	str	r3, [r7, #24]
 8001bfe:	683b      	ldr	r3, [r7, #0]
 8001c00:	685b      	ldr	r3, [r3, #4]
 8001c02:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001c06:	2b00      	cmp	r3, #0
 8001c08:	d003      	beq.n	8001c12 <HAL_GPIO_Init+0x2b2>
 8001c0a:	69ba      	ldr	r2, [r7, #24]
 8001c0c:	693b      	ldr	r3, [r7, #16]
 8001c0e:	4313      	orrs	r3, r2
 8001c10:	61bb      	str	r3, [r7, #24]
 8001c12:	4a1c      	ldr	r2, [pc, #112]	; (8001c84 <HAL_GPIO_Init+0x324>)
 8001c14:	69bb      	ldr	r3, [r7, #24]
 8001c16:	6053      	str	r3, [r2, #4]
 8001c18:	4b1a      	ldr	r3, [pc, #104]	; (8001c84 <HAL_GPIO_Init+0x324>)
 8001c1a:	681b      	ldr	r3, [r3, #0]
 8001c1c:	61bb      	str	r3, [r7, #24]
 8001c1e:	693b      	ldr	r3, [r7, #16]
 8001c20:	43db      	mvns	r3, r3
 8001c22:	69ba      	ldr	r2, [r7, #24]
 8001c24:	4013      	ands	r3, r2
 8001c26:	61bb      	str	r3, [r7, #24]
 8001c28:	683b      	ldr	r3, [r7, #0]
 8001c2a:	685b      	ldr	r3, [r3, #4]
 8001c2c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001c30:	2b00      	cmp	r3, #0
 8001c32:	d003      	beq.n	8001c3c <HAL_GPIO_Init+0x2dc>
 8001c34:	69ba      	ldr	r2, [r7, #24]
 8001c36:	693b      	ldr	r3, [r7, #16]
 8001c38:	4313      	orrs	r3, r2
 8001c3a:	61bb      	str	r3, [r7, #24]
 8001c3c:	4a11      	ldr	r2, [pc, #68]	; (8001c84 <HAL_GPIO_Init+0x324>)
 8001c3e:	69bb      	ldr	r3, [r7, #24]
 8001c40:	6013      	str	r3, [r2, #0]
 8001c42:	69fb      	ldr	r3, [r7, #28]
 8001c44:	3301      	adds	r3, #1
 8001c46:	61fb      	str	r3, [r7, #28]
 8001c48:	69fb      	ldr	r3, [r7, #28]
 8001c4a:	2b0f      	cmp	r3, #15
 8001c4c:	f67f ae96 	bls.w	800197c <HAL_GPIO_Init+0x1c>
 8001c50:	bf00      	nop
 8001c52:	bf00      	nop
 8001c54:	3724      	adds	r7, #36	; 0x24
 8001c56:	46bd      	mov	sp, r7
 8001c58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c5c:	4770      	bx	lr
 8001c5e:	bf00      	nop
 8001c60:	40023800 	.word	0x40023800
 8001c64:	40013800 	.word	0x40013800
 8001c68:	40020000 	.word	0x40020000
 8001c6c:	40020400 	.word	0x40020400
 8001c70:	40020800 	.word	0x40020800
 8001c74:	40020c00 	.word	0x40020c00
 8001c78:	40021000 	.word	0x40021000
 8001c7c:	40021400 	.word	0x40021400
 8001c80:	40021800 	.word	0x40021800
 8001c84:	40013c00 	.word	0x40013c00

08001c88 <HAL_GPIO_ReadPin>:
 8001c88:	b480      	push	{r7}
 8001c8a:	b085      	sub	sp, #20
 8001c8c:	af00      	add	r7, sp, #0
 8001c8e:	6078      	str	r0, [r7, #4]
 8001c90:	460b      	mov	r3, r1
 8001c92:	807b      	strh	r3, [r7, #2]
 8001c94:	687b      	ldr	r3, [r7, #4]
 8001c96:	691a      	ldr	r2, [r3, #16]
 8001c98:	887b      	ldrh	r3, [r7, #2]
 8001c9a:	4013      	ands	r3, r2
 8001c9c:	2b00      	cmp	r3, #0
 8001c9e:	d002      	beq.n	8001ca6 <HAL_GPIO_ReadPin+0x1e>
 8001ca0:	2301      	movs	r3, #1
 8001ca2:	73fb      	strb	r3, [r7, #15]
 8001ca4:	e001      	b.n	8001caa <HAL_GPIO_ReadPin+0x22>
 8001ca6:	2300      	movs	r3, #0
 8001ca8:	73fb      	strb	r3, [r7, #15]
 8001caa:	7bfb      	ldrb	r3, [r7, #15]
 8001cac:	4618      	mov	r0, r3
 8001cae:	3714      	adds	r7, #20
 8001cb0:	46bd      	mov	sp, r7
 8001cb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cb6:	4770      	bx	lr

08001cb8 <HAL_GPIO_WritePin>:
 8001cb8:	b480      	push	{r7}
 8001cba:	b083      	sub	sp, #12
 8001cbc:	af00      	add	r7, sp, #0
 8001cbe:	6078      	str	r0, [r7, #4]
 8001cc0:	460b      	mov	r3, r1
 8001cc2:	807b      	strh	r3, [r7, #2]
 8001cc4:	4613      	mov	r3, r2
 8001cc6:	707b      	strb	r3, [r7, #1]
 8001cc8:	787b      	ldrb	r3, [r7, #1]
 8001cca:	2b00      	cmp	r3, #0
 8001ccc:	d003      	beq.n	8001cd6 <HAL_GPIO_WritePin+0x1e>
 8001cce:	887a      	ldrh	r2, [r7, #2]
 8001cd0:	687b      	ldr	r3, [r7, #4]
 8001cd2:	619a      	str	r2, [r3, #24]
 8001cd4:	e003      	b.n	8001cde <HAL_GPIO_WritePin+0x26>
 8001cd6:	887b      	ldrh	r3, [r7, #2]
 8001cd8:	041a      	lsls	r2, r3, #16
 8001cda:	687b      	ldr	r3, [r7, #4]
 8001cdc:	619a      	str	r2, [r3, #24]
 8001cde:	bf00      	nop
 8001ce0:	370c      	adds	r7, #12
 8001ce2:	46bd      	mov	sp, r7
 8001ce4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ce8:	4770      	bx	lr
	...

08001cec <HAL_RCC_ClockConfig>:
 8001cec:	b580      	push	{r7, lr}
 8001cee:	b084      	sub	sp, #16
 8001cf0:	af00      	add	r7, sp, #0
 8001cf2:	6078      	str	r0, [r7, #4]
 8001cf4:	6039      	str	r1, [r7, #0]
 8001cf6:	687b      	ldr	r3, [r7, #4]
 8001cf8:	2b00      	cmp	r3, #0
 8001cfa:	d101      	bne.n	8001d00 <HAL_RCC_ClockConfig+0x14>
 8001cfc:	2301      	movs	r3, #1
 8001cfe:	e0cc      	b.n	8001e9a <HAL_RCC_ClockConfig+0x1ae>
 8001d00:	4b68      	ldr	r3, [pc, #416]	; (8001ea4 <HAL_RCC_ClockConfig+0x1b8>)
 8001d02:	681b      	ldr	r3, [r3, #0]
 8001d04:	f003 030f 	and.w	r3, r3, #15
 8001d08:	683a      	ldr	r2, [r7, #0]
 8001d0a:	429a      	cmp	r2, r3
 8001d0c:	d90c      	bls.n	8001d28 <HAL_RCC_ClockConfig+0x3c>
 8001d0e:	4b65      	ldr	r3, [pc, #404]	; (8001ea4 <HAL_RCC_ClockConfig+0x1b8>)
 8001d10:	683a      	ldr	r2, [r7, #0]
 8001d12:	b2d2      	uxtb	r2, r2
 8001d14:	701a      	strb	r2, [r3, #0]
 8001d16:	4b63      	ldr	r3, [pc, #396]	; (8001ea4 <HAL_RCC_ClockConfig+0x1b8>)
 8001d18:	681b      	ldr	r3, [r3, #0]
 8001d1a:	f003 030f 	and.w	r3, r3, #15
 8001d1e:	683a      	ldr	r2, [r7, #0]
 8001d20:	429a      	cmp	r2, r3
 8001d22:	d001      	beq.n	8001d28 <HAL_RCC_ClockConfig+0x3c>
 8001d24:	2301      	movs	r3, #1
 8001d26:	e0b8      	b.n	8001e9a <HAL_RCC_ClockConfig+0x1ae>
 8001d28:	687b      	ldr	r3, [r7, #4]
 8001d2a:	681b      	ldr	r3, [r3, #0]
 8001d2c:	f003 0302 	and.w	r3, r3, #2
 8001d30:	2b00      	cmp	r3, #0
 8001d32:	d020      	beq.n	8001d76 <HAL_RCC_ClockConfig+0x8a>
 8001d34:	687b      	ldr	r3, [r7, #4]
 8001d36:	681b      	ldr	r3, [r3, #0]
 8001d38:	f003 0304 	and.w	r3, r3, #4
 8001d3c:	2b00      	cmp	r3, #0
 8001d3e:	d005      	beq.n	8001d4c <HAL_RCC_ClockConfig+0x60>
 8001d40:	4b59      	ldr	r3, [pc, #356]	; (8001ea8 <HAL_RCC_ClockConfig+0x1bc>)
 8001d42:	689b      	ldr	r3, [r3, #8]
 8001d44:	4a58      	ldr	r2, [pc, #352]	; (8001ea8 <HAL_RCC_ClockConfig+0x1bc>)
 8001d46:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8001d4a:	6093      	str	r3, [r2, #8]
 8001d4c:	687b      	ldr	r3, [r7, #4]
 8001d4e:	681b      	ldr	r3, [r3, #0]
 8001d50:	f003 0308 	and.w	r3, r3, #8
 8001d54:	2b00      	cmp	r3, #0
 8001d56:	d005      	beq.n	8001d64 <HAL_RCC_ClockConfig+0x78>
 8001d58:	4b53      	ldr	r3, [pc, #332]	; (8001ea8 <HAL_RCC_ClockConfig+0x1bc>)
 8001d5a:	689b      	ldr	r3, [r3, #8]
 8001d5c:	4a52      	ldr	r2, [pc, #328]	; (8001ea8 <HAL_RCC_ClockConfig+0x1bc>)
 8001d5e:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8001d62:	6093      	str	r3, [r2, #8]
 8001d64:	4b50      	ldr	r3, [pc, #320]	; (8001ea8 <HAL_RCC_ClockConfig+0x1bc>)
 8001d66:	689b      	ldr	r3, [r3, #8]
 8001d68:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001d6c:	687b      	ldr	r3, [r7, #4]
 8001d6e:	689b      	ldr	r3, [r3, #8]
 8001d70:	494d      	ldr	r1, [pc, #308]	; (8001ea8 <HAL_RCC_ClockConfig+0x1bc>)
 8001d72:	4313      	orrs	r3, r2
 8001d74:	608b      	str	r3, [r1, #8]
 8001d76:	687b      	ldr	r3, [r7, #4]
 8001d78:	681b      	ldr	r3, [r3, #0]
 8001d7a:	f003 0301 	and.w	r3, r3, #1
 8001d7e:	2b00      	cmp	r3, #0
 8001d80:	d044      	beq.n	8001e0c <HAL_RCC_ClockConfig+0x120>
 8001d82:	687b      	ldr	r3, [r7, #4]
 8001d84:	685b      	ldr	r3, [r3, #4]
 8001d86:	2b01      	cmp	r3, #1
 8001d88:	d107      	bne.n	8001d9a <HAL_RCC_ClockConfig+0xae>
 8001d8a:	4b47      	ldr	r3, [pc, #284]	; (8001ea8 <HAL_RCC_ClockConfig+0x1bc>)
 8001d8c:	681b      	ldr	r3, [r3, #0]
 8001d8e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001d92:	2b00      	cmp	r3, #0
 8001d94:	d119      	bne.n	8001dca <HAL_RCC_ClockConfig+0xde>
 8001d96:	2301      	movs	r3, #1
 8001d98:	e07f      	b.n	8001e9a <HAL_RCC_ClockConfig+0x1ae>
 8001d9a:	687b      	ldr	r3, [r7, #4]
 8001d9c:	685b      	ldr	r3, [r3, #4]
 8001d9e:	2b02      	cmp	r3, #2
 8001da0:	d003      	beq.n	8001daa <HAL_RCC_ClockConfig+0xbe>
 8001da2:	687b      	ldr	r3, [r7, #4]
 8001da4:	685b      	ldr	r3, [r3, #4]
 8001da6:	2b03      	cmp	r3, #3
 8001da8:	d107      	bne.n	8001dba <HAL_RCC_ClockConfig+0xce>
 8001daa:	4b3f      	ldr	r3, [pc, #252]	; (8001ea8 <HAL_RCC_ClockConfig+0x1bc>)
 8001dac:	681b      	ldr	r3, [r3, #0]
 8001dae:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001db2:	2b00      	cmp	r3, #0
 8001db4:	d109      	bne.n	8001dca <HAL_RCC_ClockConfig+0xde>
 8001db6:	2301      	movs	r3, #1
 8001db8:	e06f      	b.n	8001e9a <HAL_RCC_ClockConfig+0x1ae>
 8001dba:	4b3b      	ldr	r3, [pc, #236]	; (8001ea8 <HAL_RCC_ClockConfig+0x1bc>)
 8001dbc:	681b      	ldr	r3, [r3, #0]
 8001dbe:	f003 0302 	and.w	r3, r3, #2
 8001dc2:	2b00      	cmp	r3, #0
 8001dc4:	d101      	bne.n	8001dca <HAL_RCC_ClockConfig+0xde>
 8001dc6:	2301      	movs	r3, #1
 8001dc8:	e067      	b.n	8001e9a <HAL_RCC_ClockConfig+0x1ae>
 8001dca:	4b37      	ldr	r3, [pc, #220]	; (8001ea8 <HAL_RCC_ClockConfig+0x1bc>)
 8001dcc:	689b      	ldr	r3, [r3, #8]
 8001dce:	f023 0203 	bic.w	r2, r3, #3
 8001dd2:	687b      	ldr	r3, [r7, #4]
 8001dd4:	685b      	ldr	r3, [r3, #4]
 8001dd6:	4934      	ldr	r1, [pc, #208]	; (8001ea8 <HAL_RCC_ClockConfig+0x1bc>)
 8001dd8:	4313      	orrs	r3, r2
 8001dda:	608b      	str	r3, [r1, #8]
 8001ddc:	f7ff fcae 	bl	800173c <HAL_GetTick>
 8001de0:	60f8      	str	r0, [r7, #12]
 8001de2:	e00a      	b.n	8001dfa <HAL_RCC_ClockConfig+0x10e>
 8001de4:	f7ff fcaa 	bl	800173c <HAL_GetTick>
 8001de8:	4602      	mov	r2, r0
 8001dea:	68fb      	ldr	r3, [r7, #12]
 8001dec:	1ad3      	subs	r3, r2, r3
 8001dee:	f241 3288 	movw	r2, #5000	; 0x1388
 8001df2:	4293      	cmp	r3, r2
 8001df4:	d901      	bls.n	8001dfa <HAL_RCC_ClockConfig+0x10e>
 8001df6:	2303      	movs	r3, #3
 8001df8:	e04f      	b.n	8001e9a <HAL_RCC_ClockConfig+0x1ae>
 8001dfa:	4b2b      	ldr	r3, [pc, #172]	; (8001ea8 <HAL_RCC_ClockConfig+0x1bc>)
 8001dfc:	689b      	ldr	r3, [r3, #8]
 8001dfe:	f003 020c 	and.w	r2, r3, #12
 8001e02:	687b      	ldr	r3, [r7, #4]
 8001e04:	685b      	ldr	r3, [r3, #4]
 8001e06:	009b      	lsls	r3, r3, #2
 8001e08:	429a      	cmp	r2, r3
 8001e0a:	d1eb      	bne.n	8001de4 <HAL_RCC_ClockConfig+0xf8>
 8001e0c:	4b25      	ldr	r3, [pc, #148]	; (8001ea4 <HAL_RCC_ClockConfig+0x1b8>)
 8001e0e:	681b      	ldr	r3, [r3, #0]
 8001e10:	f003 030f 	and.w	r3, r3, #15
 8001e14:	683a      	ldr	r2, [r7, #0]
 8001e16:	429a      	cmp	r2, r3
 8001e18:	d20c      	bcs.n	8001e34 <HAL_RCC_ClockConfig+0x148>
 8001e1a:	4b22      	ldr	r3, [pc, #136]	; (8001ea4 <HAL_RCC_ClockConfig+0x1b8>)
 8001e1c:	683a      	ldr	r2, [r7, #0]
 8001e1e:	b2d2      	uxtb	r2, r2
 8001e20:	701a      	strb	r2, [r3, #0]
 8001e22:	4b20      	ldr	r3, [pc, #128]	; (8001ea4 <HAL_RCC_ClockConfig+0x1b8>)
 8001e24:	681b      	ldr	r3, [r3, #0]
 8001e26:	f003 030f 	and.w	r3, r3, #15
 8001e2a:	683a      	ldr	r2, [r7, #0]
 8001e2c:	429a      	cmp	r2, r3
 8001e2e:	d001      	beq.n	8001e34 <HAL_RCC_ClockConfig+0x148>
 8001e30:	2301      	movs	r3, #1
 8001e32:	e032      	b.n	8001e9a <HAL_RCC_ClockConfig+0x1ae>
 8001e34:	687b      	ldr	r3, [r7, #4]
 8001e36:	681b      	ldr	r3, [r3, #0]
 8001e38:	f003 0304 	and.w	r3, r3, #4
 8001e3c:	2b00      	cmp	r3, #0
 8001e3e:	d008      	beq.n	8001e52 <HAL_RCC_ClockConfig+0x166>
 8001e40:	4b19      	ldr	r3, [pc, #100]	; (8001ea8 <HAL_RCC_ClockConfig+0x1bc>)
 8001e42:	689b      	ldr	r3, [r3, #8]
 8001e44:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8001e48:	687b      	ldr	r3, [r7, #4]
 8001e4a:	68db      	ldr	r3, [r3, #12]
 8001e4c:	4916      	ldr	r1, [pc, #88]	; (8001ea8 <HAL_RCC_ClockConfig+0x1bc>)
 8001e4e:	4313      	orrs	r3, r2
 8001e50:	608b      	str	r3, [r1, #8]
 8001e52:	687b      	ldr	r3, [r7, #4]
 8001e54:	681b      	ldr	r3, [r3, #0]
 8001e56:	f003 0308 	and.w	r3, r3, #8
 8001e5a:	2b00      	cmp	r3, #0
 8001e5c:	d009      	beq.n	8001e72 <HAL_RCC_ClockConfig+0x186>
 8001e5e:	4b12      	ldr	r3, [pc, #72]	; (8001ea8 <HAL_RCC_ClockConfig+0x1bc>)
 8001e60:	689b      	ldr	r3, [r3, #8]
 8001e62:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8001e66:	687b      	ldr	r3, [r7, #4]
 8001e68:	691b      	ldr	r3, [r3, #16]
 8001e6a:	00db      	lsls	r3, r3, #3
 8001e6c:	490e      	ldr	r1, [pc, #56]	; (8001ea8 <HAL_RCC_ClockConfig+0x1bc>)
 8001e6e:	4313      	orrs	r3, r2
 8001e70:	608b      	str	r3, [r1, #8]
 8001e72:	f000 f887 	bl	8001f84 <HAL_RCC_GetSysClockFreq>
 8001e76:	4602      	mov	r2, r0
 8001e78:	4b0b      	ldr	r3, [pc, #44]	; (8001ea8 <HAL_RCC_ClockConfig+0x1bc>)
 8001e7a:	689b      	ldr	r3, [r3, #8]
 8001e7c:	091b      	lsrs	r3, r3, #4
 8001e7e:	f003 030f 	and.w	r3, r3, #15
 8001e82:	490a      	ldr	r1, [pc, #40]	; (8001eac <HAL_RCC_ClockConfig+0x1c0>)
 8001e84:	5ccb      	ldrb	r3, [r1, r3]
 8001e86:	fa22 f303 	lsr.w	r3, r2, r3
 8001e8a:	4a09      	ldr	r2, [pc, #36]	; (8001eb0 <HAL_RCC_ClockConfig+0x1c4>)
 8001e8c:	6013      	str	r3, [r2, #0]
 8001e8e:	4b09      	ldr	r3, [pc, #36]	; (8001eb4 <HAL_RCC_ClockConfig+0x1c8>)
 8001e90:	681b      	ldr	r3, [r3, #0]
 8001e92:	4618      	mov	r0, r3
 8001e94:	f7ff f982 	bl	800119c <HAL_InitTick>
 8001e98:	2300      	movs	r3, #0
 8001e9a:	4618      	mov	r0, r3
 8001e9c:	3710      	adds	r7, #16
 8001e9e:	46bd      	mov	sp, r7
 8001ea0:	bd80      	pop	{r7, pc}
 8001ea2:	bf00      	nop
 8001ea4:	40023c00 	.word	0x40023c00
 8001ea8:	40023800 	.word	0x40023800
 8001eac:	08004b20 	.word	0x08004b20
 8001eb0:	20000000 	.word	0x20000000
 8001eb4:	20000004 	.word	0x20000004

08001eb8 <HAL_RCC_GetHCLKFreq>:
 8001eb8:	b480      	push	{r7}
 8001eba:	af00      	add	r7, sp, #0
 8001ebc:	4b03      	ldr	r3, [pc, #12]	; (8001ecc <HAL_RCC_GetHCLKFreq+0x14>)
 8001ebe:	681b      	ldr	r3, [r3, #0]
 8001ec0:	4618      	mov	r0, r3
 8001ec2:	46bd      	mov	sp, r7
 8001ec4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ec8:	4770      	bx	lr
 8001eca:	bf00      	nop
 8001ecc:	20000000 	.word	0x20000000

08001ed0 <HAL_RCC_GetPCLK1Freq>:
 8001ed0:	b580      	push	{r7, lr}
 8001ed2:	af00      	add	r7, sp, #0
 8001ed4:	f7ff fff0 	bl	8001eb8 <HAL_RCC_GetHCLKFreq>
 8001ed8:	4602      	mov	r2, r0
 8001eda:	4b05      	ldr	r3, [pc, #20]	; (8001ef0 <HAL_RCC_GetPCLK1Freq+0x20>)
 8001edc:	689b      	ldr	r3, [r3, #8]
 8001ede:	0a9b      	lsrs	r3, r3, #10
 8001ee0:	f003 0307 	and.w	r3, r3, #7
 8001ee4:	4903      	ldr	r1, [pc, #12]	; (8001ef4 <HAL_RCC_GetPCLK1Freq+0x24>)
 8001ee6:	5ccb      	ldrb	r3, [r1, r3]
 8001ee8:	fa22 f303 	lsr.w	r3, r2, r3
 8001eec:	4618      	mov	r0, r3
 8001eee:	bd80      	pop	{r7, pc}
 8001ef0:	40023800 	.word	0x40023800
 8001ef4:	08004b30 	.word	0x08004b30

08001ef8 <HAL_RCC_GetPCLK2Freq>:
 8001ef8:	b580      	push	{r7, lr}
 8001efa:	af00      	add	r7, sp, #0
 8001efc:	f7ff ffdc 	bl	8001eb8 <HAL_RCC_GetHCLKFreq>
 8001f00:	4602      	mov	r2, r0
 8001f02:	4b05      	ldr	r3, [pc, #20]	; (8001f18 <HAL_RCC_GetPCLK2Freq+0x20>)
 8001f04:	689b      	ldr	r3, [r3, #8]
 8001f06:	0b5b      	lsrs	r3, r3, #13
 8001f08:	f003 0307 	and.w	r3, r3, #7
 8001f0c:	4903      	ldr	r1, [pc, #12]	; (8001f1c <HAL_RCC_GetPCLK2Freq+0x24>)
 8001f0e:	5ccb      	ldrb	r3, [r1, r3]
 8001f10:	fa22 f303 	lsr.w	r3, r2, r3
 8001f14:	4618      	mov	r0, r3
 8001f16:	bd80      	pop	{r7, pc}
 8001f18:	40023800 	.word	0x40023800
 8001f1c:	08004b30 	.word	0x08004b30

08001f20 <HAL_RCC_GetClockConfig>:
 8001f20:	b480      	push	{r7}
 8001f22:	b083      	sub	sp, #12
 8001f24:	af00      	add	r7, sp, #0
 8001f26:	6078      	str	r0, [r7, #4]
 8001f28:	6039      	str	r1, [r7, #0]
 8001f2a:	687b      	ldr	r3, [r7, #4]
 8001f2c:	220f      	movs	r2, #15
 8001f2e:	601a      	str	r2, [r3, #0]
 8001f30:	4b12      	ldr	r3, [pc, #72]	; (8001f7c <HAL_RCC_GetClockConfig+0x5c>)
 8001f32:	689b      	ldr	r3, [r3, #8]
 8001f34:	f003 0203 	and.w	r2, r3, #3
 8001f38:	687b      	ldr	r3, [r7, #4]
 8001f3a:	605a      	str	r2, [r3, #4]
 8001f3c:	4b0f      	ldr	r3, [pc, #60]	; (8001f7c <HAL_RCC_GetClockConfig+0x5c>)
 8001f3e:	689b      	ldr	r3, [r3, #8]
 8001f40:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8001f44:	687b      	ldr	r3, [r7, #4]
 8001f46:	609a      	str	r2, [r3, #8]
 8001f48:	4b0c      	ldr	r3, [pc, #48]	; (8001f7c <HAL_RCC_GetClockConfig+0x5c>)
 8001f4a:	689b      	ldr	r3, [r3, #8]
 8001f4c:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 8001f50:	687b      	ldr	r3, [r7, #4]
 8001f52:	60da      	str	r2, [r3, #12]
 8001f54:	4b09      	ldr	r3, [pc, #36]	; (8001f7c <HAL_RCC_GetClockConfig+0x5c>)
 8001f56:	689b      	ldr	r3, [r3, #8]
 8001f58:	08db      	lsrs	r3, r3, #3
 8001f5a:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 8001f5e:	687b      	ldr	r3, [r7, #4]
 8001f60:	611a      	str	r2, [r3, #16]
 8001f62:	4b07      	ldr	r3, [pc, #28]	; (8001f80 <HAL_RCC_GetClockConfig+0x60>)
 8001f64:	681b      	ldr	r3, [r3, #0]
 8001f66:	f003 020f 	and.w	r2, r3, #15
 8001f6a:	683b      	ldr	r3, [r7, #0]
 8001f6c:	601a      	str	r2, [r3, #0]
 8001f6e:	bf00      	nop
 8001f70:	370c      	adds	r7, #12
 8001f72:	46bd      	mov	sp, r7
 8001f74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f78:	4770      	bx	lr
 8001f7a:	bf00      	nop
 8001f7c:	40023800 	.word	0x40023800
 8001f80:	40023c00 	.word	0x40023c00

08001f84 <HAL_RCC_GetSysClockFreq>:
 8001f84:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8001f88:	b0ae      	sub	sp, #184	; 0xb8
 8001f8a:	af00      	add	r7, sp, #0
 8001f8c:	2300      	movs	r3, #0
 8001f8e:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8001f92:	2300      	movs	r3, #0
 8001f94:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8001f98:	2300      	movs	r3, #0
 8001f9a:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8001f9e:	2300      	movs	r3, #0
 8001fa0:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8001fa4:	2300      	movs	r3, #0
 8001fa6:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8001faa:	4bcb      	ldr	r3, [pc, #812]	; (80022d8 <HAL_RCC_GetSysClockFreq+0x354>)
 8001fac:	689b      	ldr	r3, [r3, #8]
 8001fae:	f003 030c 	and.w	r3, r3, #12
 8001fb2:	2b0c      	cmp	r3, #12
 8001fb4:	f200 8206 	bhi.w	80023c4 <HAL_RCC_GetSysClockFreq+0x440>
 8001fb8:	a201      	add	r2, pc, #4	; (adr r2, 8001fc0 <HAL_RCC_GetSysClockFreq+0x3c>)
 8001fba:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001fbe:	bf00      	nop
 8001fc0:	08001ff5 	.word	0x08001ff5
 8001fc4:	080023c5 	.word	0x080023c5
 8001fc8:	080023c5 	.word	0x080023c5
 8001fcc:	080023c5 	.word	0x080023c5
 8001fd0:	08001ffd 	.word	0x08001ffd
 8001fd4:	080023c5 	.word	0x080023c5
 8001fd8:	080023c5 	.word	0x080023c5
 8001fdc:	080023c5 	.word	0x080023c5
 8001fe0:	08002005 	.word	0x08002005
 8001fe4:	080023c5 	.word	0x080023c5
 8001fe8:	080023c5 	.word	0x080023c5
 8001fec:	080023c5 	.word	0x080023c5
 8001ff0:	080021f5 	.word	0x080021f5
 8001ff4:	4bb9      	ldr	r3, [pc, #740]	; (80022dc <HAL_RCC_GetSysClockFreq+0x358>)
 8001ff6:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8001ffa:	e1e7      	b.n	80023cc <HAL_RCC_GetSysClockFreq+0x448>
 8001ffc:	4bb8      	ldr	r3, [pc, #736]	; (80022e0 <HAL_RCC_GetSysClockFreq+0x35c>)
 8001ffe:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8002002:	e1e3      	b.n	80023cc <HAL_RCC_GetSysClockFreq+0x448>
 8002004:	4bb4      	ldr	r3, [pc, #720]	; (80022d8 <HAL_RCC_GetSysClockFreq+0x354>)
 8002006:	685b      	ldr	r3, [r3, #4]
 8002008:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800200c:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8002010:	4bb1      	ldr	r3, [pc, #708]	; (80022d8 <HAL_RCC_GetSysClockFreq+0x354>)
 8002012:	685b      	ldr	r3, [r3, #4]
 8002014:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002018:	2b00      	cmp	r3, #0
 800201a:	d071      	beq.n	8002100 <HAL_RCC_GetSysClockFreq+0x17c>
 800201c:	4bae      	ldr	r3, [pc, #696]	; (80022d8 <HAL_RCC_GetSysClockFreq+0x354>)
 800201e:	685b      	ldr	r3, [r3, #4]
 8002020:	099b      	lsrs	r3, r3, #6
 8002022:	2200      	movs	r2, #0
 8002024:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8002028:	f8c7 209c 	str.w	r2, [r7, #156]	; 0x9c
 800202c:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8002030:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002034:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8002038:	2300      	movs	r3, #0
 800203a:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800203e:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 8002042:	4622      	mov	r2, r4
 8002044:	462b      	mov	r3, r5
 8002046:	f04f 0000 	mov.w	r0, #0
 800204a:	f04f 0100 	mov.w	r1, #0
 800204e:	0159      	lsls	r1, r3, #5
 8002050:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8002054:	0150      	lsls	r0, r2, #5
 8002056:	4602      	mov	r2, r0
 8002058:	460b      	mov	r3, r1
 800205a:	4621      	mov	r1, r4
 800205c:	1a51      	subs	r1, r2, r1
 800205e:	6439      	str	r1, [r7, #64]	; 0x40
 8002060:	4629      	mov	r1, r5
 8002062:	eb63 0301 	sbc.w	r3, r3, r1
 8002066:	647b      	str	r3, [r7, #68]	; 0x44
 8002068:	f04f 0200 	mov.w	r2, #0
 800206c:	f04f 0300 	mov.w	r3, #0
 8002070:	e9d7 8910 	ldrd	r8, r9, [r7, #64]	; 0x40
 8002074:	4649      	mov	r1, r9
 8002076:	018b      	lsls	r3, r1, #6
 8002078:	4641      	mov	r1, r8
 800207a:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800207e:	4641      	mov	r1, r8
 8002080:	018a      	lsls	r2, r1, #6
 8002082:	4641      	mov	r1, r8
 8002084:	1a51      	subs	r1, r2, r1
 8002086:	63b9      	str	r1, [r7, #56]	; 0x38
 8002088:	4649      	mov	r1, r9
 800208a:	eb63 0301 	sbc.w	r3, r3, r1
 800208e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8002090:	f04f 0200 	mov.w	r2, #0
 8002094:	f04f 0300 	mov.w	r3, #0
 8002098:	e9d7 890e 	ldrd	r8, r9, [r7, #56]	; 0x38
 800209c:	4649      	mov	r1, r9
 800209e:	00cb      	lsls	r3, r1, #3
 80020a0:	4641      	mov	r1, r8
 80020a2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80020a6:	4641      	mov	r1, r8
 80020a8:	00ca      	lsls	r2, r1, #3
 80020aa:	4610      	mov	r0, r2
 80020ac:	4619      	mov	r1, r3
 80020ae:	4603      	mov	r3, r0
 80020b0:	4622      	mov	r2, r4
 80020b2:	189b      	adds	r3, r3, r2
 80020b4:	633b      	str	r3, [r7, #48]	; 0x30
 80020b6:	462b      	mov	r3, r5
 80020b8:	460a      	mov	r2, r1
 80020ba:	eb42 0303 	adc.w	r3, r2, r3
 80020be:	637b      	str	r3, [r7, #52]	; 0x34
 80020c0:	f04f 0200 	mov.w	r2, #0
 80020c4:	f04f 0300 	mov.w	r3, #0
 80020c8:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 80020cc:	4629      	mov	r1, r5
 80020ce:	024b      	lsls	r3, r1, #9
 80020d0:	4621      	mov	r1, r4
 80020d2:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 80020d6:	4621      	mov	r1, r4
 80020d8:	024a      	lsls	r2, r1, #9
 80020da:	4610      	mov	r0, r2
 80020dc:	4619      	mov	r1, r3
 80020de:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80020e2:	2200      	movs	r2, #0
 80020e4:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 80020e8:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80020ec:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	; 0x88
 80020f0:	f7fe f8e6 	bl	80002c0 <__aeabi_uldivmod>
 80020f4:	4602      	mov	r2, r0
 80020f6:	460b      	mov	r3, r1
 80020f8:	4613      	mov	r3, r2
 80020fa:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 80020fe:	e067      	b.n	80021d0 <HAL_RCC_GetSysClockFreq+0x24c>
 8002100:	4b75      	ldr	r3, [pc, #468]	; (80022d8 <HAL_RCC_GetSysClockFreq+0x354>)
 8002102:	685b      	ldr	r3, [r3, #4]
 8002104:	099b      	lsrs	r3, r3, #6
 8002106:	2200      	movs	r2, #0
 8002108:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800210c:	f8c7 2084 	str.w	r2, [r7, #132]	; 0x84
 8002110:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8002114:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002118:	67bb      	str	r3, [r7, #120]	; 0x78
 800211a:	2300      	movs	r3, #0
 800211c:	67fb      	str	r3, [r7, #124]	; 0x7c
 800211e:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	; 0x78
 8002122:	4622      	mov	r2, r4
 8002124:	462b      	mov	r3, r5
 8002126:	f04f 0000 	mov.w	r0, #0
 800212a:	f04f 0100 	mov.w	r1, #0
 800212e:	0159      	lsls	r1, r3, #5
 8002130:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8002134:	0150      	lsls	r0, r2, #5
 8002136:	4602      	mov	r2, r0
 8002138:	460b      	mov	r3, r1
 800213a:	4621      	mov	r1, r4
 800213c:	1a51      	subs	r1, r2, r1
 800213e:	62b9      	str	r1, [r7, #40]	; 0x28
 8002140:	4629      	mov	r1, r5
 8002142:	eb63 0301 	sbc.w	r3, r3, r1
 8002146:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002148:	f04f 0200 	mov.w	r2, #0
 800214c:	f04f 0300 	mov.w	r3, #0
 8002150:	e9d7 890a 	ldrd	r8, r9, [r7, #40]	; 0x28
 8002154:	4649      	mov	r1, r9
 8002156:	018b      	lsls	r3, r1, #6
 8002158:	4641      	mov	r1, r8
 800215a:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800215e:	4641      	mov	r1, r8
 8002160:	018a      	lsls	r2, r1, #6
 8002162:	4641      	mov	r1, r8
 8002164:	ebb2 0a01 	subs.w	sl, r2, r1
 8002168:	4649      	mov	r1, r9
 800216a:	eb63 0b01 	sbc.w	fp, r3, r1
 800216e:	f04f 0200 	mov.w	r2, #0
 8002172:	f04f 0300 	mov.w	r3, #0
 8002176:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 800217a:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 800217e:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8002182:	4692      	mov	sl, r2
 8002184:	469b      	mov	fp, r3
 8002186:	4623      	mov	r3, r4
 8002188:	eb1a 0303 	adds.w	r3, sl, r3
 800218c:	623b      	str	r3, [r7, #32]
 800218e:	462b      	mov	r3, r5
 8002190:	eb4b 0303 	adc.w	r3, fp, r3
 8002194:	627b      	str	r3, [r7, #36]	; 0x24
 8002196:	f04f 0200 	mov.w	r2, #0
 800219a:	f04f 0300 	mov.w	r3, #0
 800219e:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 80021a2:	4629      	mov	r1, r5
 80021a4:	028b      	lsls	r3, r1, #10
 80021a6:	4621      	mov	r1, r4
 80021a8:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80021ac:	4621      	mov	r1, r4
 80021ae:	028a      	lsls	r2, r1, #10
 80021b0:	4610      	mov	r0, r2
 80021b2:	4619      	mov	r1, r3
 80021b4:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80021b8:	2200      	movs	r2, #0
 80021ba:	673b      	str	r3, [r7, #112]	; 0x70
 80021bc:	677a      	str	r2, [r7, #116]	; 0x74
 80021be:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 80021c2:	f7fe f87d 	bl	80002c0 <__aeabi_uldivmod>
 80021c6:	4602      	mov	r2, r0
 80021c8:	460b      	mov	r3, r1
 80021ca:	4613      	mov	r3, r2
 80021cc:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 80021d0:	4b41      	ldr	r3, [pc, #260]	; (80022d8 <HAL_RCC_GetSysClockFreq+0x354>)
 80021d2:	685b      	ldr	r3, [r3, #4]
 80021d4:	0c1b      	lsrs	r3, r3, #16
 80021d6:	f003 0303 	and.w	r3, r3, #3
 80021da:	3301      	adds	r3, #1
 80021dc:	005b      	lsls	r3, r3, #1
 80021de:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 80021e2:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 80021e6:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 80021ea:	fbb2 f3f3 	udiv	r3, r2, r3
 80021ee:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80021f2:	e0eb      	b.n	80023cc <HAL_RCC_GetSysClockFreq+0x448>
 80021f4:	4b38      	ldr	r3, [pc, #224]	; (80022d8 <HAL_RCC_GetSysClockFreq+0x354>)
 80021f6:	685b      	ldr	r3, [r3, #4]
 80021f8:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80021fc:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8002200:	4b35      	ldr	r3, [pc, #212]	; (80022d8 <HAL_RCC_GetSysClockFreq+0x354>)
 8002202:	685b      	ldr	r3, [r3, #4]
 8002204:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002208:	2b00      	cmp	r3, #0
 800220a:	d06b      	beq.n	80022e4 <HAL_RCC_GetSysClockFreq+0x360>
 800220c:	4b32      	ldr	r3, [pc, #200]	; (80022d8 <HAL_RCC_GetSysClockFreq+0x354>)
 800220e:	685b      	ldr	r3, [r3, #4]
 8002210:	099b      	lsrs	r3, r3, #6
 8002212:	2200      	movs	r2, #0
 8002214:	66bb      	str	r3, [r7, #104]	; 0x68
 8002216:	66fa      	str	r2, [r7, #108]	; 0x6c
 8002218:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800221a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800221e:	663b      	str	r3, [r7, #96]	; 0x60
 8002220:	2300      	movs	r3, #0
 8002222:	667b      	str	r3, [r7, #100]	; 0x64
 8002224:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	; 0x60
 8002228:	4622      	mov	r2, r4
 800222a:	462b      	mov	r3, r5
 800222c:	f04f 0000 	mov.w	r0, #0
 8002230:	f04f 0100 	mov.w	r1, #0
 8002234:	0159      	lsls	r1, r3, #5
 8002236:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800223a:	0150      	lsls	r0, r2, #5
 800223c:	4602      	mov	r2, r0
 800223e:	460b      	mov	r3, r1
 8002240:	4621      	mov	r1, r4
 8002242:	1a51      	subs	r1, r2, r1
 8002244:	61b9      	str	r1, [r7, #24]
 8002246:	4629      	mov	r1, r5
 8002248:	eb63 0301 	sbc.w	r3, r3, r1
 800224c:	61fb      	str	r3, [r7, #28]
 800224e:	f04f 0200 	mov.w	r2, #0
 8002252:	f04f 0300 	mov.w	r3, #0
 8002256:	e9d7 ab06 	ldrd	sl, fp, [r7, #24]
 800225a:	4659      	mov	r1, fp
 800225c:	018b      	lsls	r3, r1, #6
 800225e:	4651      	mov	r1, sl
 8002260:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8002264:	4651      	mov	r1, sl
 8002266:	018a      	lsls	r2, r1, #6
 8002268:	4651      	mov	r1, sl
 800226a:	ebb2 0801 	subs.w	r8, r2, r1
 800226e:	4659      	mov	r1, fp
 8002270:	eb63 0901 	sbc.w	r9, r3, r1
 8002274:	f04f 0200 	mov.w	r2, #0
 8002278:	f04f 0300 	mov.w	r3, #0
 800227c:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8002280:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8002284:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8002288:	4690      	mov	r8, r2
 800228a:	4699      	mov	r9, r3
 800228c:	4623      	mov	r3, r4
 800228e:	eb18 0303 	adds.w	r3, r8, r3
 8002292:	613b      	str	r3, [r7, #16]
 8002294:	462b      	mov	r3, r5
 8002296:	eb49 0303 	adc.w	r3, r9, r3
 800229a:	617b      	str	r3, [r7, #20]
 800229c:	f04f 0200 	mov.w	r2, #0
 80022a0:	f04f 0300 	mov.w	r3, #0
 80022a4:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 80022a8:	4629      	mov	r1, r5
 80022aa:	024b      	lsls	r3, r1, #9
 80022ac:	4621      	mov	r1, r4
 80022ae:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 80022b2:	4621      	mov	r1, r4
 80022b4:	024a      	lsls	r2, r1, #9
 80022b6:	4610      	mov	r0, r2
 80022b8:	4619      	mov	r1, r3
 80022ba:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80022be:	2200      	movs	r2, #0
 80022c0:	65bb      	str	r3, [r7, #88]	; 0x58
 80022c2:	65fa      	str	r2, [r7, #92]	; 0x5c
 80022c4:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 80022c8:	f7fd fffa 	bl	80002c0 <__aeabi_uldivmod>
 80022cc:	4602      	mov	r2, r0
 80022ce:	460b      	mov	r3, r1
 80022d0:	4613      	mov	r3, r2
 80022d2:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 80022d6:	e065      	b.n	80023a4 <HAL_RCC_GetSysClockFreq+0x420>
 80022d8:	40023800 	.word	0x40023800
 80022dc:	00f42400 	.word	0x00f42400
 80022e0:	007a1200 	.word	0x007a1200
 80022e4:	4b3d      	ldr	r3, [pc, #244]	; (80023dc <HAL_RCC_GetSysClockFreq+0x458>)
 80022e6:	685b      	ldr	r3, [r3, #4]
 80022e8:	099b      	lsrs	r3, r3, #6
 80022ea:	2200      	movs	r2, #0
 80022ec:	4618      	mov	r0, r3
 80022ee:	4611      	mov	r1, r2
 80022f0:	f3c0 0308 	ubfx	r3, r0, #0, #9
 80022f4:	653b      	str	r3, [r7, #80]	; 0x50
 80022f6:	2300      	movs	r3, #0
 80022f8:	657b      	str	r3, [r7, #84]	; 0x54
 80022fa:	e9d7 8914 	ldrd	r8, r9, [r7, #80]	; 0x50
 80022fe:	4642      	mov	r2, r8
 8002300:	464b      	mov	r3, r9
 8002302:	f04f 0000 	mov.w	r0, #0
 8002306:	f04f 0100 	mov.w	r1, #0
 800230a:	0159      	lsls	r1, r3, #5
 800230c:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8002310:	0150      	lsls	r0, r2, #5
 8002312:	4602      	mov	r2, r0
 8002314:	460b      	mov	r3, r1
 8002316:	4641      	mov	r1, r8
 8002318:	1a51      	subs	r1, r2, r1
 800231a:	60b9      	str	r1, [r7, #8]
 800231c:	4649      	mov	r1, r9
 800231e:	eb63 0301 	sbc.w	r3, r3, r1
 8002322:	60fb      	str	r3, [r7, #12]
 8002324:	f04f 0200 	mov.w	r2, #0
 8002328:	f04f 0300 	mov.w	r3, #0
 800232c:	e9d7 ab02 	ldrd	sl, fp, [r7, #8]
 8002330:	4659      	mov	r1, fp
 8002332:	018b      	lsls	r3, r1, #6
 8002334:	4651      	mov	r1, sl
 8002336:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800233a:	4651      	mov	r1, sl
 800233c:	018a      	lsls	r2, r1, #6
 800233e:	4651      	mov	r1, sl
 8002340:	1a54      	subs	r4, r2, r1
 8002342:	4659      	mov	r1, fp
 8002344:	eb63 0501 	sbc.w	r5, r3, r1
 8002348:	f04f 0200 	mov.w	r2, #0
 800234c:	f04f 0300 	mov.w	r3, #0
 8002350:	00eb      	lsls	r3, r5, #3
 8002352:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8002356:	00e2      	lsls	r2, r4, #3
 8002358:	4614      	mov	r4, r2
 800235a:	461d      	mov	r5, r3
 800235c:	4643      	mov	r3, r8
 800235e:	18e3      	adds	r3, r4, r3
 8002360:	603b      	str	r3, [r7, #0]
 8002362:	464b      	mov	r3, r9
 8002364:	eb45 0303 	adc.w	r3, r5, r3
 8002368:	607b      	str	r3, [r7, #4]
 800236a:	f04f 0200 	mov.w	r2, #0
 800236e:	f04f 0300 	mov.w	r3, #0
 8002372:	e9d7 4500 	ldrd	r4, r5, [r7]
 8002376:	4629      	mov	r1, r5
 8002378:	028b      	lsls	r3, r1, #10
 800237a:	4621      	mov	r1, r4
 800237c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8002380:	4621      	mov	r1, r4
 8002382:	028a      	lsls	r2, r1, #10
 8002384:	4610      	mov	r0, r2
 8002386:	4619      	mov	r1, r3
 8002388:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800238c:	2200      	movs	r2, #0
 800238e:	64bb      	str	r3, [r7, #72]	; 0x48
 8002390:	64fa      	str	r2, [r7, #76]	; 0x4c
 8002392:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8002396:	f7fd ff93 	bl	80002c0 <__aeabi_uldivmod>
 800239a:	4602      	mov	r2, r0
 800239c:	460b      	mov	r3, r1
 800239e:	4613      	mov	r3, r2
 80023a0:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 80023a4:	4b0d      	ldr	r3, [pc, #52]	; (80023dc <HAL_RCC_GetSysClockFreq+0x458>)
 80023a6:	685b      	ldr	r3, [r3, #4]
 80023a8:	0f1b      	lsrs	r3, r3, #28
 80023aa:	f003 0307 	and.w	r3, r3, #7
 80023ae:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 80023b2:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 80023b6:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 80023ba:	fbb2 f3f3 	udiv	r3, r2, r3
 80023be:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80023c2:	e003      	b.n	80023cc <HAL_RCC_GetSysClockFreq+0x448>
 80023c4:	4b06      	ldr	r3, [pc, #24]	; (80023e0 <HAL_RCC_GetSysClockFreq+0x45c>)
 80023c6:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80023ca:	bf00      	nop
 80023cc:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 80023d0:	4618      	mov	r0, r3
 80023d2:	37b8      	adds	r7, #184	; 0xb8
 80023d4:	46bd      	mov	sp, r7
 80023d6:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80023da:	bf00      	nop
 80023dc:	40023800 	.word	0x40023800
 80023e0:	00f42400 	.word	0x00f42400

080023e4 <HAL_RCC_OscConfig>:
 80023e4:	b580      	push	{r7, lr}
 80023e6:	b086      	sub	sp, #24
 80023e8:	af00      	add	r7, sp, #0
 80023ea:	6078      	str	r0, [r7, #4]
 80023ec:	687b      	ldr	r3, [r7, #4]
 80023ee:	2b00      	cmp	r3, #0
 80023f0:	d101      	bne.n	80023f6 <HAL_RCC_OscConfig+0x12>
 80023f2:	2301      	movs	r3, #1
 80023f4:	e28d      	b.n	8002912 <HAL_RCC_OscConfig+0x52e>
 80023f6:	687b      	ldr	r3, [r7, #4]
 80023f8:	681b      	ldr	r3, [r3, #0]
 80023fa:	f003 0301 	and.w	r3, r3, #1
 80023fe:	2b00      	cmp	r3, #0
 8002400:	f000 8083 	beq.w	800250a <HAL_RCC_OscConfig+0x126>
 8002404:	4b94      	ldr	r3, [pc, #592]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 8002406:	689b      	ldr	r3, [r3, #8]
 8002408:	f003 030c 	and.w	r3, r3, #12
 800240c:	2b04      	cmp	r3, #4
 800240e:	d019      	beq.n	8002444 <HAL_RCC_OscConfig+0x60>
 8002410:	4b91      	ldr	r3, [pc, #580]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 8002412:	689b      	ldr	r3, [r3, #8]
 8002414:	f003 030c 	and.w	r3, r3, #12
 8002418:	2b08      	cmp	r3, #8
 800241a:	d106      	bne.n	800242a <HAL_RCC_OscConfig+0x46>
 800241c:	4b8e      	ldr	r3, [pc, #568]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 800241e:	685b      	ldr	r3, [r3, #4]
 8002420:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002424:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8002428:	d00c      	beq.n	8002444 <HAL_RCC_OscConfig+0x60>
 800242a:	4b8b      	ldr	r3, [pc, #556]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 800242c:	689b      	ldr	r3, [r3, #8]
 800242e:	f003 030c 	and.w	r3, r3, #12
 8002432:	2b0c      	cmp	r3, #12
 8002434:	d112      	bne.n	800245c <HAL_RCC_OscConfig+0x78>
 8002436:	4b88      	ldr	r3, [pc, #544]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 8002438:	685b      	ldr	r3, [r3, #4]
 800243a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800243e:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8002442:	d10b      	bne.n	800245c <HAL_RCC_OscConfig+0x78>
 8002444:	4b84      	ldr	r3, [pc, #528]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 8002446:	681b      	ldr	r3, [r3, #0]
 8002448:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800244c:	2b00      	cmp	r3, #0
 800244e:	d05b      	beq.n	8002508 <HAL_RCC_OscConfig+0x124>
 8002450:	687b      	ldr	r3, [r7, #4]
 8002452:	685b      	ldr	r3, [r3, #4]
 8002454:	2b00      	cmp	r3, #0
 8002456:	d157      	bne.n	8002508 <HAL_RCC_OscConfig+0x124>
 8002458:	2301      	movs	r3, #1
 800245a:	e25a      	b.n	8002912 <HAL_RCC_OscConfig+0x52e>
 800245c:	687b      	ldr	r3, [r7, #4]
 800245e:	685b      	ldr	r3, [r3, #4]
 8002460:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002464:	d106      	bne.n	8002474 <HAL_RCC_OscConfig+0x90>
 8002466:	4b7c      	ldr	r3, [pc, #496]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 8002468:	681b      	ldr	r3, [r3, #0]
 800246a:	4a7b      	ldr	r2, [pc, #492]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 800246c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002470:	6013      	str	r3, [r2, #0]
 8002472:	e01d      	b.n	80024b0 <HAL_RCC_OscConfig+0xcc>
 8002474:	687b      	ldr	r3, [r7, #4]
 8002476:	685b      	ldr	r3, [r3, #4]
 8002478:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800247c:	d10c      	bne.n	8002498 <HAL_RCC_OscConfig+0xb4>
 800247e:	4b76      	ldr	r3, [pc, #472]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 8002480:	681b      	ldr	r3, [r3, #0]
 8002482:	4a75      	ldr	r2, [pc, #468]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 8002484:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002488:	6013      	str	r3, [r2, #0]
 800248a:	4b73      	ldr	r3, [pc, #460]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 800248c:	681b      	ldr	r3, [r3, #0]
 800248e:	4a72      	ldr	r2, [pc, #456]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 8002490:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002494:	6013      	str	r3, [r2, #0]
 8002496:	e00b      	b.n	80024b0 <HAL_RCC_OscConfig+0xcc>
 8002498:	4b6f      	ldr	r3, [pc, #444]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 800249a:	681b      	ldr	r3, [r3, #0]
 800249c:	4a6e      	ldr	r2, [pc, #440]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 800249e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80024a2:	6013      	str	r3, [r2, #0]
 80024a4:	4b6c      	ldr	r3, [pc, #432]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 80024a6:	681b      	ldr	r3, [r3, #0]
 80024a8:	4a6b      	ldr	r2, [pc, #428]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 80024aa:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80024ae:	6013      	str	r3, [r2, #0]
 80024b0:	687b      	ldr	r3, [r7, #4]
 80024b2:	685b      	ldr	r3, [r3, #4]
 80024b4:	2b00      	cmp	r3, #0
 80024b6:	d013      	beq.n	80024e0 <HAL_RCC_OscConfig+0xfc>
 80024b8:	f7ff f940 	bl	800173c <HAL_GetTick>
 80024bc:	6138      	str	r0, [r7, #16]
 80024be:	e008      	b.n	80024d2 <HAL_RCC_OscConfig+0xee>
 80024c0:	f7ff f93c 	bl	800173c <HAL_GetTick>
 80024c4:	4602      	mov	r2, r0
 80024c6:	693b      	ldr	r3, [r7, #16]
 80024c8:	1ad3      	subs	r3, r2, r3
 80024ca:	2b64      	cmp	r3, #100	; 0x64
 80024cc:	d901      	bls.n	80024d2 <HAL_RCC_OscConfig+0xee>
 80024ce:	2303      	movs	r3, #3
 80024d0:	e21f      	b.n	8002912 <HAL_RCC_OscConfig+0x52e>
 80024d2:	4b61      	ldr	r3, [pc, #388]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 80024d4:	681b      	ldr	r3, [r3, #0]
 80024d6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80024da:	2b00      	cmp	r3, #0
 80024dc:	d0f0      	beq.n	80024c0 <HAL_RCC_OscConfig+0xdc>
 80024de:	e014      	b.n	800250a <HAL_RCC_OscConfig+0x126>
 80024e0:	f7ff f92c 	bl	800173c <HAL_GetTick>
 80024e4:	6138      	str	r0, [r7, #16]
 80024e6:	e008      	b.n	80024fa <HAL_RCC_OscConfig+0x116>
 80024e8:	f7ff f928 	bl	800173c <HAL_GetTick>
 80024ec:	4602      	mov	r2, r0
 80024ee:	693b      	ldr	r3, [r7, #16]
 80024f0:	1ad3      	subs	r3, r2, r3
 80024f2:	2b64      	cmp	r3, #100	; 0x64
 80024f4:	d901      	bls.n	80024fa <HAL_RCC_OscConfig+0x116>
 80024f6:	2303      	movs	r3, #3
 80024f8:	e20b      	b.n	8002912 <HAL_RCC_OscConfig+0x52e>
 80024fa:	4b57      	ldr	r3, [pc, #348]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 80024fc:	681b      	ldr	r3, [r3, #0]
 80024fe:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002502:	2b00      	cmp	r3, #0
 8002504:	d1f0      	bne.n	80024e8 <HAL_RCC_OscConfig+0x104>
 8002506:	e000      	b.n	800250a <HAL_RCC_OscConfig+0x126>
 8002508:	bf00      	nop
 800250a:	687b      	ldr	r3, [r7, #4]
 800250c:	681b      	ldr	r3, [r3, #0]
 800250e:	f003 0302 	and.w	r3, r3, #2
 8002512:	2b00      	cmp	r3, #0
 8002514:	d06f      	beq.n	80025f6 <HAL_RCC_OscConfig+0x212>
 8002516:	4b50      	ldr	r3, [pc, #320]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 8002518:	689b      	ldr	r3, [r3, #8]
 800251a:	f003 030c 	and.w	r3, r3, #12
 800251e:	2b00      	cmp	r3, #0
 8002520:	d017      	beq.n	8002552 <HAL_RCC_OscConfig+0x16e>
 8002522:	4b4d      	ldr	r3, [pc, #308]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 8002524:	689b      	ldr	r3, [r3, #8]
 8002526:	f003 030c 	and.w	r3, r3, #12
 800252a:	2b08      	cmp	r3, #8
 800252c:	d105      	bne.n	800253a <HAL_RCC_OscConfig+0x156>
 800252e:	4b4a      	ldr	r3, [pc, #296]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 8002530:	685b      	ldr	r3, [r3, #4]
 8002532:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002536:	2b00      	cmp	r3, #0
 8002538:	d00b      	beq.n	8002552 <HAL_RCC_OscConfig+0x16e>
 800253a:	4b47      	ldr	r3, [pc, #284]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 800253c:	689b      	ldr	r3, [r3, #8]
 800253e:	f003 030c 	and.w	r3, r3, #12
 8002542:	2b0c      	cmp	r3, #12
 8002544:	d11c      	bne.n	8002580 <HAL_RCC_OscConfig+0x19c>
 8002546:	4b44      	ldr	r3, [pc, #272]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 8002548:	685b      	ldr	r3, [r3, #4]
 800254a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800254e:	2b00      	cmp	r3, #0
 8002550:	d116      	bne.n	8002580 <HAL_RCC_OscConfig+0x19c>
 8002552:	4b41      	ldr	r3, [pc, #260]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 8002554:	681b      	ldr	r3, [r3, #0]
 8002556:	f003 0302 	and.w	r3, r3, #2
 800255a:	2b00      	cmp	r3, #0
 800255c:	d005      	beq.n	800256a <HAL_RCC_OscConfig+0x186>
 800255e:	687b      	ldr	r3, [r7, #4]
 8002560:	68db      	ldr	r3, [r3, #12]
 8002562:	2b01      	cmp	r3, #1
 8002564:	d001      	beq.n	800256a <HAL_RCC_OscConfig+0x186>
 8002566:	2301      	movs	r3, #1
 8002568:	e1d3      	b.n	8002912 <HAL_RCC_OscConfig+0x52e>
 800256a:	4b3b      	ldr	r3, [pc, #236]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 800256c:	681b      	ldr	r3, [r3, #0]
 800256e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002572:	687b      	ldr	r3, [r7, #4]
 8002574:	691b      	ldr	r3, [r3, #16]
 8002576:	00db      	lsls	r3, r3, #3
 8002578:	4937      	ldr	r1, [pc, #220]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 800257a:	4313      	orrs	r3, r2
 800257c:	600b      	str	r3, [r1, #0]
 800257e:	e03a      	b.n	80025f6 <HAL_RCC_OscConfig+0x212>
 8002580:	687b      	ldr	r3, [r7, #4]
 8002582:	68db      	ldr	r3, [r3, #12]
 8002584:	2b00      	cmp	r3, #0
 8002586:	d020      	beq.n	80025ca <HAL_RCC_OscConfig+0x1e6>
 8002588:	4b34      	ldr	r3, [pc, #208]	; (800265c <HAL_RCC_OscConfig+0x278>)
 800258a:	2201      	movs	r2, #1
 800258c:	601a      	str	r2, [r3, #0]
 800258e:	f7ff f8d5 	bl	800173c <HAL_GetTick>
 8002592:	6138      	str	r0, [r7, #16]
 8002594:	e008      	b.n	80025a8 <HAL_RCC_OscConfig+0x1c4>
 8002596:	f7ff f8d1 	bl	800173c <HAL_GetTick>
 800259a:	4602      	mov	r2, r0
 800259c:	693b      	ldr	r3, [r7, #16]
 800259e:	1ad3      	subs	r3, r2, r3
 80025a0:	2b02      	cmp	r3, #2
 80025a2:	d901      	bls.n	80025a8 <HAL_RCC_OscConfig+0x1c4>
 80025a4:	2303      	movs	r3, #3
 80025a6:	e1b4      	b.n	8002912 <HAL_RCC_OscConfig+0x52e>
 80025a8:	4b2b      	ldr	r3, [pc, #172]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 80025aa:	681b      	ldr	r3, [r3, #0]
 80025ac:	f003 0302 	and.w	r3, r3, #2
 80025b0:	2b00      	cmp	r3, #0
 80025b2:	d0f0      	beq.n	8002596 <HAL_RCC_OscConfig+0x1b2>
 80025b4:	4b28      	ldr	r3, [pc, #160]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 80025b6:	681b      	ldr	r3, [r3, #0]
 80025b8:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80025bc:	687b      	ldr	r3, [r7, #4]
 80025be:	691b      	ldr	r3, [r3, #16]
 80025c0:	00db      	lsls	r3, r3, #3
 80025c2:	4925      	ldr	r1, [pc, #148]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 80025c4:	4313      	orrs	r3, r2
 80025c6:	600b      	str	r3, [r1, #0]
 80025c8:	e015      	b.n	80025f6 <HAL_RCC_OscConfig+0x212>
 80025ca:	4b24      	ldr	r3, [pc, #144]	; (800265c <HAL_RCC_OscConfig+0x278>)
 80025cc:	2200      	movs	r2, #0
 80025ce:	601a      	str	r2, [r3, #0]
 80025d0:	f7ff f8b4 	bl	800173c <HAL_GetTick>
 80025d4:	6138      	str	r0, [r7, #16]
 80025d6:	e008      	b.n	80025ea <HAL_RCC_OscConfig+0x206>
 80025d8:	f7ff f8b0 	bl	800173c <HAL_GetTick>
 80025dc:	4602      	mov	r2, r0
 80025de:	693b      	ldr	r3, [r7, #16]
 80025e0:	1ad3      	subs	r3, r2, r3
 80025e2:	2b02      	cmp	r3, #2
 80025e4:	d901      	bls.n	80025ea <HAL_RCC_OscConfig+0x206>
 80025e6:	2303      	movs	r3, #3
 80025e8:	e193      	b.n	8002912 <HAL_RCC_OscConfig+0x52e>
 80025ea:	4b1b      	ldr	r3, [pc, #108]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 80025ec:	681b      	ldr	r3, [r3, #0]
 80025ee:	f003 0302 	and.w	r3, r3, #2
 80025f2:	2b00      	cmp	r3, #0
 80025f4:	d1f0      	bne.n	80025d8 <HAL_RCC_OscConfig+0x1f4>
 80025f6:	687b      	ldr	r3, [r7, #4]
 80025f8:	681b      	ldr	r3, [r3, #0]
 80025fa:	f003 0308 	and.w	r3, r3, #8
 80025fe:	2b00      	cmp	r3, #0
 8002600:	d036      	beq.n	8002670 <HAL_RCC_OscConfig+0x28c>
 8002602:	687b      	ldr	r3, [r7, #4]
 8002604:	695b      	ldr	r3, [r3, #20]
 8002606:	2b00      	cmp	r3, #0
 8002608:	d016      	beq.n	8002638 <HAL_RCC_OscConfig+0x254>
 800260a:	4b15      	ldr	r3, [pc, #84]	; (8002660 <HAL_RCC_OscConfig+0x27c>)
 800260c:	2201      	movs	r2, #1
 800260e:	601a      	str	r2, [r3, #0]
 8002610:	f7ff f894 	bl	800173c <HAL_GetTick>
 8002614:	6138      	str	r0, [r7, #16]
 8002616:	e008      	b.n	800262a <HAL_RCC_OscConfig+0x246>
 8002618:	f7ff f890 	bl	800173c <HAL_GetTick>
 800261c:	4602      	mov	r2, r0
 800261e:	693b      	ldr	r3, [r7, #16]
 8002620:	1ad3      	subs	r3, r2, r3
 8002622:	2b02      	cmp	r3, #2
 8002624:	d901      	bls.n	800262a <HAL_RCC_OscConfig+0x246>
 8002626:	2303      	movs	r3, #3
 8002628:	e173      	b.n	8002912 <HAL_RCC_OscConfig+0x52e>
 800262a:	4b0b      	ldr	r3, [pc, #44]	; (8002658 <HAL_RCC_OscConfig+0x274>)
 800262c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800262e:	f003 0302 	and.w	r3, r3, #2
 8002632:	2b00      	cmp	r3, #0
 8002634:	d0f0      	beq.n	8002618 <HAL_RCC_OscConfig+0x234>
 8002636:	e01b      	b.n	8002670 <HAL_RCC_OscConfig+0x28c>
 8002638:	4b09      	ldr	r3, [pc, #36]	; (8002660 <HAL_RCC_OscConfig+0x27c>)
 800263a:	2200      	movs	r2, #0
 800263c:	601a      	str	r2, [r3, #0]
 800263e:	f7ff f87d 	bl	800173c <HAL_GetTick>
 8002642:	6138      	str	r0, [r7, #16]
 8002644:	e00e      	b.n	8002664 <HAL_RCC_OscConfig+0x280>
 8002646:	f7ff f879 	bl	800173c <HAL_GetTick>
 800264a:	4602      	mov	r2, r0
 800264c:	693b      	ldr	r3, [r7, #16]
 800264e:	1ad3      	subs	r3, r2, r3
 8002650:	2b02      	cmp	r3, #2
 8002652:	d907      	bls.n	8002664 <HAL_RCC_OscConfig+0x280>
 8002654:	2303      	movs	r3, #3
 8002656:	e15c      	b.n	8002912 <HAL_RCC_OscConfig+0x52e>
 8002658:	40023800 	.word	0x40023800
 800265c:	42470000 	.word	0x42470000
 8002660:	42470e80 	.word	0x42470e80
 8002664:	4b8a      	ldr	r3, [pc, #552]	; (8002890 <HAL_RCC_OscConfig+0x4ac>)
 8002666:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8002668:	f003 0302 	and.w	r3, r3, #2
 800266c:	2b00      	cmp	r3, #0
 800266e:	d1ea      	bne.n	8002646 <HAL_RCC_OscConfig+0x262>
 8002670:	687b      	ldr	r3, [r7, #4]
 8002672:	681b      	ldr	r3, [r3, #0]
 8002674:	f003 0304 	and.w	r3, r3, #4
 8002678:	2b00      	cmp	r3, #0
 800267a:	f000 8097 	beq.w	80027ac <HAL_RCC_OscConfig+0x3c8>
 800267e:	2300      	movs	r3, #0
 8002680:	75fb      	strb	r3, [r7, #23]
 8002682:	4b83      	ldr	r3, [pc, #524]	; (8002890 <HAL_RCC_OscConfig+0x4ac>)
 8002684:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002686:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800268a:	2b00      	cmp	r3, #0
 800268c:	d10f      	bne.n	80026ae <HAL_RCC_OscConfig+0x2ca>
 800268e:	2300      	movs	r3, #0
 8002690:	60bb      	str	r3, [r7, #8]
 8002692:	4b7f      	ldr	r3, [pc, #508]	; (8002890 <HAL_RCC_OscConfig+0x4ac>)
 8002694:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002696:	4a7e      	ldr	r2, [pc, #504]	; (8002890 <HAL_RCC_OscConfig+0x4ac>)
 8002698:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800269c:	6413      	str	r3, [r2, #64]	; 0x40
 800269e:	4b7c      	ldr	r3, [pc, #496]	; (8002890 <HAL_RCC_OscConfig+0x4ac>)
 80026a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80026a2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80026a6:	60bb      	str	r3, [r7, #8]
 80026a8:	68bb      	ldr	r3, [r7, #8]
 80026aa:	2301      	movs	r3, #1
 80026ac:	75fb      	strb	r3, [r7, #23]
 80026ae:	4b79      	ldr	r3, [pc, #484]	; (8002894 <HAL_RCC_OscConfig+0x4b0>)
 80026b0:	681b      	ldr	r3, [r3, #0]
 80026b2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80026b6:	2b00      	cmp	r3, #0
 80026b8:	d118      	bne.n	80026ec <HAL_RCC_OscConfig+0x308>
 80026ba:	4b76      	ldr	r3, [pc, #472]	; (8002894 <HAL_RCC_OscConfig+0x4b0>)
 80026bc:	681b      	ldr	r3, [r3, #0]
 80026be:	4a75      	ldr	r2, [pc, #468]	; (8002894 <HAL_RCC_OscConfig+0x4b0>)
 80026c0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80026c4:	6013      	str	r3, [r2, #0]
 80026c6:	f7ff f839 	bl	800173c <HAL_GetTick>
 80026ca:	6138      	str	r0, [r7, #16]
 80026cc:	e008      	b.n	80026e0 <HAL_RCC_OscConfig+0x2fc>
 80026ce:	f7ff f835 	bl	800173c <HAL_GetTick>
 80026d2:	4602      	mov	r2, r0
 80026d4:	693b      	ldr	r3, [r7, #16]
 80026d6:	1ad3      	subs	r3, r2, r3
 80026d8:	2b02      	cmp	r3, #2
 80026da:	d901      	bls.n	80026e0 <HAL_RCC_OscConfig+0x2fc>
 80026dc:	2303      	movs	r3, #3
 80026de:	e118      	b.n	8002912 <HAL_RCC_OscConfig+0x52e>
 80026e0:	4b6c      	ldr	r3, [pc, #432]	; (8002894 <HAL_RCC_OscConfig+0x4b0>)
 80026e2:	681b      	ldr	r3, [r3, #0]
 80026e4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80026e8:	2b00      	cmp	r3, #0
 80026ea:	d0f0      	beq.n	80026ce <HAL_RCC_OscConfig+0x2ea>
 80026ec:	687b      	ldr	r3, [r7, #4]
 80026ee:	689b      	ldr	r3, [r3, #8]
 80026f0:	2b01      	cmp	r3, #1
 80026f2:	d106      	bne.n	8002702 <HAL_RCC_OscConfig+0x31e>
 80026f4:	4b66      	ldr	r3, [pc, #408]	; (8002890 <HAL_RCC_OscConfig+0x4ac>)
 80026f6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80026f8:	4a65      	ldr	r2, [pc, #404]	; (8002890 <HAL_RCC_OscConfig+0x4ac>)
 80026fa:	f043 0301 	orr.w	r3, r3, #1
 80026fe:	6713      	str	r3, [r2, #112]	; 0x70
 8002700:	e01c      	b.n	800273c <HAL_RCC_OscConfig+0x358>
 8002702:	687b      	ldr	r3, [r7, #4]
 8002704:	689b      	ldr	r3, [r3, #8]
 8002706:	2b05      	cmp	r3, #5
 8002708:	d10c      	bne.n	8002724 <HAL_RCC_OscConfig+0x340>
 800270a:	4b61      	ldr	r3, [pc, #388]	; (8002890 <HAL_RCC_OscConfig+0x4ac>)
 800270c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800270e:	4a60      	ldr	r2, [pc, #384]	; (8002890 <HAL_RCC_OscConfig+0x4ac>)
 8002710:	f043 0304 	orr.w	r3, r3, #4
 8002714:	6713      	str	r3, [r2, #112]	; 0x70
 8002716:	4b5e      	ldr	r3, [pc, #376]	; (8002890 <HAL_RCC_OscConfig+0x4ac>)
 8002718:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800271a:	4a5d      	ldr	r2, [pc, #372]	; (8002890 <HAL_RCC_OscConfig+0x4ac>)
 800271c:	f043 0301 	orr.w	r3, r3, #1
 8002720:	6713      	str	r3, [r2, #112]	; 0x70
 8002722:	e00b      	b.n	800273c <HAL_RCC_OscConfig+0x358>
 8002724:	4b5a      	ldr	r3, [pc, #360]	; (8002890 <HAL_RCC_OscConfig+0x4ac>)
 8002726:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002728:	4a59      	ldr	r2, [pc, #356]	; (8002890 <HAL_RCC_OscConfig+0x4ac>)
 800272a:	f023 0301 	bic.w	r3, r3, #1
 800272e:	6713      	str	r3, [r2, #112]	; 0x70
 8002730:	4b57      	ldr	r3, [pc, #348]	; (8002890 <HAL_RCC_OscConfig+0x4ac>)
 8002732:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002734:	4a56      	ldr	r2, [pc, #344]	; (8002890 <HAL_RCC_OscConfig+0x4ac>)
 8002736:	f023 0304 	bic.w	r3, r3, #4
 800273a:	6713      	str	r3, [r2, #112]	; 0x70
 800273c:	687b      	ldr	r3, [r7, #4]
 800273e:	689b      	ldr	r3, [r3, #8]
 8002740:	2b00      	cmp	r3, #0
 8002742:	d015      	beq.n	8002770 <HAL_RCC_OscConfig+0x38c>
 8002744:	f7fe fffa 	bl	800173c <HAL_GetTick>
 8002748:	6138      	str	r0, [r7, #16]
 800274a:	e00a      	b.n	8002762 <HAL_RCC_OscConfig+0x37e>
 800274c:	f7fe fff6 	bl	800173c <HAL_GetTick>
 8002750:	4602      	mov	r2, r0
 8002752:	693b      	ldr	r3, [r7, #16]
 8002754:	1ad3      	subs	r3, r2, r3
 8002756:	f241 3288 	movw	r2, #5000	; 0x1388
 800275a:	4293      	cmp	r3, r2
 800275c:	d901      	bls.n	8002762 <HAL_RCC_OscConfig+0x37e>
 800275e:	2303      	movs	r3, #3
 8002760:	e0d7      	b.n	8002912 <HAL_RCC_OscConfig+0x52e>
 8002762:	4b4b      	ldr	r3, [pc, #300]	; (8002890 <HAL_RCC_OscConfig+0x4ac>)
 8002764:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002766:	f003 0302 	and.w	r3, r3, #2
 800276a:	2b00      	cmp	r3, #0
 800276c:	d0ee      	beq.n	800274c <HAL_RCC_OscConfig+0x368>
 800276e:	e014      	b.n	800279a <HAL_RCC_OscConfig+0x3b6>
 8002770:	f7fe ffe4 	bl	800173c <HAL_GetTick>
 8002774:	6138      	str	r0, [r7, #16]
 8002776:	e00a      	b.n	800278e <HAL_RCC_OscConfig+0x3aa>
 8002778:	f7fe ffe0 	bl	800173c <HAL_GetTick>
 800277c:	4602      	mov	r2, r0
 800277e:	693b      	ldr	r3, [r7, #16]
 8002780:	1ad3      	subs	r3, r2, r3
 8002782:	f241 3288 	movw	r2, #5000	; 0x1388
 8002786:	4293      	cmp	r3, r2
 8002788:	d901      	bls.n	800278e <HAL_RCC_OscConfig+0x3aa>
 800278a:	2303      	movs	r3, #3
 800278c:	e0c1      	b.n	8002912 <HAL_RCC_OscConfig+0x52e>
 800278e:	4b40      	ldr	r3, [pc, #256]	; (8002890 <HAL_RCC_OscConfig+0x4ac>)
 8002790:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002792:	f003 0302 	and.w	r3, r3, #2
 8002796:	2b00      	cmp	r3, #0
 8002798:	d1ee      	bne.n	8002778 <HAL_RCC_OscConfig+0x394>
 800279a:	7dfb      	ldrb	r3, [r7, #23]
 800279c:	2b01      	cmp	r3, #1
 800279e:	d105      	bne.n	80027ac <HAL_RCC_OscConfig+0x3c8>
 80027a0:	4b3b      	ldr	r3, [pc, #236]	; (8002890 <HAL_RCC_OscConfig+0x4ac>)
 80027a2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80027a4:	4a3a      	ldr	r2, [pc, #232]	; (8002890 <HAL_RCC_OscConfig+0x4ac>)
 80027a6:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80027aa:	6413      	str	r3, [r2, #64]	; 0x40
 80027ac:	687b      	ldr	r3, [r7, #4]
 80027ae:	699b      	ldr	r3, [r3, #24]
 80027b0:	2b00      	cmp	r3, #0
 80027b2:	f000 80ad 	beq.w	8002910 <HAL_RCC_OscConfig+0x52c>
 80027b6:	4b36      	ldr	r3, [pc, #216]	; (8002890 <HAL_RCC_OscConfig+0x4ac>)
 80027b8:	689b      	ldr	r3, [r3, #8]
 80027ba:	f003 030c 	and.w	r3, r3, #12
 80027be:	2b08      	cmp	r3, #8
 80027c0:	d060      	beq.n	8002884 <HAL_RCC_OscConfig+0x4a0>
 80027c2:	687b      	ldr	r3, [r7, #4]
 80027c4:	699b      	ldr	r3, [r3, #24]
 80027c6:	2b02      	cmp	r3, #2
 80027c8:	d145      	bne.n	8002856 <HAL_RCC_OscConfig+0x472>
 80027ca:	4b33      	ldr	r3, [pc, #204]	; (8002898 <HAL_RCC_OscConfig+0x4b4>)
 80027cc:	2200      	movs	r2, #0
 80027ce:	601a      	str	r2, [r3, #0]
 80027d0:	f7fe ffb4 	bl	800173c <HAL_GetTick>
 80027d4:	6138      	str	r0, [r7, #16]
 80027d6:	e008      	b.n	80027ea <HAL_RCC_OscConfig+0x406>
 80027d8:	f7fe ffb0 	bl	800173c <HAL_GetTick>
 80027dc:	4602      	mov	r2, r0
 80027de:	693b      	ldr	r3, [r7, #16]
 80027e0:	1ad3      	subs	r3, r2, r3
 80027e2:	2b02      	cmp	r3, #2
 80027e4:	d901      	bls.n	80027ea <HAL_RCC_OscConfig+0x406>
 80027e6:	2303      	movs	r3, #3
 80027e8:	e093      	b.n	8002912 <HAL_RCC_OscConfig+0x52e>
 80027ea:	4b29      	ldr	r3, [pc, #164]	; (8002890 <HAL_RCC_OscConfig+0x4ac>)
 80027ec:	681b      	ldr	r3, [r3, #0]
 80027ee:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80027f2:	2b00      	cmp	r3, #0
 80027f4:	d1f0      	bne.n	80027d8 <HAL_RCC_OscConfig+0x3f4>
 80027f6:	687b      	ldr	r3, [r7, #4]
 80027f8:	69da      	ldr	r2, [r3, #28]
 80027fa:	687b      	ldr	r3, [r7, #4]
 80027fc:	6a1b      	ldr	r3, [r3, #32]
 80027fe:	431a      	orrs	r2, r3
 8002800:	687b      	ldr	r3, [r7, #4]
 8002802:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002804:	019b      	lsls	r3, r3, #6
 8002806:	431a      	orrs	r2, r3
 8002808:	687b      	ldr	r3, [r7, #4]
 800280a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800280c:	085b      	lsrs	r3, r3, #1
 800280e:	3b01      	subs	r3, #1
 8002810:	041b      	lsls	r3, r3, #16
 8002812:	431a      	orrs	r2, r3
 8002814:	687b      	ldr	r3, [r7, #4]
 8002816:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002818:	061b      	lsls	r3, r3, #24
 800281a:	431a      	orrs	r2, r3
 800281c:	687b      	ldr	r3, [r7, #4]
 800281e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002820:	071b      	lsls	r3, r3, #28
 8002822:	491b      	ldr	r1, [pc, #108]	; (8002890 <HAL_RCC_OscConfig+0x4ac>)
 8002824:	4313      	orrs	r3, r2
 8002826:	604b      	str	r3, [r1, #4]
 8002828:	4b1b      	ldr	r3, [pc, #108]	; (8002898 <HAL_RCC_OscConfig+0x4b4>)
 800282a:	2201      	movs	r2, #1
 800282c:	601a      	str	r2, [r3, #0]
 800282e:	f7fe ff85 	bl	800173c <HAL_GetTick>
 8002832:	6138      	str	r0, [r7, #16]
 8002834:	e008      	b.n	8002848 <HAL_RCC_OscConfig+0x464>
 8002836:	f7fe ff81 	bl	800173c <HAL_GetTick>
 800283a:	4602      	mov	r2, r0
 800283c:	693b      	ldr	r3, [r7, #16]
 800283e:	1ad3      	subs	r3, r2, r3
 8002840:	2b02      	cmp	r3, #2
 8002842:	d901      	bls.n	8002848 <HAL_RCC_OscConfig+0x464>
 8002844:	2303      	movs	r3, #3
 8002846:	e064      	b.n	8002912 <HAL_RCC_OscConfig+0x52e>
 8002848:	4b11      	ldr	r3, [pc, #68]	; (8002890 <HAL_RCC_OscConfig+0x4ac>)
 800284a:	681b      	ldr	r3, [r3, #0]
 800284c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002850:	2b00      	cmp	r3, #0
 8002852:	d0f0      	beq.n	8002836 <HAL_RCC_OscConfig+0x452>
 8002854:	e05c      	b.n	8002910 <HAL_RCC_OscConfig+0x52c>
 8002856:	4b10      	ldr	r3, [pc, #64]	; (8002898 <HAL_RCC_OscConfig+0x4b4>)
 8002858:	2200      	movs	r2, #0
 800285a:	601a      	str	r2, [r3, #0]
 800285c:	f7fe ff6e 	bl	800173c <HAL_GetTick>
 8002860:	6138      	str	r0, [r7, #16]
 8002862:	e008      	b.n	8002876 <HAL_RCC_OscConfig+0x492>
 8002864:	f7fe ff6a 	bl	800173c <HAL_GetTick>
 8002868:	4602      	mov	r2, r0
 800286a:	693b      	ldr	r3, [r7, #16]
 800286c:	1ad3      	subs	r3, r2, r3
 800286e:	2b02      	cmp	r3, #2
 8002870:	d901      	bls.n	8002876 <HAL_RCC_OscConfig+0x492>
 8002872:	2303      	movs	r3, #3
 8002874:	e04d      	b.n	8002912 <HAL_RCC_OscConfig+0x52e>
 8002876:	4b06      	ldr	r3, [pc, #24]	; (8002890 <HAL_RCC_OscConfig+0x4ac>)
 8002878:	681b      	ldr	r3, [r3, #0]
 800287a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800287e:	2b00      	cmp	r3, #0
 8002880:	d1f0      	bne.n	8002864 <HAL_RCC_OscConfig+0x480>
 8002882:	e045      	b.n	8002910 <HAL_RCC_OscConfig+0x52c>
 8002884:	687b      	ldr	r3, [r7, #4]
 8002886:	699b      	ldr	r3, [r3, #24]
 8002888:	2b01      	cmp	r3, #1
 800288a:	d107      	bne.n	800289c <HAL_RCC_OscConfig+0x4b8>
 800288c:	2301      	movs	r3, #1
 800288e:	e040      	b.n	8002912 <HAL_RCC_OscConfig+0x52e>
 8002890:	40023800 	.word	0x40023800
 8002894:	40007000 	.word	0x40007000
 8002898:	42470060 	.word	0x42470060
 800289c:	4b1f      	ldr	r3, [pc, #124]	; (800291c <HAL_RCC_OscConfig+0x538>)
 800289e:	685b      	ldr	r3, [r3, #4]
 80028a0:	60fb      	str	r3, [r7, #12]
 80028a2:	687b      	ldr	r3, [r7, #4]
 80028a4:	699b      	ldr	r3, [r3, #24]
 80028a6:	2b01      	cmp	r3, #1
 80028a8:	d030      	beq.n	800290c <HAL_RCC_OscConfig+0x528>
 80028aa:	68fb      	ldr	r3, [r7, #12]
 80028ac:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 80028b0:	687b      	ldr	r3, [r7, #4]
 80028b2:	69db      	ldr	r3, [r3, #28]
 80028b4:	429a      	cmp	r2, r3
 80028b6:	d129      	bne.n	800290c <HAL_RCC_OscConfig+0x528>
 80028b8:	68fb      	ldr	r3, [r7, #12]
 80028ba:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 80028be:	687b      	ldr	r3, [r7, #4]
 80028c0:	6a1b      	ldr	r3, [r3, #32]
 80028c2:	429a      	cmp	r2, r3
 80028c4:	d122      	bne.n	800290c <HAL_RCC_OscConfig+0x528>
 80028c6:	68fa      	ldr	r2, [r7, #12]
 80028c8:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80028cc:	4013      	ands	r3, r2
 80028ce:	687a      	ldr	r2, [r7, #4]
 80028d0:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80028d2:	0192      	lsls	r2, r2, #6
 80028d4:	4293      	cmp	r3, r2
 80028d6:	d119      	bne.n	800290c <HAL_RCC_OscConfig+0x528>
 80028d8:	68fb      	ldr	r3, [r7, #12]
 80028da:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 80028de:	687b      	ldr	r3, [r7, #4]
 80028e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80028e2:	085b      	lsrs	r3, r3, #1
 80028e4:	3b01      	subs	r3, #1
 80028e6:	041b      	lsls	r3, r3, #16
 80028e8:	429a      	cmp	r2, r3
 80028ea:	d10f      	bne.n	800290c <HAL_RCC_OscConfig+0x528>
 80028ec:	68fb      	ldr	r3, [r7, #12]
 80028ee:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 80028f2:	687b      	ldr	r3, [r7, #4]
 80028f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80028f6:	061b      	lsls	r3, r3, #24
 80028f8:	429a      	cmp	r2, r3
 80028fa:	d107      	bne.n	800290c <HAL_RCC_OscConfig+0x528>
 80028fc:	68fb      	ldr	r3, [r7, #12]
 80028fe:	f003 42e0 	and.w	r2, r3, #1879048192	; 0x70000000
 8002902:	687b      	ldr	r3, [r7, #4]
 8002904:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002906:	071b      	lsls	r3, r3, #28
 8002908:	429a      	cmp	r2, r3
 800290a:	d001      	beq.n	8002910 <HAL_RCC_OscConfig+0x52c>
 800290c:	2301      	movs	r3, #1
 800290e:	e000      	b.n	8002912 <HAL_RCC_OscConfig+0x52e>
 8002910:	2300      	movs	r3, #0
 8002912:	4618      	mov	r0, r3
 8002914:	3718      	adds	r7, #24
 8002916:	46bd      	mov	sp, r7
 8002918:	bd80      	pop	{r7, pc}
 800291a:	bf00      	nop
 800291c:	40023800 	.word	0x40023800

08002920 <HAL_SPI_Init>:
 8002920:	b580      	push	{r7, lr}
 8002922:	b082      	sub	sp, #8
 8002924:	af00      	add	r7, sp, #0
 8002926:	6078      	str	r0, [r7, #4]
 8002928:	687b      	ldr	r3, [r7, #4]
 800292a:	2b00      	cmp	r3, #0
 800292c:	d101      	bne.n	8002932 <HAL_SPI_Init+0x12>
 800292e:	2301      	movs	r3, #1
 8002930:	e07b      	b.n	8002a2a <HAL_SPI_Init+0x10a>
 8002932:	687b      	ldr	r3, [r7, #4]
 8002934:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002936:	2b00      	cmp	r3, #0
 8002938:	d108      	bne.n	800294c <HAL_SPI_Init+0x2c>
 800293a:	687b      	ldr	r3, [r7, #4]
 800293c:	685b      	ldr	r3, [r3, #4]
 800293e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8002942:	d009      	beq.n	8002958 <HAL_SPI_Init+0x38>
 8002944:	687b      	ldr	r3, [r7, #4]
 8002946:	2200      	movs	r2, #0
 8002948:	61da      	str	r2, [r3, #28]
 800294a:	e005      	b.n	8002958 <HAL_SPI_Init+0x38>
 800294c:	687b      	ldr	r3, [r7, #4]
 800294e:	2200      	movs	r2, #0
 8002950:	611a      	str	r2, [r3, #16]
 8002952:	687b      	ldr	r3, [r7, #4]
 8002954:	2200      	movs	r2, #0
 8002956:	615a      	str	r2, [r3, #20]
 8002958:	687b      	ldr	r3, [r7, #4]
 800295a:	2200      	movs	r2, #0
 800295c:	629a      	str	r2, [r3, #40]	; 0x28
 800295e:	687b      	ldr	r3, [r7, #4]
 8002960:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8002964:	b2db      	uxtb	r3, r3
 8002966:	2b00      	cmp	r3, #0
 8002968:	d106      	bne.n	8002978 <HAL_SPI_Init+0x58>
 800296a:	687b      	ldr	r3, [r7, #4]
 800296c:	2200      	movs	r2, #0
 800296e:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8002972:	6878      	ldr	r0, [r7, #4]
 8002974:	f7fe fb72 	bl	800105c <HAL_SPI_MspInit>
 8002978:	687b      	ldr	r3, [r7, #4]
 800297a:	2202      	movs	r2, #2
 800297c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002980:	687b      	ldr	r3, [r7, #4]
 8002982:	681b      	ldr	r3, [r3, #0]
 8002984:	681a      	ldr	r2, [r3, #0]
 8002986:	687b      	ldr	r3, [r7, #4]
 8002988:	681b      	ldr	r3, [r3, #0]
 800298a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800298e:	601a      	str	r2, [r3, #0]
 8002990:	687b      	ldr	r3, [r7, #4]
 8002992:	685b      	ldr	r3, [r3, #4]
 8002994:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8002998:	687b      	ldr	r3, [r7, #4]
 800299a:	689b      	ldr	r3, [r3, #8]
 800299c:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 80029a0:	431a      	orrs	r2, r3
 80029a2:	687b      	ldr	r3, [r7, #4]
 80029a4:	68db      	ldr	r3, [r3, #12]
 80029a6:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80029aa:	431a      	orrs	r2, r3
 80029ac:	687b      	ldr	r3, [r7, #4]
 80029ae:	691b      	ldr	r3, [r3, #16]
 80029b0:	f003 0302 	and.w	r3, r3, #2
 80029b4:	431a      	orrs	r2, r3
 80029b6:	687b      	ldr	r3, [r7, #4]
 80029b8:	695b      	ldr	r3, [r3, #20]
 80029ba:	f003 0301 	and.w	r3, r3, #1
 80029be:	431a      	orrs	r2, r3
 80029c0:	687b      	ldr	r3, [r7, #4]
 80029c2:	699b      	ldr	r3, [r3, #24]
 80029c4:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80029c8:	431a      	orrs	r2, r3
 80029ca:	687b      	ldr	r3, [r7, #4]
 80029cc:	69db      	ldr	r3, [r3, #28]
 80029ce:	f003 0338 	and.w	r3, r3, #56	; 0x38
 80029d2:	431a      	orrs	r2, r3
 80029d4:	687b      	ldr	r3, [r7, #4]
 80029d6:	6a1b      	ldr	r3, [r3, #32]
 80029d8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80029dc:	ea42 0103 	orr.w	r1, r2, r3
 80029e0:	687b      	ldr	r3, [r7, #4]
 80029e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80029e4:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 80029e8:	687b      	ldr	r3, [r7, #4]
 80029ea:	681b      	ldr	r3, [r3, #0]
 80029ec:	430a      	orrs	r2, r1
 80029ee:	601a      	str	r2, [r3, #0]
 80029f0:	687b      	ldr	r3, [r7, #4]
 80029f2:	699b      	ldr	r3, [r3, #24]
 80029f4:	0c1b      	lsrs	r3, r3, #16
 80029f6:	f003 0104 	and.w	r1, r3, #4
 80029fa:	687b      	ldr	r3, [r7, #4]
 80029fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80029fe:	f003 0210 	and.w	r2, r3, #16
 8002a02:	687b      	ldr	r3, [r7, #4]
 8002a04:	681b      	ldr	r3, [r3, #0]
 8002a06:	430a      	orrs	r2, r1
 8002a08:	605a      	str	r2, [r3, #4]
 8002a0a:	687b      	ldr	r3, [r7, #4]
 8002a0c:	681b      	ldr	r3, [r3, #0]
 8002a0e:	69da      	ldr	r2, [r3, #28]
 8002a10:	687b      	ldr	r3, [r7, #4]
 8002a12:	681b      	ldr	r3, [r3, #0]
 8002a14:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8002a18:	61da      	str	r2, [r3, #28]
 8002a1a:	687b      	ldr	r3, [r7, #4]
 8002a1c:	2200      	movs	r2, #0
 8002a1e:	655a      	str	r2, [r3, #84]	; 0x54
 8002a20:	687b      	ldr	r3, [r7, #4]
 8002a22:	2201      	movs	r2, #1
 8002a24:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002a28:	2300      	movs	r3, #0
 8002a2a:	4618      	mov	r0, r3
 8002a2c:	3708      	adds	r7, #8
 8002a2e:	46bd      	mov	sp, r7
 8002a30:	bd80      	pop	{r7, pc}

08002a32 <HAL_SPI_TransmitReceive>:
 8002a32:	b580      	push	{r7, lr}
 8002a34:	b08c      	sub	sp, #48	; 0x30
 8002a36:	af00      	add	r7, sp, #0
 8002a38:	60f8      	str	r0, [r7, #12]
 8002a3a:	60b9      	str	r1, [r7, #8]
 8002a3c:	607a      	str	r2, [r7, #4]
 8002a3e:	807b      	strh	r3, [r7, #2]
 8002a40:	2301      	movs	r3, #1
 8002a42:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002a44:	2300      	movs	r3, #0
 8002a46:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8002a4a:	68fb      	ldr	r3, [r7, #12]
 8002a4c:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8002a50:	2b01      	cmp	r3, #1
 8002a52:	d101      	bne.n	8002a58 <HAL_SPI_TransmitReceive+0x26>
 8002a54:	2302      	movs	r3, #2
 8002a56:	e18a      	b.n	8002d6e <HAL_SPI_TransmitReceive+0x33c>
 8002a58:	68fb      	ldr	r3, [r7, #12]
 8002a5a:	2201      	movs	r2, #1
 8002a5c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8002a60:	f7fe fe6c 	bl	800173c <HAL_GetTick>
 8002a64:	6278      	str	r0, [r7, #36]	; 0x24
 8002a66:	68fb      	ldr	r3, [r7, #12]
 8002a68:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8002a6c:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8002a70:	68fb      	ldr	r3, [r7, #12]
 8002a72:	685b      	ldr	r3, [r3, #4]
 8002a74:	61fb      	str	r3, [r7, #28]
 8002a76:	887b      	ldrh	r3, [r7, #2]
 8002a78:	837b      	strh	r3, [r7, #26]
 8002a7a:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8002a7e:	2b01      	cmp	r3, #1
 8002a80:	d00f      	beq.n	8002aa2 <HAL_SPI_TransmitReceive+0x70>
 8002a82:	69fb      	ldr	r3, [r7, #28]
 8002a84:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8002a88:	d107      	bne.n	8002a9a <HAL_SPI_TransmitReceive+0x68>
 8002a8a:	68fb      	ldr	r3, [r7, #12]
 8002a8c:	689b      	ldr	r3, [r3, #8]
 8002a8e:	2b00      	cmp	r3, #0
 8002a90:	d103      	bne.n	8002a9a <HAL_SPI_TransmitReceive+0x68>
 8002a92:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8002a96:	2b04      	cmp	r3, #4
 8002a98:	d003      	beq.n	8002aa2 <HAL_SPI_TransmitReceive+0x70>
 8002a9a:	2302      	movs	r3, #2
 8002a9c:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8002aa0:	e15b      	b.n	8002d5a <HAL_SPI_TransmitReceive+0x328>
 8002aa2:	68bb      	ldr	r3, [r7, #8]
 8002aa4:	2b00      	cmp	r3, #0
 8002aa6:	d005      	beq.n	8002ab4 <HAL_SPI_TransmitReceive+0x82>
 8002aa8:	687b      	ldr	r3, [r7, #4]
 8002aaa:	2b00      	cmp	r3, #0
 8002aac:	d002      	beq.n	8002ab4 <HAL_SPI_TransmitReceive+0x82>
 8002aae:	887b      	ldrh	r3, [r7, #2]
 8002ab0:	2b00      	cmp	r3, #0
 8002ab2:	d103      	bne.n	8002abc <HAL_SPI_TransmitReceive+0x8a>
 8002ab4:	2301      	movs	r3, #1
 8002ab6:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8002aba:	e14e      	b.n	8002d5a <HAL_SPI_TransmitReceive+0x328>
 8002abc:	68fb      	ldr	r3, [r7, #12]
 8002abe:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8002ac2:	b2db      	uxtb	r3, r3
 8002ac4:	2b04      	cmp	r3, #4
 8002ac6:	d003      	beq.n	8002ad0 <HAL_SPI_TransmitReceive+0x9e>
 8002ac8:	68fb      	ldr	r3, [r7, #12]
 8002aca:	2205      	movs	r2, #5
 8002acc:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002ad0:	68fb      	ldr	r3, [r7, #12]
 8002ad2:	2200      	movs	r2, #0
 8002ad4:	655a      	str	r2, [r3, #84]	; 0x54
 8002ad6:	68fb      	ldr	r3, [r7, #12]
 8002ad8:	687a      	ldr	r2, [r7, #4]
 8002ada:	639a      	str	r2, [r3, #56]	; 0x38
 8002adc:	68fb      	ldr	r3, [r7, #12]
 8002ade:	887a      	ldrh	r2, [r7, #2]
 8002ae0:	87da      	strh	r2, [r3, #62]	; 0x3e
 8002ae2:	68fb      	ldr	r3, [r7, #12]
 8002ae4:	887a      	ldrh	r2, [r7, #2]
 8002ae6:	879a      	strh	r2, [r3, #60]	; 0x3c
 8002ae8:	68fb      	ldr	r3, [r7, #12]
 8002aea:	68ba      	ldr	r2, [r7, #8]
 8002aec:	631a      	str	r2, [r3, #48]	; 0x30
 8002aee:	68fb      	ldr	r3, [r7, #12]
 8002af0:	887a      	ldrh	r2, [r7, #2]
 8002af2:	86da      	strh	r2, [r3, #54]	; 0x36
 8002af4:	68fb      	ldr	r3, [r7, #12]
 8002af6:	887a      	ldrh	r2, [r7, #2]
 8002af8:	869a      	strh	r2, [r3, #52]	; 0x34
 8002afa:	68fb      	ldr	r3, [r7, #12]
 8002afc:	2200      	movs	r2, #0
 8002afe:	641a      	str	r2, [r3, #64]	; 0x40
 8002b00:	68fb      	ldr	r3, [r7, #12]
 8002b02:	2200      	movs	r2, #0
 8002b04:	645a      	str	r2, [r3, #68]	; 0x44
 8002b06:	68fb      	ldr	r3, [r7, #12]
 8002b08:	681b      	ldr	r3, [r3, #0]
 8002b0a:	681b      	ldr	r3, [r3, #0]
 8002b0c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002b10:	2b40      	cmp	r3, #64	; 0x40
 8002b12:	d007      	beq.n	8002b24 <HAL_SPI_TransmitReceive+0xf2>
 8002b14:	68fb      	ldr	r3, [r7, #12]
 8002b16:	681b      	ldr	r3, [r3, #0]
 8002b18:	681a      	ldr	r2, [r3, #0]
 8002b1a:	68fb      	ldr	r3, [r7, #12]
 8002b1c:	681b      	ldr	r3, [r3, #0]
 8002b1e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002b22:	601a      	str	r2, [r3, #0]
 8002b24:	68fb      	ldr	r3, [r7, #12]
 8002b26:	68db      	ldr	r3, [r3, #12]
 8002b28:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8002b2c:	d178      	bne.n	8002c20 <HAL_SPI_TransmitReceive+0x1ee>
 8002b2e:	68fb      	ldr	r3, [r7, #12]
 8002b30:	685b      	ldr	r3, [r3, #4]
 8002b32:	2b00      	cmp	r3, #0
 8002b34:	d002      	beq.n	8002b3c <HAL_SPI_TransmitReceive+0x10a>
 8002b36:	8b7b      	ldrh	r3, [r7, #26]
 8002b38:	2b01      	cmp	r3, #1
 8002b3a:	d166      	bne.n	8002c0a <HAL_SPI_TransmitReceive+0x1d8>
 8002b3c:	68fb      	ldr	r3, [r7, #12]
 8002b3e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b40:	881a      	ldrh	r2, [r3, #0]
 8002b42:	68fb      	ldr	r3, [r7, #12]
 8002b44:	681b      	ldr	r3, [r3, #0]
 8002b46:	60da      	str	r2, [r3, #12]
 8002b48:	68fb      	ldr	r3, [r7, #12]
 8002b4a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b4c:	1c9a      	adds	r2, r3, #2
 8002b4e:	68fb      	ldr	r3, [r7, #12]
 8002b50:	631a      	str	r2, [r3, #48]	; 0x30
 8002b52:	68fb      	ldr	r3, [r7, #12]
 8002b54:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002b56:	b29b      	uxth	r3, r3
 8002b58:	3b01      	subs	r3, #1
 8002b5a:	b29a      	uxth	r2, r3
 8002b5c:	68fb      	ldr	r3, [r7, #12]
 8002b5e:	86da      	strh	r2, [r3, #54]	; 0x36
 8002b60:	e053      	b.n	8002c0a <HAL_SPI_TransmitReceive+0x1d8>
 8002b62:	68fb      	ldr	r3, [r7, #12]
 8002b64:	681b      	ldr	r3, [r3, #0]
 8002b66:	689b      	ldr	r3, [r3, #8]
 8002b68:	f003 0302 	and.w	r3, r3, #2
 8002b6c:	2b02      	cmp	r3, #2
 8002b6e:	d11b      	bne.n	8002ba8 <HAL_SPI_TransmitReceive+0x176>
 8002b70:	68fb      	ldr	r3, [r7, #12]
 8002b72:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002b74:	b29b      	uxth	r3, r3
 8002b76:	2b00      	cmp	r3, #0
 8002b78:	d016      	beq.n	8002ba8 <HAL_SPI_TransmitReceive+0x176>
 8002b7a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002b7c:	2b01      	cmp	r3, #1
 8002b7e:	d113      	bne.n	8002ba8 <HAL_SPI_TransmitReceive+0x176>
 8002b80:	68fb      	ldr	r3, [r7, #12]
 8002b82:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b84:	881a      	ldrh	r2, [r3, #0]
 8002b86:	68fb      	ldr	r3, [r7, #12]
 8002b88:	681b      	ldr	r3, [r3, #0]
 8002b8a:	60da      	str	r2, [r3, #12]
 8002b8c:	68fb      	ldr	r3, [r7, #12]
 8002b8e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b90:	1c9a      	adds	r2, r3, #2
 8002b92:	68fb      	ldr	r3, [r7, #12]
 8002b94:	631a      	str	r2, [r3, #48]	; 0x30
 8002b96:	68fb      	ldr	r3, [r7, #12]
 8002b98:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002b9a:	b29b      	uxth	r3, r3
 8002b9c:	3b01      	subs	r3, #1
 8002b9e:	b29a      	uxth	r2, r3
 8002ba0:	68fb      	ldr	r3, [r7, #12]
 8002ba2:	86da      	strh	r2, [r3, #54]	; 0x36
 8002ba4:	2300      	movs	r3, #0
 8002ba6:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002ba8:	68fb      	ldr	r3, [r7, #12]
 8002baa:	681b      	ldr	r3, [r3, #0]
 8002bac:	689b      	ldr	r3, [r3, #8]
 8002bae:	f003 0301 	and.w	r3, r3, #1
 8002bb2:	2b01      	cmp	r3, #1
 8002bb4:	d119      	bne.n	8002bea <HAL_SPI_TransmitReceive+0x1b8>
 8002bb6:	68fb      	ldr	r3, [r7, #12]
 8002bb8:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002bba:	b29b      	uxth	r3, r3
 8002bbc:	2b00      	cmp	r3, #0
 8002bbe:	d014      	beq.n	8002bea <HAL_SPI_TransmitReceive+0x1b8>
 8002bc0:	68fb      	ldr	r3, [r7, #12]
 8002bc2:	681b      	ldr	r3, [r3, #0]
 8002bc4:	68da      	ldr	r2, [r3, #12]
 8002bc6:	68fb      	ldr	r3, [r7, #12]
 8002bc8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002bca:	b292      	uxth	r2, r2
 8002bcc:	801a      	strh	r2, [r3, #0]
 8002bce:	68fb      	ldr	r3, [r7, #12]
 8002bd0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002bd2:	1c9a      	adds	r2, r3, #2
 8002bd4:	68fb      	ldr	r3, [r7, #12]
 8002bd6:	639a      	str	r2, [r3, #56]	; 0x38
 8002bd8:	68fb      	ldr	r3, [r7, #12]
 8002bda:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002bdc:	b29b      	uxth	r3, r3
 8002bde:	3b01      	subs	r3, #1
 8002be0:	b29a      	uxth	r2, r3
 8002be2:	68fb      	ldr	r3, [r7, #12]
 8002be4:	87da      	strh	r2, [r3, #62]	; 0x3e
 8002be6:	2301      	movs	r3, #1
 8002be8:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002bea:	f7fe fda7 	bl	800173c <HAL_GetTick>
 8002bee:	4602      	mov	r2, r0
 8002bf0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002bf2:	1ad3      	subs	r3, r2, r3
 8002bf4:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8002bf6:	429a      	cmp	r2, r3
 8002bf8:	d807      	bhi.n	8002c0a <HAL_SPI_TransmitReceive+0x1d8>
 8002bfa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002bfc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002c00:	d003      	beq.n	8002c0a <HAL_SPI_TransmitReceive+0x1d8>
 8002c02:	2303      	movs	r3, #3
 8002c04:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8002c08:	e0a7      	b.n	8002d5a <HAL_SPI_TransmitReceive+0x328>
 8002c0a:	68fb      	ldr	r3, [r7, #12]
 8002c0c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002c0e:	b29b      	uxth	r3, r3
 8002c10:	2b00      	cmp	r3, #0
 8002c12:	d1a6      	bne.n	8002b62 <HAL_SPI_TransmitReceive+0x130>
 8002c14:	68fb      	ldr	r3, [r7, #12]
 8002c16:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002c18:	b29b      	uxth	r3, r3
 8002c1a:	2b00      	cmp	r3, #0
 8002c1c:	d1a1      	bne.n	8002b62 <HAL_SPI_TransmitReceive+0x130>
 8002c1e:	e07c      	b.n	8002d1a <HAL_SPI_TransmitReceive+0x2e8>
 8002c20:	68fb      	ldr	r3, [r7, #12]
 8002c22:	685b      	ldr	r3, [r3, #4]
 8002c24:	2b00      	cmp	r3, #0
 8002c26:	d002      	beq.n	8002c2e <HAL_SPI_TransmitReceive+0x1fc>
 8002c28:	8b7b      	ldrh	r3, [r7, #26]
 8002c2a:	2b01      	cmp	r3, #1
 8002c2c:	d16b      	bne.n	8002d06 <HAL_SPI_TransmitReceive+0x2d4>
 8002c2e:	68fb      	ldr	r3, [r7, #12]
 8002c30:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002c32:	68fb      	ldr	r3, [r7, #12]
 8002c34:	681b      	ldr	r3, [r3, #0]
 8002c36:	330c      	adds	r3, #12
 8002c38:	7812      	ldrb	r2, [r2, #0]
 8002c3a:	701a      	strb	r2, [r3, #0]
 8002c3c:	68fb      	ldr	r3, [r7, #12]
 8002c3e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c40:	1c5a      	adds	r2, r3, #1
 8002c42:	68fb      	ldr	r3, [r7, #12]
 8002c44:	631a      	str	r2, [r3, #48]	; 0x30
 8002c46:	68fb      	ldr	r3, [r7, #12]
 8002c48:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002c4a:	b29b      	uxth	r3, r3
 8002c4c:	3b01      	subs	r3, #1
 8002c4e:	b29a      	uxth	r2, r3
 8002c50:	68fb      	ldr	r3, [r7, #12]
 8002c52:	86da      	strh	r2, [r3, #54]	; 0x36
 8002c54:	e057      	b.n	8002d06 <HAL_SPI_TransmitReceive+0x2d4>
 8002c56:	68fb      	ldr	r3, [r7, #12]
 8002c58:	681b      	ldr	r3, [r3, #0]
 8002c5a:	689b      	ldr	r3, [r3, #8]
 8002c5c:	f003 0302 	and.w	r3, r3, #2
 8002c60:	2b02      	cmp	r3, #2
 8002c62:	d11c      	bne.n	8002c9e <HAL_SPI_TransmitReceive+0x26c>
 8002c64:	68fb      	ldr	r3, [r7, #12]
 8002c66:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002c68:	b29b      	uxth	r3, r3
 8002c6a:	2b00      	cmp	r3, #0
 8002c6c:	d017      	beq.n	8002c9e <HAL_SPI_TransmitReceive+0x26c>
 8002c6e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002c70:	2b01      	cmp	r3, #1
 8002c72:	d114      	bne.n	8002c9e <HAL_SPI_TransmitReceive+0x26c>
 8002c74:	68fb      	ldr	r3, [r7, #12]
 8002c76:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002c78:	68fb      	ldr	r3, [r7, #12]
 8002c7a:	681b      	ldr	r3, [r3, #0]
 8002c7c:	330c      	adds	r3, #12
 8002c7e:	7812      	ldrb	r2, [r2, #0]
 8002c80:	701a      	strb	r2, [r3, #0]
 8002c82:	68fb      	ldr	r3, [r7, #12]
 8002c84:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c86:	1c5a      	adds	r2, r3, #1
 8002c88:	68fb      	ldr	r3, [r7, #12]
 8002c8a:	631a      	str	r2, [r3, #48]	; 0x30
 8002c8c:	68fb      	ldr	r3, [r7, #12]
 8002c8e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002c90:	b29b      	uxth	r3, r3
 8002c92:	3b01      	subs	r3, #1
 8002c94:	b29a      	uxth	r2, r3
 8002c96:	68fb      	ldr	r3, [r7, #12]
 8002c98:	86da      	strh	r2, [r3, #54]	; 0x36
 8002c9a:	2300      	movs	r3, #0
 8002c9c:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002c9e:	68fb      	ldr	r3, [r7, #12]
 8002ca0:	681b      	ldr	r3, [r3, #0]
 8002ca2:	689b      	ldr	r3, [r3, #8]
 8002ca4:	f003 0301 	and.w	r3, r3, #1
 8002ca8:	2b01      	cmp	r3, #1
 8002caa:	d119      	bne.n	8002ce0 <HAL_SPI_TransmitReceive+0x2ae>
 8002cac:	68fb      	ldr	r3, [r7, #12]
 8002cae:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002cb0:	b29b      	uxth	r3, r3
 8002cb2:	2b00      	cmp	r3, #0
 8002cb4:	d014      	beq.n	8002ce0 <HAL_SPI_TransmitReceive+0x2ae>
 8002cb6:	68fb      	ldr	r3, [r7, #12]
 8002cb8:	681b      	ldr	r3, [r3, #0]
 8002cba:	68da      	ldr	r2, [r3, #12]
 8002cbc:	68fb      	ldr	r3, [r7, #12]
 8002cbe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002cc0:	b2d2      	uxtb	r2, r2
 8002cc2:	701a      	strb	r2, [r3, #0]
 8002cc4:	68fb      	ldr	r3, [r7, #12]
 8002cc6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002cc8:	1c5a      	adds	r2, r3, #1
 8002cca:	68fb      	ldr	r3, [r7, #12]
 8002ccc:	639a      	str	r2, [r3, #56]	; 0x38
 8002cce:	68fb      	ldr	r3, [r7, #12]
 8002cd0:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002cd2:	b29b      	uxth	r3, r3
 8002cd4:	3b01      	subs	r3, #1
 8002cd6:	b29a      	uxth	r2, r3
 8002cd8:	68fb      	ldr	r3, [r7, #12]
 8002cda:	87da      	strh	r2, [r3, #62]	; 0x3e
 8002cdc:	2301      	movs	r3, #1
 8002cde:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002ce0:	f7fe fd2c 	bl	800173c <HAL_GetTick>
 8002ce4:	4602      	mov	r2, r0
 8002ce6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002ce8:	1ad3      	subs	r3, r2, r3
 8002cea:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8002cec:	429a      	cmp	r2, r3
 8002cee:	d803      	bhi.n	8002cf8 <HAL_SPI_TransmitReceive+0x2c6>
 8002cf0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002cf2:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002cf6:	d102      	bne.n	8002cfe <HAL_SPI_TransmitReceive+0x2cc>
 8002cf8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002cfa:	2b00      	cmp	r3, #0
 8002cfc:	d103      	bne.n	8002d06 <HAL_SPI_TransmitReceive+0x2d4>
 8002cfe:	2303      	movs	r3, #3
 8002d00:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8002d04:	e029      	b.n	8002d5a <HAL_SPI_TransmitReceive+0x328>
 8002d06:	68fb      	ldr	r3, [r7, #12]
 8002d08:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002d0a:	b29b      	uxth	r3, r3
 8002d0c:	2b00      	cmp	r3, #0
 8002d0e:	d1a2      	bne.n	8002c56 <HAL_SPI_TransmitReceive+0x224>
 8002d10:	68fb      	ldr	r3, [r7, #12]
 8002d12:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002d14:	b29b      	uxth	r3, r3
 8002d16:	2b00      	cmp	r3, #0
 8002d18:	d19d      	bne.n	8002c56 <HAL_SPI_TransmitReceive+0x224>
 8002d1a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002d1c:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8002d1e:	68f8      	ldr	r0, [r7, #12]
 8002d20:	f000 f8b2 	bl	8002e88 <SPI_EndRxTxTransaction>
 8002d24:	4603      	mov	r3, r0
 8002d26:	2b00      	cmp	r3, #0
 8002d28:	d006      	beq.n	8002d38 <HAL_SPI_TransmitReceive+0x306>
 8002d2a:	2301      	movs	r3, #1
 8002d2c:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8002d30:	68fb      	ldr	r3, [r7, #12]
 8002d32:	2220      	movs	r2, #32
 8002d34:	655a      	str	r2, [r3, #84]	; 0x54
 8002d36:	e010      	b.n	8002d5a <HAL_SPI_TransmitReceive+0x328>
 8002d38:	68fb      	ldr	r3, [r7, #12]
 8002d3a:	689b      	ldr	r3, [r3, #8]
 8002d3c:	2b00      	cmp	r3, #0
 8002d3e:	d10b      	bne.n	8002d58 <HAL_SPI_TransmitReceive+0x326>
 8002d40:	2300      	movs	r3, #0
 8002d42:	617b      	str	r3, [r7, #20]
 8002d44:	68fb      	ldr	r3, [r7, #12]
 8002d46:	681b      	ldr	r3, [r3, #0]
 8002d48:	68db      	ldr	r3, [r3, #12]
 8002d4a:	617b      	str	r3, [r7, #20]
 8002d4c:	68fb      	ldr	r3, [r7, #12]
 8002d4e:	681b      	ldr	r3, [r3, #0]
 8002d50:	689b      	ldr	r3, [r3, #8]
 8002d52:	617b      	str	r3, [r7, #20]
 8002d54:	697b      	ldr	r3, [r7, #20]
 8002d56:	e000      	b.n	8002d5a <HAL_SPI_TransmitReceive+0x328>
 8002d58:	bf00      	nop
 8002d5a:	68fb      	ldr	r3, [r7, #12]
 8002d5c:	2201      	movs	r2, #1
 8002d5e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002d62:	68fb      	ldr	r3, [r7, #12]
 8002d64:	2200      	movs	r2, #0
 8002d66:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8002d6a:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8002d6e:	4618      	mov	r0, r3
 8002d70:	3730      	adds	r7, #48	; 0x30
 8002d72:	46bd      	mov	sp, r7
 8002d74:	bd80      	pop	{r7, pc}
	...

08002d78 <SPI_WaitFlagStateUntilTimeout>:
 8002d78:	b580      	push	{r7, lr}
 8002d7a:	b088      	sub	sp, #32
 8002d7c:	af00      	add	r7, sp, #0
 8002d7e:	60f8      	str	r0, [r7, #12]
 8002d80:	60b9      	str	r1, [r7, #8]
 8002d82:	603b      	str	r3, [r7, #0]
 8002d84:	4613      	mov	r3, r2
 8002d86:	71fb      	strb	r3, [r7, #7]
 8002d88:	f7fe fcd8 	bl	800173c <HAL_GetTick>
 8002d8c:	4602      	mov	r2, r0
 8002d8e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002d90:	1a9b      	subs	r3, r3, r2
 8002d92:	683a      	ldr	r2, [r7, #0]
 8002d94:	4413      	add	r3, r2
 8002d96:	61fb      	str	r3, [r7, #28]
 8002d98:	f7fe fcd0 	bl	800173c <HAL_GetTick>
 8002d9c:	61b8      	str	r0, [r7, #24]
 8002d9e:	4b39      	ldr	r3, [pc, #228]	; (8002e84 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8002da0:	681b      	ldr	r3, [r3, #0]
 8002da2:	015b      	lsls	r3, r3, #5
 8002da4:	0d1b      	lsrs	r3, r3, #20
 8002da6:	69fa      	ldr	r2, [r7, #28]
 8002da8:	fb02 f303 	mul.w	r3, r2, r3
 8002dac:	617b      	str	r3, [r7, #20]
 8002dae:	e054      	b.n	8002e5a <SPI_WaitFlagStateUntilTimeout+0xe2>
 8002db0:	683b      	ldr	r3, [r7, #0]
 8002db2:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002db6:	d050      	beq.n	8002e5a <SPI_WaitFlagStateUntilTimeout+0xe2>
 8002db8:	f7fe fcc0 	bl	800173c <HAL_GetTick>
 8002dbc:	4602      	mov	r2, r0
 8002dbe:	69bb      	ldr	r3, [r7, #24]
 8002dc0:	1ad3      	subs	r3, r2, r3
 8002dc2:	69fa      	ldr	r2, [r7, #28]
 8002dc4:	429a      	cmp	r2, r3
 8002dc6:	d902      	bls.n	8002dce <SPI_WaitFlagStateUntilTimeout+0x56>
 8002dc8:	69fb      	ldr	r3, [r7, #28]
 8002dca:	2b00      	cmp	r3, #0
 8002dcc:	d13d      	bne.n	8002e4a <SPI_WaitFlagStateUntilTimeout+0xd2>
 8002dce:	68fb      	ldr	r3, [r7, #12]
 8002dd0:	681b      	ldr	r3, [r3, #0]
 8002dd2:	685a      	ldr	r2, [r3, #4]
 8002dd4:	68fb      	ldr	r3, [r7, #12]
 8002dd6:	681b      	ldr	r3, [r3, #0]
 8002dd8:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8002ddc:	605a      	str	r2, [r3, #4]
 8002dde:	68fb      	ldr	r3, [r7, #12]
 8002de0:	685b      	ldr	r3, [r3, #4]
 8002de2:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8002de6:	d111      	bne.n	8002e0c <SPI_WaitFlagStateUntilTimeout+0x94>
 8002de8:	68fb      	ldr	r3, [r7, #12]
 8002dea:	689b      	ldr	r3, [r3, #8]
 8002dec:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8002df0:	d004      	beq.n	8002dfc <SPI_WaitFlagStateUntilTimeout+0x84>
 8002df2:	68fb      	ldr	r3, [r7, #12]
 8002df4:	689b      	ldr	r3, [r3, #8]
 8002df6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002dfa:	d107      	bne.n	8002e0c <SPI_WaitFlagStateUntilTimeout+0x94>
 8002dfc:	68fb      	ldr	r3, [r7, #12]
 8002dfe:	681b      	ldr	r3, [r3, #0]
 8002e00:	681a      	ldr	r2, [r3, #0]
 8002e02:	68fb      	ldr	r3, [r7, #12]
 8002e04:	681b      	ldr	r3, [r3, #0]
 8002e06:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002e0a:	601a      	str	r2, [r3, #0]
 8002e0c:	68fb      	ldr	r3, [r7, #12]
 8002e0e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002e10:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002e14:	d10f      	bne.n	8002e36 <SPI_WaitFlagStateUntilTimeout+0xbe>
 8002e16:	68fb      	ldr	r3, [r7, #12]
 8002e18:	681b      	ldr	r3, [r3, #0]
 8002e1a:	681a      	ldr	r2, [r3, #0]
 8002e1c:	68fb      	ldr	r3, [r7, #12]
 8002e1e:	681b      	ldr	r3, [r3, #0]
 8002e20:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8002e24:	601a      	str	r2, [r3, #0]
 8002e26:	68fb      	ldr	r3, [r7, #12]
 8002e28:	681b      	ldr	r3, [r3, #0]
 8002e2a:	681a      	ldr	r2, [r3, #0]
 8002e2c:	68fb      	ldr	r3, [r7, #12]
 8002e2e:	681b      	ldr	r3, [r3, #0]
 8002e30:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8002e34:	601a      	str	r2, [r3, #0]
 8002e36:	68fb      	ldr	r3, [r7, #12]
 8002e38:	2201      	movs	r2, #1
 8002e3a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002e3e:	68fb      	ldr	r3, [r7, #12]
 8002e40:	2200      	movs	r2, #0
 8002e42:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8002e46:	2303      	movs	r3, #3
 8002e48:	e017      	b.n	8002e7a <SPI_WaitFlagStateUntilTimeout+0x102>
 8002e4a:	697b      	ldr	r3, [r7, #20]
 8002e4c:	2b00      	cmp	r3, #0
 8002e4e:	d101      	bne.n	8002e54 <SPI_WaitFlagStateUntilTimeout+0xdc>
 8002e50:	2300      	movs	r3, #0
 8002e52:	61fb      	str	r3, [r7, #28]
 8002e54:	697b      	ldr	r3, [r7, #20]
 8002e56:	3b01      	subs	r3, #1
 8002e58:	617b      	str	r3, [r7, #20]
 8002e5a:	68fb      	ldr	r3, [r7, #12]
 8002e5c:	681b      	ldr	r3, [r3, #0]
 8002e5e:	689a      	ldr	r2, [r3, #8]
 8002e60:	68bb      	ldr	r3, [r7, #8]
 8002e62:	4013      	ands	r3, r2
 8002e64:	68ba      	ldr	r2, [r7, #8]
 8002e66:	429a      	cmp	r2, r3
 8002e68:	bf0c      	ite	eq
 8002e6a:	2301      	moveq	r3, #1
 8002e6c:	2300      	movne	r3, #0
 8002e6e:	b2db      	uxtb	r3, r3
 8002e70:	461a      	mov	r2, r3
 8002e72:	79fb      	ldrb	r3, [r7, #7]
 8002e74:	429a      	cmp	r2, r3
 8002e76:	d19b      	bne.n	8002db0 <SPI_WaitFlagStateUntilTimeout+0x38>
 8002e78:	2300      	movs	r3, #0
 8002e7a:	4618      	mov	r0, r3
 8002e7c:	3720      	adds	r7, #32
 8002e7e:	46bd      	mov	sp, r7
 8002e80:	bd80      	pop	{r7, pc}
 8002e82:	bf00      	nop
 8002e84:	20000000 	.word	0x20000000

08002e88 <SPI_EndRxTxTransaction>:
 8002e88:	b580      	push	{r7, lr}
 8002e8a:	b088      	sub	sp, #32
 8002e8c:	af02      	add	r7, sp, #8
 8002e8e:	60f8      	str	r0, [r7, #12]
 8002e90:	60b9      	str	r1, [r7, #8]
 8002e92:	607a      	str	r2, [r7, #4]
 8002e94:	4b1b      	ldr	r3, [pc, #108]	; (8002f04 <SPI_EndRxTxTransaction+0x7c>)
 8002e96:	681b      	ldr	r3, [r3, #0]
 8002e98:	4a1b      	ldr	r2, [pc, #108]	; (8002f08 <SPI_EndRxTxTransaction+0x80>)
 8002e9a:	fba2 2303 	umull	r2, r3, r2, r3
 8002e9e:	0d5b      	lsrs	r3, r3, #21
 8002ea0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8002ea4:	fb02 f303 	mul.w	r3, r2, r3
 8002ea8:	617b      	str	r3, [r7, #20]
 8002eaa:	68fb      	ldr	r3, [r7, #12]
 8002eac:	685b      	ldr	r3, [r3, #4]
 8002eae:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8002eb2:	d112      	bne.n	8002eda <SPI_EndRxTxTransaction+0x52>
 8002eb4:	687b      	ldr	r3, [r7, #4]
 8002eb6:	9300      	str	r3, [sp, #0]
 8002eb8:	68bb      	ldr	r3, [r7, #8]
 8002eba:	2200      	movs	r2, #0
 8002ebc:	2180      	movs	r1, #128	; 0x80
 8002ebe:	68f8      	ldr	r0, [r7, #12]
 8002ec0:	f7ff ff5a 	bl	8002d78 <SPI_WaitFlagStateUntilTimeout>
 8002ec4:	4603      	mov	r3, r0
 8002ec6:	2b00      	cmp	r3, #0
 8002ec8:	d016      	beq.n	8002ef8 <SPI_EndRxTxTransaction+0x70>
 8002eca:	68fb      	ldr	r3, [r7, #12]
 8002ecc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002ece:	f043 0220 	orr.w	r2, r3, #32
 8002ed2:	68fb      	ldr	r3, [r7, #12]
 8002ed4:	655a      	str	r2, [r3, #84]	; 0x54
 8002ed6:	2303      	movs	r3, #3
 8002ed8:	e00f      	b.n	8002efa <SPI_EndRxTxTransaction+0x72>
 8002eda:	697b      	ldr	r3, [r7, #20]
 8002edc:	2b00      	cmp	r3, #0
 8002ede:	d00a      	beq.n	8002ef6 <SPI_EndRxTxTransaction+0x6e>
 8002ee0:	697b      	ldr	r3, [r7, #20]
 8002ee2:	3b01      	subs	r3, #1
 8002ee4:	617b      	str	r3, [r7, #20]
 8002ee6:	68fb      	ldr	r3, [r7, #12]
 8002ee8:	681b      	ldr	r3, [r3, #0]
 8002eea:	689b      	ldr	r3, [r3, #8]
 8002eec:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002ef0:	2b80      	cmp	r3, #128	; 0x80
 8002ef2:	d0f2      	beq.n	8002eda <SPI_EndRxTxTransaction+0x52>
 8002ef4:	e000      	b.n	8002ef8 <SPI_EndRxTxTransaction+0x70>
 8002ef6:	bf00      	nop
 8002ef8:	2300      	movs	r3, #0
 8002efa:	4618      	mov	r0, r3
 8002efc:	3718      	adds	r7, #24
 8002efe:	46bd      	mov	sp, r7
 8002f00:	bd80      	pop	{r7, pc}
 8002f02:	bf00      	nop
 8002f04:	20000000 	.word	0x20000000
 8002f08:	165e9f81 	.word	0x165e9f81

08002f0c <HAL_TIM_Base_Init>:
 8002f0c:	b580      	push	{r7, lr}
 8002f0e:	b082      	sub	sp, #8
 8002f10:	af00      	add	r7, sp, #0
 8002f12:	6078      	str	r0, [r7, #4]
 8002f14:	687b      	ldr	r3, [r7, #4]
 8002f16:	2b00      	cmp	r3, #0
 8002f18:	d101      	bne.n	8002f1e <HAL_TIM_Base_Init+0x12>
 8002f1a:	2301      	movs	r3, #1
 8002f1c:	e041      	b.n	8002fa2 <HAL_TIM_Base_Init+0x96>
 8002f1e:	687b      	ldr	r3, [r7, #4]
 8002f20:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002f24:	b2db      	uxtb	r3, r3
 8002f26:	2b00      	cmp	r3, #0
 8002f28:	d106      	bne.n	8002f38 <HAL_TIM_Base_Init+0x2c>
 8002f2a:	687b      	ldr	r3, [r7, #4]
 8002f2c:	2200      	movs	r2, #0
 8002f2e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002f32:	6878      	ldr	r0, [r7, #4]
 8002f34:	f7fe fac8 	bl	80014c8 <HAL_TIM_Base_MspInit>
 8002f38:	687b      	ldr	r3, [r7, #4]
 8002f3a:	2202      	movs	r2, #2
 8002f3c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002f40:	687b      	ldr	r3, [r7, #4]
 8002f42:	681a      	ldr	r2, [r3, #0]
 8002f44:	687b      	ldr	r3, [r7, #4]
 8002f46:	3304      	adds	r3, #4
 8002f48:	4619      	mov	r1, r3
 8002f4a:	4610      	mov	r0, r2
 8002f4c:	f000 fafe 	bl	800354c <TIM_Base_SetConfig>
 8002f50:	687b      	ldr	r3, [r7, #4]
 8002f52:	2201      	movs	r2, #1
 8002f54:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002f58:	687b      	ldr	r3, [r7, #4]
 8002f5a:	2201      	movs	r2, #1
 8002f5c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002f60:	687b      	ldr	r3, [r7, #4]
 8002f62:	2201      	movs	r2, #1
 8002f64:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002f68:	687b      	ldr	r3, [r7, #4]
 8002f6a:	2201      	movs	r2, #1
 8002f6c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002f70:	687b      	ldr	r3, [r7, #4]
 8002f72:	2201      	movs	r2, #1
 8002f74:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002f78:	687b      	ldr	r3, [r7, #4]
 8002f7a:	2201      	movs	r2, #1
 8002f7c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002f80:	687b      	ldr	r3, [r7, #4]
 8002f82:	2201      	movs	r2, #1
 8002f84:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002f88:	687b      	ldr	r3, [r7, #4]
 8002f8a:	2201      	movs	r2, #1
 8002f8c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002f90:	687b      	ldr	r3, [r7, #4]
 8002f92:	2201      	movs	r2, #1
 8002f94:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002f98:	687b      	ldr	r3, [r7, #4]
 8002f9a:	2201      	movs	r2, #1
 8002f9c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002fa0:	2300      	movs	r3, #0
 8002fa2:	4618      	mov	r0, r3
 8002fa4:	3708      	adds	r7, #8
 8002fa6:	46bd      	mov	sp, r7
 8002fa8:	bd80      	pop	{r7, pc}
	...

08002fac <HAL_TIM_Base_Start>:
 8002fac:	b480      	push	{r7}
 8002fae:	b085      	sub	sp, #20
 8002fb0:	af00      	add	r7, sp, #0
 8002fb2:	6078      	str	r0, [r7, #4]
 8002fb4:	687b      	ldr	r3, [r7, #4]
 8002fb6:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002fba:	b2db      	uxtb	r3, r3
 8002fbc:	2b01      	cmp	r3, #1
 8002fbe:	d001      	beq.n	8002fc4 <HAL_TIM_Base_Start+0x18>
 8002fc0:	2301      	movs	r3, #1
 8002fc2:	e046      	b.n	8003052 <HAL_TIM_Base_Start+0xa6>
 8002fc4:	687b      	ldr	r3, [r7, #4]
 8002fc6:	2202      	movs	r2, #2
 8002fc8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002fcc:	687b      	ldr	r3, [r7, #4]
 8002fce:	681b      	ldr	r3, [r3, #0]
 8002fd0:	4a23      	ldr	r2, [pc, #140]	; (8003060 <HAL_TIM_Base_Start+0xb4>)
 8002fd2:	4293      	cmp	r3, r2
 8002fd4:	d022      	beq.n	800301c <HAL_TIM_Base_Start+0x70>
 8002fd6:	687b      	ldr	r3, [r7, #4]
 8002fd8:	681b      	ldr	r3, [r3, #0]
 8002fda:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002fde:	d01d      	beq.n	800301c <HAL_TIM_Base_Start+0x70>
 8002fe0:	687b      	ldr	r3, [r7, #4]
 8002fe2:	681b      	ldr	r3, [r3, #0]
 8002fe4:	4a1f      	ldr	r2, [pc, #124]	; (8003064 <HAL_TIM_Base_Start+0xb8>)
 8002fe6:	4293      	cmp	r3, r2
 8002fe8:	d018      	beq.n	800301c <HAL_TIM_Base_Start+0x70>
 8002fea:	687b      	ldr	r3, [r7, #4]
 8002fec:	681b      	ldr	r3, [r3, #0]
 8002fee:	4a1e      	ldr	r2, [pc, #120]	; (8003068 <HAL_TIM_Base_Start+0xbc>)
 8002ff0:	4293      	cmp	r3, r2
 8002ff2:	d013      	beq.n	800301c <HAL_TIM_Base_Start+0x70>
 8002ff4:	687b      	ldr	r3, [r7, #4]
 8002ff6:	681b      	ldr	r3, [r3, #0]
 8002ff8:	4a1c      	ldr	r2, [pc, #112]	; (800306c <HAL_TIM_Base_Start+0xc0>)
 8002ffa:	4293      	cmp	r3, r2
 8002ffc:	d00e      	beq.n	800301c <HAL_TIM_Base_Start+0x70>
 8002ffe:	687b      	ldr	r3, [r7, #4]
 8003000:	681b      	ldr	r3, [r3, #0]
 8003002:	4a1b      	ldr	r2, [pc, #108]	; (8003070 <HAL_TIM_Base_Start+0xc4>)
 8003004:	4293      	cmp	r3, r2
 8003006:	d009      	beq.n	800301c <HAL_TIM_Base_Start+0x70>
 8003008:	687b      	ldr	r3, [r7, #4]
 800300a:	681b      	ldr	r3, [r3, #0]
 800300c:	4a19      	ldr	r2, [pc, #100]	; (8003074 <HAL_TIM_Base_Start+0xc8>)
 800300e:	4293      	cmp	r3, r2
 8003010:	d004      	beq.n	800301c <HAL_TIM_Base_Start+0x70>
 8003012:	687b      	ldr	r3, [r7, #4]
 8003014:	681b      	ldr	r3, [r3, #0]
 8003016:	4a18      	ldr	r2, [pc, #96]	; (8003078 <HAL_TIM_Base_Start+0xcc>)
 8003018:	4293      	cmp	r3, r2
 800301a:	d111      	bne.n	8003040 <HAL_TIM_Base_Start+0x94>
 800301c:	687b      	ldr	r3, [r7, #4]
 800301e:	681b      	ldr	r3, [r3, #0]
 8003020:	689b      	ldr	r3, [r3, #8]
 8003022:	f003 0307 	and.w	r3, r3, #7
 8003026:	60fb      	str	r3, [r7, #12]
 8003028:	68fb      	ldr	r3, [r7, #12]
 800302a:	2b06      	cmp	r3, #6
 800302c:	d010      	beq.n	8003050 <HAL_TIM_Base_Start+0xa4>
 800302e:	687b      	ldr	r3, [r7, #4]
 8003030:	681b      	ldr	r3, [r3, #0]
 8003032:	681a      	ldr	r2, [r3, #0]
 8003034:	687b      	ldr	r3, [r7, #4]
 8003036:	681b      	ldr	r3, [r3, #0]
 8003038:	f042 0201 	orr.w	r2, r2, #1
 800303c:	601a      	str	r2, [r3, #0]
 800303e:	e007      	b.n	8003050 <HAL_TIM_Base_Start+0xa4>
 8003040:	687b      	ldr	r3, [r7, #4]
 8003042:	681b      	ldr	r3, [r3, #0]
 8003044:	681a      	ldr	r2, [r3, #0]
 8003046:	687b      	ldr	r3, [r7, #4]
 8003048:	681b      	ldr	r3, [r3, #0]
 800304a:	f042 0201 	orr.w	r2, r2, #1
 800304e:	601a      	str	r2, [r3, #0]
 8003050:	2300      	movs	r3, #0
 8003052:	4618      	mov	r0, r3
 8003054:	3714      	adds	r7, #20
 8003056:	46bd      	mov	sp, r7
 8003058:	f85d 7b04 	ldr.w	r7, [sp], #4
 800305c:	4770      	bx	lr
 800305e:	bf00      	nop
 8003060:	40010000 	.word	0x40010000
 8003064:	40000400 	.word	0x40000400
 8003068:	40000800 	.word	0x40000800
 800306c:	40000c00 	.word	0x40000c00
 8003070:	40010400 	.word	0x40010400
 8003074:	40014000 	.word	0x40014000
 8003078:	40001800 	.word	0x40001800

0800307c <HAL_TIM_Base_Start_IT>:
 800307c:	b480      	push	{r7}
 800307e:	b085      	sub	sp, #20
 8003080:	af00      	add	r7, sp, #0
 8003082:	6078      	str	r0, [r7, #4]
 8003084:	687b      	ldr	r3, [r7, #4]
 8003086:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800308a:	b2db      	uxtb	r3, r3
 800308c:	2b01      	cmp	r3, #1
 800308e:	d001      	beq.n	8003094 <HAL_TIM_Base_Start_IT+0x18>
 8003090:	2301      	movs	r3, #1
 8003092:	e04e      	b.n	8003132 <HAL_TIM_Base_Start_IT+0xb6>
 8003094:	687b      	ldr	r3, [r7, #4]
 8003096:	2202      	movs	r2, #2
 8003098:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800309c:	687b      	ldr	r3, [r7, #4]
 800309e:	681b      	ldr	r3, [r3, #0]
 80030a0:	68da      	ldr	r2, [r3, #12]
 80030a2:	687b      	ldr	r3, [r7, #4]
 80030a4:	681b      	ldr	r3, [r3, #0]
 80030a6:	f042 0201 	orr.w	r2, r2, #1
 80030aa:	60da      	str	r2, [r3, #12]
 80030ac:	687b      	ldr	r3, [r7, #4]
 80030ae:	681b      	ldr	r3, [r3, #0]
 80030b0:	4a23      	ldr	r2, [pc, #140]	; (8003140 <HAL_TIM_Base_Start_IT+0xc4>)
 80030b2:	4293      	cmp	r3, r2
 80030b4:	d022      	beq.n	80030fc <HAL_TIM_Base_Start_IT+0x80>
 80030b6:	687b      	ldr	r3, [r7, #4]
 80030b8:	681b      	ldr	r3, [r3, #0]
 80030ba:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80030be:	d01d      	beq.n	80030fc <HAL_TIM_Base_Start_IT+0x80>
 80030c0:	687b      	ldr	r3, [r7, #4]
 80030c2:	681b      	ldr	r3, [r3, #0]
 80030c4:	4a1f      	ldr	r2, [pc, #124]	; (8003144 <HAL_TIM_Base_Start_IT+0xc8>)
 80030c6:	4293      	cmp	r3, r2
 80030c8:	d018      	beq.n	80030fc <HAL_TIM_Base_Start_IT+0x80>
 80030ca:	687b      	ldr	r3, [r7, #4]
 80030cc:	681b      	ldr	r3, [r3, #0]
 80030ce:	4a1e      	ldr	r2, [pc, #120]	; (8003148 <HAL_TIM_Base_Start_IT+0xcc>)
 80030d0:	4293      	cmp	r3, r2
 80030d2:	d013      	beq.n	80030fc <HAL_TIM_Base_Start_IT+0x80>
 80030d4:	687b      	ldr	r3, [r7, #4]
 80030d6:	681b      	ldr	r3, [r3, #0]
 80030d8:	4a1c      	ldr	r2, [pc, #112]	; (800314c <HAL_TIM_Base_Start_IT+0xd0>)
 80030da:	4293      	cmp	r3, r2
 80030dc:	d00e      	beq.n	80030fc <HAL_TIM_Base_Start_IT+0x80>
 80030de:	687b      	ldr	r3, [r7, #4]
 80030e0:	681b      	ldr	r3, [r3, #0]
 80030e2:	4a1b      	ldr	r2, [pc, #108]	; (8003150 <HAL_TIM_Base_Start_IT+0xd4>)
 80030e4:	4293      	cmp	r3, r2
 80030e6:	d009      	beq.n	80030fc <HAL_TIM_Base_Start_IT+0x80>
 80030e8:	687b      	ldr	r3, [r7, #4]
 80030ea:	681b      	ldr	r3, [r3, #0]
 80030ec:	4a19      	ldr	r2, [pc, #100]	; (8003154 <HAL_TIM_Base_Start_IT+0xd8>)
 80030ee:	4293      	cmp	r3, r2
 80030f0:	d004      	beq.n	80030fc <HAL_TIM_Base_Start_IT+0x80>
 80030f2:	687b      	ldr	r3, [r7, #4]
 80030f4:	681b      	ldr	r3, [r3, #0]
 80030f6:	4a18      	ldr	r2, [pc, #96]	; (8003158 <HAL_TIM_Base_Start_IT+0xdc>)
 80030f8:	4293      	cmp	r3, r2
 80030fa:	d111      	bne.n	8003120 <HAL_TIM_Base_Start_IT+0xa4>
 80030fc:	687b      	ldr	r3, [r7, #4]
 80030fe:	681b      	ldr	r3, [r3, #0]
 8003100:	689b      	ldr	r3, [r3, #8]
 8003102:	f003 0307 	and.w	r3, r3, #7
 8003106:	60fb      	str	r3, [r7, #12]
 8003108:	68fb      	ldr	r3, [r7, #12]
 800310a:	2b06      	cmp	r3, #6
 800310c:	d010      	beq.n	8003130 <HAL_TIM_Base_Start_IT+0xb4>
 800310e:	687b      	ldr	r3, [r7, #4]
 8003110:	681b      	ldr	r3, [r3, #0]
 8003112:	681a      	ldr	r2, [r3, #0]
 8003114:	687b      	ldr	r3, [r7, #4]
 8003116:	681b      	ldr	r3, [r3, #0]
 8003118:	f042 0201 	orr.w	r2, r2, #1
 800311c:	601a      	str	r2, [r3, #0]
 800311e:	e007      	b.n	8003130 <HAL_TIM_Base_Start_IT+0xb4>
 8003120:	687b      	ldr	r3, [r7, #4]
 8003122:	681b      	ldr	r3, [r3, #0]
 8003124:	681a      	ldr	r2, [r3, #0]
 8003126:	687b      	ldr	r3, [r7, #4]
 8003128:	681b      	ldr	r3, [r3, #0]
 800312a:	f042 0201 	orr.w	r2, r2, #1
 800312e:	601a      	str	r2, [r3, #0]
 8003130:	2300      	movs	r3, #0
 8003132:	4618      	mov	r0, r3
 8003134:	3714      	adds	r7, #20
 8003136:	46bd      	mov	sp, r7
 8003138:	f85d 7b04 	ldr.w	r7, [sp], #4
 800313c:	4770      	bx	lr
 800313e:	bf00      	nop
 8003140:	40010000 	.word	0x40010000
 8003144:	40000400 	.word	0x40000400
 8003148:	40000800 	.word	0x40000800
 800314c:	40000c00 	.word	0x40000c00
 8003150:	40010400 	.word	0x40010400
 8003154:	40014000 	.word	0x40014000
 8003158:	40001800 	.word	0x40001800

0800315c <HAL_TIM_IRQHandler>:
 800315c:	b580      	push	{r7, lr}
 800315e:	b082      	sub	sp, #8
 8003160:	af00      	add	r7, sp, #0
 8003162:	6078      	str	r0, [r7, #4]
 8003164:	687b      	ldr	r3, [r7, #4]
 8003166:	681b      	ldr	r3, [r3, #0]
 8003168:	691b      	ldr	r3, [r3, #16]
 800316a:	f003 0302 	and.w	r3, r3, #2
 800316e:	2b02      	cmp	r3, #2
 8003170:	d122      	bne.n	80031b8 <HAL_TIM_IRQHandler+0x5c>
 8003172:	687b      	ldr	r3, [r7, #4]
 8003174:	681b      	ldr	r3, [r3, #0]
 8003176:	68db      	ldr	r3, [r3, #12]
 8003178:	f003 0302 	and.w	r3, r3, #2
 800317c:	2b02      	cmp	r3, #2
 800317e:	d11b      	bne.n	80031b8 <HAL_TIM_IRQHandler+0x5c>
 8003180:	687b      	ldr	r3, [r7, #4]
 8003182:	681b      	ldr	r3, [r3, #0]
 8003184:	f06f 0202 	mvn.w	r2, #2
 8003188:	611a      	str	r2, [r3, #16]
 800318a:	687b      	ldr	r3, [r7, #4]
 800318c:	2201      	movs	r2, #1
 800318e:	771a      	strb	r2, [r3, #28]
 8003190:	687b      	ldr	r3, [r7, #4]
 8003192:	681b      	ldr	r3, [r3, #0]
 8003194:	699b      	ldr	r3, [r3, #24]
 8003196:	f003 0303 	and.w	r3, r3, #3
 800319a:	2b00      	cmp	r3, #0
 800319c:	d003      	beq.n	80031a6 <HAL_TIM_IRQHandler+0x4a>
 800319e:	6878      	ldr	r0, [r7, #4]
 80031a0:	f000 f9b5 	bl	800350e <HAL_TIM_IC_CaptureCallback>
 80031a4:	e005      	b.n	80031b2 <HAL_TIM_IRQHandler+0x56>
 80031a6:	6878      	ldr	r0, [r7, #4]
 80031a8:	f000 f9a7 	bl	80034fa <HAL_TIM_OC_DelayElapsedCallback>
 80031ac:	6878      	ldr	r0, [r7, #4]
 80031ae:	f000 f9b8 	bl	8003522 <HAL_TIM_PWM_PulseFinishedCallback>
 80031b2:	687b      	ldr	r3, [r7, #4]
 80031b4:	2200      	movs	r2, #0
 80031b6:	771a      	strb	r2, [r3, #28]
 80031b8:	687b      	ldr	r3, [r7, #4]
 80031ba:	681b      	ldr	r3, [r3, #0]
 80031bc:	691b      	ldr	r3, [r3, #16]
 80031be:	f003 0304 	and.w	r3, r3, #4
 80031c2:	2b04      	cmp	r3, #4
 80031c4:	d122      	bne.n	800320c <HAL_TIM_IRQHandler+0xb0>
 80031c6:	687b      	ldr	r3, [r7, #4]
 80031c8:	681b      	ldr	r3, [r3, #0]
 80031ca:	68db      	ldr	r3, [r3, #12]
 80031cc:	f003 0304 	and.w	r3, r3, #4
 80031d0:	2b04      	cmp	r3, #4
 80031d2:	d11b      	bne.n	800320c <HAL_TIM_IRQHandler+0xb0>
 80031d4:	687b      	ldr	r3, [r7, #4]
 80031d6:	681b      	ldr	r3, [r3, #0]
 80031d8:	f06f 0204 	mvn.w	r2, #4
 80031dc:	611a      	str	r2, [r3, #16]
 80031de:	687b      	ldr	r3, [r7, #4]
 80031e0:	2202      	movs	r2, #2
 80031e2:	771a      	strb	r2, [r3, #28]
 80031e4:	687b      	ldr	r3, [r7, #4]
 80031e6:	681b      	ldr	r3, [r3, #0]
 80031e8:	699b      	ldr	r3, [r3, #24]
 80031ea:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80031ee:	2b00      	cmp	r3, #0
 80031f0:	d003      	beq.n	80031fa <HAL_TIM_IRQHandler+0x9e>
 80031f2:	6878      	ldr	r0, [r7, #4]
 80031f4:	f000 f98b 	bl	800350e <HAL_TIM_IC_CaptureCallback>
 80031f8:	e005      	b.n	8003206 <HAL_TIM_IRQHandler+0xaa>
 80031fa:	6878      	ldr	r0, [r7, #4]
 80031fc:	f000 f97d 	bl	80034fa <HAL_TIM_OC_DelayElapsedCallback>
 8003200:	6878      	ldr	r0, [r7, #4]
 8003202:	f000 f98e 	bl	8003522 <HAL_TIM_PWM_PulseFinishedCallback>
 8003206:	687b      	ldr	r3, [r7, #4]
 8003208:	2200      	movs	r2, #0
 800320a:	771a      	strb	r2, [r3, #28]
 800320c:	687b      	ldr	r3, [r7, #4]
 800320e:	681b      	ldr	r3, [r3, #0]
 8003210:	691b      	ldr	r3, [r3, #16]
 8003212:	f003 0308 	and.w	r3, r3, #8
 8003216:	2b08      	cmp	r3, #8
 8003218:	d122      	bne.n	8003260 <HAL_TIM_IRQHandler+0x104>
 800321a:	687b      	ldr	r3, [r7, #4]
 800321c:	681b      	ldr	r3, [r3, #0]
 800321e:	68db      	ldr	r3, [r3, #12]
 8003220:	f003 0308 	and.w	r3, r3, #8
 8003224:	2b08      	cmp	r3, #8
 8003226:	d11b      	bne.n	8003260 <HAL_TIM_IRQHandler+0x104>
 8003228:	687b      	ldr	r3, [r7, #4]
 800322a:	681b      	ldr	r3, [r3, #0]
 800322c:	f06f 0208 	mvn.w	r2, #8
 8003230:	611a      	str	r2, [r3, #16]
 8003232:	687b      	ldr	r3, [r7, #4]
 8003234:	2204      	movs	r2, #4
 8003236:	771a      	strb	r2, [r3, #28]
 8003238:	687b      	ldr	r3, [r7, #4]
 800323a:	681b      	ldr	r3, [r3, #0]
 800323c:	69db      	ldr	r3, [r3, #28]
 800323e:	f003 0303 	and.w	r3, r3, #3
 8003242:	2b00      	cmp	r3, #0
 8003244:	d003      	beq.n	800324e <HAL_TIM_IRQHandler+0xf2>
 8003246:	6878      	ldr	r0, [r7, #4]
 8003248:	f000 f961 	bl	800350e <HAL_TIM_IC_CaptureCallback>
 800324c:	e005      	b.n	800325a <HAL_TIM_IRQHandler+0xfe>
 800324e:	6878      	ldr	r0, [r7, #4]
 8003250:	f000 f953 	bl	80034fa <HAL_TIM_OC_DelayElapsedCallback>
 8003254:	6878      	ldr	r0, [r7, #4]
 8003256:	f000 f964 	bl	8003522 <HAL_TIM_PWM_PulseFinishedCallback>
 800325a:	687b      	ldr	r3, [r7, #4]
 800325c:	2200      	movs	r2, #0
 800325e:	771a      	strb	r2, [r3, #28]
 8003260:	687b      	ldr	r3, [r7, #4]
 8003262:	681b      	ldr	r3, [r3, #0]
 8003264:	691b      	ldr	r3, [r3, #16]
 8003266:	f003 0310 	and.w	r3, r3, #16
 800326a:	2b10      	cmp	r3, #16
 800326c:	d122      	bne.n	80032b4 <HAL_TIM_IRQHandler+0x158>
 800326e:	687b      	ldr	r3, [r7, #4]
 8003270:	681b      	ldr	r3, [r3, #0]
 8003272:	68db      	ldr	r3, [r3, #12]
 8003274:	f003 0310 	and.w	r3, r3, #16
 8003278:	2b10      	cmp	r3, #16
 800327a:	d11b      	bne.n	80032b4 <HAL_TIM_IRQHandler+0x158>
 800327c:	687b      	ldr	r3, [r7, #4]
 800327e:	681b      	ldr	r3, [r3, #0]
 8003280:	f06f 0210 	mvn.w	r2, #16
 8003284:	611a      	str	r2, [r3, #16]
 8003286:	687b      	ldr	r3, [r7, #4]
 8003288:	2208      	movs	r2, #8
 800328a:	771a      	strb	r2, [r3, #28]
 800328c:	687b      	ldr	r3, [r7, #4]
 800328e:	681b      	ldr	r3, [r3, #0]
 8003290:	69db      	ldr	r3, [r3, #28]
 8003292:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8003296:	2b00      	cmp	r3, #0
 8003298:	d003      	beq.n	80032a2 <HAL_TIM_IRQHandler+0x146>
 800329a:	6878      	ldr	r0, [r7, #4]
 800329c:	f000 f937 	bl	800350e <HAL_TIM_IC_CaptureCallback>
 80032a0:	e005      	b.n	80032ae <HAL_TIM_IRQHandler+0x152>
 80032a2:	6878      	ldr	r0, [r7, #4]
 80032a4:	f000 f929 	bl	80034fa <HAL_TIM_OC_DelayElapsedCallback>
 80032a8:	6878      	ldr	r0, [r7, #4]
 80032aa:	f000 f93a 	bl	8003522 <HAL_TIM_PWM_PulseFinishedCallback>
 80032ae:	687b      	ldr	r3, [r7, #4]
 80032b0:	2200      	movs	r2, #0
 80032b2:	771a      	strb	r2, [r3, #28]
 80032b4:	687b      	ldr	r3, [r7, #4]
 80032b6:	681b      	ldr	r3, [r3, #0]
 80032b8:	691b      	ldr	r3, [r3, #16]
 80032ba:	f003 0301 	and.w	r3, r3, #1
 80032be:	2b01      	cmp	r3, #1
 80032c0:	d10e      	bne.n	80032e0 <HAL_TIM_IRQHandler+0x184>
 80032c2:	687b      	ldr	r3, [r7, #4]
 80032c4:	681b      	ldr	r3, [r3, #0]
 80032c6:	68db      	ldr	r3, [r3, #12]
 80032c8:	f003 0301 	and.w	r3, r3, #1
 80032cc:	2b01      	cmp	r3, #1
 80032ce:	d107      	bne.n	80032e0 <HAL_TIM_IRQHandler+0x184>
 80032d0:	687b      	ldr	r3, [r7, #4]
 80032d2:	681b      	ldr	r3, [r3, #0]
 80032d4:	f06f 0201 	mvn.w	r2, #1
 80032d8:	611a      	str	r2, [r3, #16]
 80032da:	6878      	ldr	r0, [r7, #4]
 80032dc:	f7fd fe70 	bl	8000fc0 <HAL_TIM_PeriodElapsedCallback>
 80032e0:	687b      	ldr	r3, [r7, #4]
 80032e2:	681b      	ldr	r3, [r3, #0]
 80032e4:	691b      	ldr	r3, [r3, #16]
 80032e6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80032ea:	2b80      	cmp	r3, #128	; 0x80
 80032ec:	d10e      	bne.n	800330c <HAL_TIM_IRQHandler+0x1b0>
 80032ee:	687b      	ldr	r3, [r7, #4]
 80032f0:	681b      	ldr	r3, [r3, #0]
 80032f2:	68db      	ldr	r3, [r3, #12]
 80032f4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80032f8:	2b80      	cmp	r3, #128	; 0x80
 80032fa:	d107      	bne.n	800330c <HAL_TIM_IRQHandler+0x1b0>
 80032fc:	687b      	ldr	r3, [r7, #4]
 80032fe:	681b      	ldr	r3, [r3, #0]
 8003300:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8003304:	611a      	str	r2, [r3, #16]
 8003306:	6878      	ldr	r0, [r7, #4]
 8003308:	f000 fae0 	bl	80038cc <HAL_TIMEx_BreakCallback>
 800330c:	687b      	ldr	r3, [r7, #4]
 800330e:	681b      	ldr	r3, [r3, #0]
 8003310:	691b      	ldr	r3, [r3, #16]
 8003312:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003316:	2b40      	cmp	r3, #64	; 0x40
 8003318:	d10e      	bne.n	8003338 <HAL_TIM_IRQHandler+0x1dc>
 800331a:	687b      	ldr	r3, [r7, #4]
 800331c:	681b      	ldr	r3, [r3, #0]
 800331e:	68db      	ldr	r3, [r3, #12]
 8003320:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003324:	2b40      	cmp	r3, #64	; 0x40
 8003326:	d107      	bne.n	8003338 <HAL_TIM_IRQHandler+0x1dc>
 8003328:	687b      	ldr	r3, [r7, #4]
 800332a:	681b      	ldr	r3, [r3, #0]
 800332c:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8003330:	611a      	str	r2, [r3, #16]
 8003332:	6878      	ldr	r0, [r7, #4]
 8003334:	f000 f8ff 	bl	8003536 <HAL_TIM_TriggerCallback>
 8003338:	687b      	ldr	r3, [r7, #4]
 800333a:	681b      	ldr	r3, [r3, #0]
 800333c:	691b      	ldr	r3, [r3, #16]
 800333e:	f003 0320 	and.w	r3, r3, #32
 8003342:	2b20      	cmp	r3, #32
 8003344:	d10e      	bne.n	8003364 <HAL_TIM_IRQHandler+0x208>
 8003346:	687b      	ldr	r3, [r7, #4]
 8003348:	681b      	ldr	r3, [r3, #0]
 800334a:	68db      	ldr	r3, [r3, #12]
 800334c:	f003 0320 	and.w	r3, r3, #32
 8003350:	2b20      	cmp	r3, #32
 8003352:	d107      	bne.n	8003364 <HAL_TIM_IRQHandler+0x208>
 8003354:	687b      	ldr	r3, [r7, #4]
 8003356:	681b      	ldr	r3, [r3, #0]
 8003358:	f06f 0220 	mvn.w	r2, #32
 800335c:	611a      	str	r2, [r3, #16]
 800335e:	6878      	ldr	r0, [r7, #4]
 8003360:	f000 faaa 	bl	80038b8 <HAL_TIMEx_CommutCallback>
 8003364:	bf00      	nop
 8003366:	3708      	adds	r7, #8
 8003368:	46bd      	mov	sp, r7
 800336a:	bd80      	pop	{r7, pc}

0800336c <HAL_TIM_ConfigClockSource>:
 800336c:	b580      	push	{r7, lr}
 800336e:	b084      	sub	sp, #16
 8003370:	af00      	add	r7, sp, #0
 8003372:	6078      	str	r0, [r7, #4]
 8003374:	6039      	str	r1, [r7, #0]
 8003376:	2300      	movs	r3, #0
 8003378:	73fb      	strb	r3, [r7, #15]
 800337a:	687b      	ldr	r3, [r7, #4]
 800337c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003380:	2b01      	cmp	r3, #1
 8003382:	d101      	bne.n	8003388 <HAL_TIM_ConfigClockSource+0x1c>
 8003384:	2302      	movs	r3, #2
 8003386:	e0b4      	b.n	80034f2 <HAL_TIM_ConfigClockSource+0x186>
 8003388:	687b      	ldr	r3, [r7, #4]
 800338a:	2201      	movs	r2, #1
 800338c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003390:	687b      	ldr	r3, [r7, #4]
 8003392:	2202      	movs	r2, #2
 8003394:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003398:	687b      	ldr	r3, [r7, #4]
 800339a:	681b      	ldr	r3, [r3, #0]
 800339c:	689b      	ldr	r3, [r3, #8]
 800339e:	60bb      	str	r3, [r7, #8]
 80033a0:	68bb      	ldr	r3, [r7, #8]
 80033a2:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 80033a6:	60bb      	str	r3, [r7, #8]
 80033a8:	68bb      	ldr	r3, [r7, #8]
 80033aa:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80033ae:	60bb      	str	r3, [r7, #8]
 80033b0:	687b      	ldr	r3, [r7, #4]
 80033b2:	681b      	ldr	r3, [r3, #0]
 80033b4:	68ba      	ldr	r2, [r7, #8]
 80033b6:	609a      	str	r2, [r3, #8]
 80033b8:	683b      	ldr	r3, [r7, #0]
 80033ba:	681b      	ldr	r3, [r3, #0]
 80033bc:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80033c0:	d03e      	beq.n	8003440 <HAL_TIM_ConfigClockSource+0xd4>
 80033c2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80033c6:	f200 8087 	bhi.w	80034d8 <HAL_TIM_ConfigClockSource+0x16c>
 80033ca:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80033ce:	f000 8086 	beq.w	80034de <HAL_TIM_ConfigClockSource+0x172>
 80033d2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80033d6:	d87f      	bhi.n	80034d8 <HAL_TIM_ConfigClockSource+0x16c>
 80033d8:	2b70      	cmp	r3, #112	; 0x70
 80033da:	d01a      	beq.n	8003412 <HAL_TIM_ConfigClockSource+0xa6>
 80033dc:	2b70      	cmp	r3, #112	; 0x70
 80033de:	d87b      	bhi.n	80034d8 <HAL_TIM_ConfigClockSource+0x16c>
 80033e0:	2b60      	cmp	r3, #96	; 0x60
 80033e2:	d050      	beq.n	8003486 <HAL_TIM_ConfigClockSource+0x11a>
 80033e4:	2b60      	cmp	r3, #96	; 0x60
 80033e6:	d877      	bhi.n	80034d8 <HAL_TIM_ConfigClockSource+0x16c>
 80033e8:	2b50      	cmp	r3, #80	; 0x50
 80033ea:	d03c      	beq.n	8003466 <HAL_TIM_ConfigClockSource+0xfa>
 80033ec:	2b50      	cmp	r3, #80	; 0x50
 80033ee:	d873      	bhi.n	80034d8 <HAL_TIM_ConfigClockSource+0x16c>
 80033f0:	2b40      	cmp	r3, #64	; 0x40
 80033f2:	d058      	beq.n	80034a6 <HAL_TIM_ConfigClockSource+0x13a>
 80033f4:	2b40      	cmp	r3, #64	; 0x40
 80033f6:	d86f      	bhi.n	80034d8 <HAL_TIM_ConfigClockSource+0x16c>
 80033f8:	2b30      	cmp	r3, #48	; 0x30
 80033fa:	d064      	beq.n	80034c6 <HAL_TIM_ConfigClockSource+0x15a>
 80033fc:	2b30      	cmp	r3, #48	; 0x30
 80033fe:	d86b      	bhi.n	80034d8 <HAL_TIM_ConfigClockSource+0x16c>
 8003400:	2b20      	cmp	r3, #32
 8003402:	d060      	beq.n	80034c6 <HAL_TIM_ConfigClockSource+0x15a>
 8003404:	2b20      	cmp	r3, #32
 8003406:	d867      	bhi.n	80034d8 <HAL_TIM_ConfigClockSource+0x16c>
 8003408:	2b00      	cmp	r3, #0
 800340a:	d05c      	beq.n	80034c6 <HAL_TIM_ConfigClockSource+0x15a>
 800340c:	2b10      	cmp	r3, #16
 800340e:	d05a      	beq.n	80034c6 <HAL_TIM_ConfigClockSource+0x15a>
 8003410:	e062      	b.n	80034d8 <HAL_TIM_ConfigClockSource+0x16c>
 8003412:	687b      	ldr	r3, [r7, #4]
 8003414:	6818      	ldr	r0, [r3, #0]
 8003416:	683b      	ldr	r3, [r7, #0]
 8003418:	6899      	ldr	r1, [r3, #8]
 800341a:	683b      	ldr	r3, [r7, #0]
 800341c:	685a      	ldr	r2, [r3, #4]
 800341e:	683b      	ldr	r3, [r7, #0]
 8003420:	68db      	ldr	r3, [r3, #12]
 8003422:	f000 f9ad 	bl	8003780 <TIM_ETR_SetConfig>
 8003426:	687b      	ldr	r3, [r7, #4]
 8003428:	681b      	ldr	r3, [r3, #0]
 800342a:	689b      	ldr	r3, [r3, #8]
 800342c:	60bb      	str	r3, [r7, #8]
 800342e:	68bb      	ldr	r3, [r7, #8]
 8003430:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8003434:	60bb      	str	r3, [r7, #8]
 8003436:	687b      	ldr	r3, [r7, #4]
 8003438:	681b      	ldr	r3, [r3, #0]
 800343a:	68ba      	ldr	r2, [r7, #8]
 800343c:	609a      	str	r2, [r3, #8]
 800343e:	e04f      	b.n	80034e0 <HAL_TIM_ConfigClockSource+0x174>
 8003440:	687b      	ldr	r3, [r7, #4]
 8003442:	6818      	ldr	r0, [r3, #0]
 8003444:	683b      	ldr	r3, [r7, #0]
 8003446:	6899      	ldr	r1, [r3, #8]
 8003448:	683b      	ldr	r3, [r7, #0]
 800344a:	685a      	ldr	r2, [r3, #4]
 800344c:	683b      	ldr	r3, [r7, #0]
 800344e:	68db      	ldr	r3, [r3, #12]
 8003450:	f000 f996 	bl	8003780 <TIM_ETR_SetConfig>
 8003454:	687b      	ldr	r3, [r7, #4]
 8003456:	681b      	ldr	r3, [r3, #0]
 8003458:	689a      	ldr	r2, [r3, #8]
 800345a:	687b      	ldr	r3, [r7, #4]
 800345c:	681b      	ldr	r3, [r3, #0]
 800345e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003462:	609a      	str	r2, [r3, #8]
 8003464:	e03c      	b.n	80034e0 <HAL_TIM_ConfigClockSource+0x174>
 8003466:	687b      	ldr	r3, [r7, #4]
 8003468:	6818      	ldr	r0, [r3, #0]
 800346a:	683b      	ldr	r3, [r7, #0]
 800346c:	6859      	ldr	r1, [r3, #4]
 800346e:	683b      	ldr	r3, [r7, #0]
 8003470:	68db      	ldr	r3, [r3, #12]
 8003472:	461a      	mov	r2, r3
 8003474:	f000 f90a 	bl	800368c <TIM_TI1_ConfigInputStage>
 8003478:	687b      	ldr	r3, [r7, #4]
 800347a:	681b      	ldr	r3, [r3, #0]
 800347c:	2150      	movs	r1, #80	; 0x50
 800347e:	4618      	mov	r0, r3
 8003480:	f000 f963 	bl	800374a <TIM_ITRx_SetConfig>
 8003484:	e02c      	b.n	80034e0 <HAL_TIM_ConfigClockSource+0x174>
 8003486:	687b      	ldr	r3, [r7, #4]
 8003488:	6818      	ldr	r0, [r3, #0]
 800348a:	683b      	ldr	r3, [r7, #0]
 800348c:	6859      	ldr	r1, [r3, #4]
 800348e:	683b      	ldr	r3, [r7, #0]
 8003490:	68db      	ldr	r3, [r3, #12]
 8003492:	461a      	mov	r2, r3
 8003494:	f000 f929 	bl	80036ea <TIM_TI2_ConfigInputStage>
 8003498:	687b      	ldr	r3, [r7, #4]
 800349a:	681b      	ldr	r3, [r3, #0]
 800349c:	2160      	movs	r1, #96	; 0x60
 800349e:	4618      	mov	r0, r3
 80034a0:	f000 f953 	bl	800374a <TIM_ITRx_SetConfig>
 80034a4:	e01c      	b.n	80034e0 <HAL_TIM_ConfigClockSource+0x174>
 80034a6:	687b      	ldr	r3, [r7, #4]
 80034a8:	6818      	ldr	r0, [r3, #0]
 80034aa:	683b      	ldr	r3, [r7, #0]
 80034ac:	6859      	ldr	r1, [r3, #4]
 80034ae:	683b      	ldr	r3, [r7, #0]
 80034b0:	68db      	ldr	r3, [r3, #12]
 80034b2:	461a      	mov	r2, r3
 80034b4:	f000 f8ea 	bl	800368c <TIM_TI1_ConfigInputStage>
 80034b8:	687b      	ldr	r3, [r7, #4]
 80034ba:	681b      	ldr	r3, [r3, #0]
 80034bc:	2140      	movs	r1, #64	; 0x40
 80034be:	4618      	mov	r0, r3
 80034c0:	f000 f943 	bl	800374a <TIM_ITRx_SetConfig>
 80034c4:	e00c      	b.n	80034e0 <HAL_TIM_ConfigClockSource+0x174>
 80034c6:	687b      	ldr	r3, [r7, #4]
 80034c8:	681a      	ldr	r2, [r3, #0]
 80034ca:	683b      	ldr	r3, [r7, #0]
 80034cc:	681b      	ldr	r3, [r3, #0]
 80034ce:	4619      	mov	r1, r3
 80034d0:	4610      	mov	r0, r2
 80034d2:	f000 f93a 	bl	800374a <TIM_ITRx_SetConfig>
 80034d6:	e003      	b.n	80034e0 <HAL_TIM_ConfigClockSource+0x174>
 80034d8:	2301      	movs	r3, #1
 80034da:	73fb      	strb	r3, [r7, #15]
 80034dc:	e000      	b.n	80034e0 <HAL_TIM_ConfigClockSource+0x174>
 80034de:	bf00      	nop
 80034e0:	687b      	ldr	r3, [r7, #4]
 80034e2:	2201      	movs	r2, #1
 80034e4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80034e8:	687b      	ldr	r3, [r7, #4]
 80034ea:	2200      	movs	r2, #0
 80034ec:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80034f0:	7bfb      	ldrb	r3, [r7, #15]
 80034f2:	4618      	mov	r0, r3
 80034f4:	3710      	adds	r7, #16
 80034f6:	46bd      	mov	sp, r7
 80034f8:	bd80      	pop	{r7, pc}

080034fa <HAL_TIM_OC_DelayElapsedCallback>:
 80034fa:	b480      	push	{r7}
 80034fc:	b083      	sub	sp, #12
 80034fe:	af00      	add	r7, sp, #0
 8003500:	6078      	str	r0, [r7, #4]
 8003502:	bf00      	nop
 8003504:	370c      	adds	r7, #12
 8003506:	46bd      	mov	sp, r7
 8003508:	f85d 7b04 	ldr.w	r7, [sp], #4
 800350c:	4770      	bx	lr

0800350e <HAL_TIM_IC_CaptureCallback>:
 800350e:	b480      	push	{r7}
 8003510:	b083      	sub	sp, #12
 8003512:	af00      	add	r7, sp, #0
 8003514:	6078      	str	r0, [r7, #4]
 8003516:	bf00      	nop
 8003518:	370c      	adds	r7, #12
 800351a:	46bd      	mov	sp, r7
 800351c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003520:	4770      	bx	lr

08003522 <HAL_TIM_PWM_PulseFinishedCallback>:
 8003522:	b480      	push	{r7}
 8003524:	b083      	sub	sp, #12
 8003526:	af00      	add	r7, sp, #0
 8003528:	6078      	str	r0, [r7, #4]
 800352a:	bf00      	nop
 800352c:	370c      	adds	r7, #12
 800352e:	46bd      	mov	sp, r7
 8003530:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003534:	4770      	bx	lr

08003536 <HAL_TIM_TriggerCallback>:
 8003536:	b480      	push	{r7}
 8003538:	b083      	sub	sp, #12
 800353a:	af00      	add	r7, sp, #0
 800353c:	6078      	str	r0, [r7, #4]
 800353e:	bf00      	nop
 8003540:	370c      	adds	r7, #12
 8003542:	46bd      	mov	sp, r7
 8003544:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003548:	4770      	bx	lr
	...

0800354c <TIM_Base_SetConfig>:
 800354c:	b480      	push	{r7}
 800354e:	b085      	sub	sp, #20
 8003550:	af00      	add	r7, sp, #0
 8003552:	6078      	str	r0, [r7, #4]
 8003554:	6039      	str	r1, [r7, #0]
 8003556:	687b      	ldr	r3, [r7, #4]
 8003558:	681b      	ldr	r3, [r3, #0]
 800355a:	60fb      	str	r3, [r7, #12]
 800355c:	687b      	ldr	r3, [r7, #4]
 800355e:	4a40      	ldr	r2, [pc, #256]	; (8003660 <TIM_Base_SetConfig+0x114>)
 8003560:	4293      	cmp	r3, r2
 8003562:	d013      	beq.n	800358c <TIM_Base_SetConfig+0x40>
 8003564:	687b      	ldr	r3, [r7, #4]
 8003566:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800356a:	d00f      	beq.n	800358c <TIM_Base_SetConfig+0x40>
 800356c:	687b      	ldr	r3, [r7, #4]
 800356e:	4a3d      	ldr	r2, [pc, #244]	; (8003664 <TIM_Base_SetConfig+0x118>)
 8003570:	4293      	cmp	r3, r2
 8003572:	d00b      	beq.n	800358c <TIM_Base_SetConfig+0x40>
 8003574:	687b      	ldr	r3, [r7, #4]
 8003576:	4a3c      	ldr	r2, [pc, #240]	; (8003668 <TIM_Base_SetConfig+0x11c>)
 8003578:	4293      	cmp	r3, r2
 800357a:	d007      	beq.n	800358c <TIM_Base_SetConfig+0x40>
 800357c:	687b      	ldr	r3, [r7, #4]
 800357e:	4a3b      	ldr	r2, [pc, #236]	; (800366c <TIM_Base_SetConfig+0x120>)
 8003580:	4293      	cmp	r3, r2
 8003582:	d003      	beq.n	800358c <TIM_Base_SetConfig+0x40>
 8003584:	687b      	ldr	r3, [r7, #4]
 8003586:	4a3a      	ldr	r2, [pc, #232]	; (8003670 <TIM_Base_SetConfig+0x124>)
 8003588:	4293      	cmp	r3, r2
 800358a:	d108      	bne.n	800359e <TIM_Base_SetConfig+0x52>
 800358c:	68fb      	ldr	r3, [r7, #12]
 800358e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003592:	60fb      	str	r3, [r7, #12]
 8003594:	683b      	ldr	r3, [r7, #0]
 8003596:	685b      	ldr	r3, [r3, #4]
 8003598:	68fa      	ldr	r2, [r7, #12]
 800359a:	4313      	orrs	r3, r2
 800359c:	60fb      	str	r3, [r7, #12]
 800359e:	687b      	ldr	r3, [r7, #4]
 80035a0:	4a2f      	ldr	r2, [pc, #188]	; (8003660 <TIM_Base_SetConfig+0x114>)
 80035a2:	4293      	cmp	r3, r2
 80035a4:	d02b      	beq.n	80035fe <TIM_Base_SetConfig+0xb2>
 80035a6:	687b      	ldr	r3, [r7, #4]
 80035a8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80035ac:	d027      	beq.n	80035fe <TIM_Base_SetConfig+0xb2>
 80035ae:	687b      	ldr	r3, [r7, #4]
 80035b0:	4a2c      	ldr	r2, [pc, #176]	; (8003664 <TIM_Base_SetConfig+0x118>)
 80035b2:	4293      	cmp	r3, r2
 80035b4:	d023      	beq.n	80035fe <TIM_Base_SetConfig+0xb2>
 80035b6:	687b      	ldr	r3, [r7, #4]
 80035b8:	4a2b      	ldr	r2, [pc, #172]	; (8003668 <TIM_Base_SetConfig+0x11c>)
 80035ba:	4293      	cmp	r3, r2
 80035bc:	d01f      	beq.n	80035fe <TIM_Base_SetConfig+0xb2>
 80035be:	687b      	ldr	r3, [r7, #4]
 80035c0:	4a2a      	ldr	r2, [pc, #168]	; (800366c <TIM_Base_SetConfig+0x120>)
 80035c2:	4293      	cmp	r3, r2
 80035c4:	d01b      	beq.n	80035fe <TIM_Base_SetConfig+0xb2>
 80035c6:	687b      	ldr	r3, [r7, #4]
 80035c8:	4a29      	ldr	r2, [pc, #164]	; (8003670 <TIM_Base_SetConfig+0x124>)
 80035ca:	4293      	cmp	r3, r2
 80035cc:	d017      	beq.n	80035fe <TIM_Base_SetConfig+0xb2>
 80035ce:	687b      	ldr	r3, [r7, #4]
 80035d0:	4a28      	ldr	r2, [pc, #160]	; (8003674 <TIM_Base_SetConfig+0x128>)
 80035d2:	4293      	cmp	r3, r2
 80035d4:	d013      	beq.n	80035fe <TIM_Base_SetConfig+0xb2>
 80035d6:	687b      	ldr	r3, [r7, #4]
 80035d8:	4a27      	ldr	r2, [pc, #156]	; (8003678 <TIM_Base_SetConfig+0x12c>)
 80035da:	4293      	cmp	r3, r2
 80035dc:	d00f      	beq.n	80035fe <TIM_Base_SetConfig+0xb2>
 80035de:	687b      	ldr	r3, [r7, #4]
 80035e0:	4a26      	ldr	r2, [pc, #152]	; (800367c <TIM_Base_SetConfig+0x130>)
 80035e2:	4293      	cmp	r3, r2
 80035e4:	d00b      	beq.n	80035fe <TIM_Base_SetConfig+0xb2>
 80035e6:	687b      	ldr	r3, [r7, #4]
 80035e8:	4a25      	ldr	r2, [pc, #148]	; (8003680 <TIM_Base_SetConfig+0x134>)
 80035ea:	4293      	cmp	r3, r2
 80035ec:	d007      	beq.n	80035fe <TIM_Base_SetConfig+0xb2>
 80035ee:	687b      	ldr	r3, [r7, #4]
 80035f0:	4a24      	ldr	r2, [pc, #144]	; (8003684 <TIM_Base_SetConfig+0x138>)
 80035f2:	4293      	cmp	r3, r2
 80035f4:	d003      	beq.n	80035fe <TIM_Base_SetConfig+0xb2>
 80035f6:	687b      	ldr	r3, [r7, #4]
 80035f8:	4a23      	ldr	r2, [pc, #140]	; (8003688 <TIM_Base_SetConfig+0x13c>)
 80035fa:	4293      	cmp	r3, r2
 80035fc:	d108      	bne.n	8003610 <TIM_Base_SetConfig+0xc4>
 80035fe:	68fb      	ldr	r3, [r7, #12]
 8003600:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003604:	60fb      	str	r3, [r7, #12]
 8003606:	683b      	ldr	r3, [r7, #0]
 8003608:	68db      	ldr	r3, [r3, #12]
 800360a:	68fa      	ldr	r2, [r7, #12]
 800360c:	4313      	orrs	r3, r2
 800360e:	60fb      	str	r3, [r7, #12]
 8003610:	68fb      	ldr	r3, [r7, #12]
 8003612:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8003616:	683b      	ldr	r3, [r7, #0]
 8003618:	695b      	ldr	r3, [r3, #20]
 800361a:	4313      	orrs	r3, r2
 800361c:	60fb      	str	r3, [r7, #12]
 800361e:	687b      	ldr	r3, [r7, #4]
 8003620:	68fa      	ldr	r2, [r7, #12]
 8003622:	601a      	str	r2, [r3, #0]
 8003624:	683b      	ldr	r3, [r7, #0]
 8003626:	689a      	ldr	r2, [r3, #8]
 8003628:	687b      	ldr	r3, [r7, #4]
 800362a:	62da      	str	r2, [r3, #44]	; 0x2c
 800362c:	683b      	ldr	r3, [r7, #0]
 800362e:	681a      	ldr	r2, [r3, #0]
 8003630:	687b      	ldr	r3, [r7, #4]
 8003632:	629a      	str	r2, [r3, #40]	; 0x28
 8003634:	687b      	ldr	r3, [r7, #4]
 8003636:	4a0a      	ldr	r2, [pc, #40]	; (8003660 <TIM_Base_SetConfig+0x114>)
 8003638:	4293      	cmp	r3, r2
 800363a:	d003      	beq.n	8003644 <TIM_Base_SetConfig+0xf8>
 800363c:	687b      	ldr	r3, [r7, #4]
 800363e:	4a0c      	ldr	r2, [pc, #48]	; (8003670 <TIM_Base_SetConfig+0x124>)
 8003640:	4293      	cmp	r3, r2
 8003642:	d103      	bne.n	800364c <TIM_Base_SetConfig+0x100>
 8003644:	683b      	ldr	r3, [r7, #0]
 8003646:	691a      	ldr	r2, [r3, #16]
 8003648:	687b      	ldr	r3, [r7, #4]
 800364a:	631a      	str	r2, [r3, #48]	; 0x30
 800364c:	687b      	ldr	r3, [r7, #4]
 800364e:	2201      	movs	r2, #1
 8003650:	615a      	str	r2, [r3, #20]
 8003652:	bf00      	nop
 8003654:	3714      	adds	r7, #20
 8003656:	46bd      	mov	sp, r7
 8003658:	f85d 7b04 	ldr.w	r7, [sp], #4
 800365c:	4770      	bx	lr
 800365e:	bf00      	nop
 8003660:	40010000 	.word	0x40010000
 8003664:	40000400 	.word	0x40000400
 8003668:	40000800 	.word	0x40000800
 800366c:	40000c00 	.word	0x40000c00
 8003670:	40010400 	.word	0x40010400
 8003674:	40014000 	.word	0x40014000
 8003678:	40014400 	.word	0x40014400
 800367c:	40014800 	.word	0x40014800
 8003680:	40001800 	.word	0x40001800
 8003684:	40001c00 	.word	0x40001c00
 8003688:	40002000 	.word	0x40002000

0800368c <TIM_TI1_ConfigInputStage>:
 800368c:	b480      	push	{r7}
 800368e:	b087      	sub	sp, #28
 8003690:	af00      	add	r7, sp, #0
 8003692:	60f8      	str	r0, [r7, #12]
 8003694:	60b9      	str	r1, [r7, #8]
 8003696:	607a      	str	r2, [r7, #4]
 8003698:	68fb      	ldr	r3, [r7, #12]
 800369a:	6a1b      	ldr	r3, [r3, #32]
 800369c:	617b      	str	r3, [r7, #20]
 800369e:	68fb      	ldr	r3, [r7, #12]
 80036a0:	6a1b      	ldr	r3, [r3, #32]
 80036a2:	f023 0201 	bic.w	r2, r3, #1
 80036a6:	68fb      	ldr	r3, [r7, #12]
 80036a8:	621a      	str	r2, [r3, #32]
 80036aa:	68fb      	ldr	r3, [r7, #12]
 80036ac:	699b      	ldr	r3, [r3, #24]
 80036ae:	613b      	str	r3, [r7, #16]
 80036b0:	693b      	ldr	r3, [r7, #16]
 80036b2:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80036b6:	613b      	str	r3, [r7, #16]
 80036b8:	687b      	ldr	r3, [r7, #4]
 80036ba:	011b      	lsls	r3, r3, #4
 80036bc:	693a      	ldr	r2, [r7, #16]
 80036be:	4313      	orrs	r3, r2
 80036c0:	613b      	str	r3, [r7, #16]
 80036c2:	697b      	ldr	r3, [r7, #20]
 80036c4:	f023 030a 	bic.w	r3, r3, #10
 80036c8:	617b      	str	r3, [r7, #20]
 80036ca:	697a      	ldr	r2, [r7, #20]
 80036cc:	68bb      	ldr	r3, [r7, #8]
 80036ce:	4313      	orrs	r3, r2
 80036d0:	617b      	str	r3, [r7, #20]
 80036d2:	68fb      	ldr	r3, [r7, #12]
 80036d4:	693a      	ldr	r2, [r7, #16]
 80036d6:	619a      	str	r2, [r3, #24]
 80036d8:	68fb      	ldr	r3, [r7, #12]
 80036da:	697a      	ldr	r2, [r7, #20]
 80036dc:	621a      	str	r2, [r3, #32]
 80036de:	bf00      	nop
 80036e0:	371c      	adds	r7, #28
 80036e2:	46bd      	mov	sp, r7
 80036e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036e8:	4770      	bx	lr

080036ea <TIM_TI2_ConfigInputStage>:
 80036ea:	b480      	push	{r7}
 80036ec:	b087      	sub	sp, #28
 80036ee:	af00      	add	r7, sp, #0
 80036f0:	60f8      	str	r0, [r7, #12]
 80036f2:	60b9      	str	r1, [r7, #8]
 80036f4:	607a      	str	r2, [r7, #4]
 80036f6:	68fb      	ldr	r3, [r7, #12]
 80036f8:	6a1b      	ldr	r3, [r3, #32]
 80036fa:	f023 0210 	bic.w	r2, r3, #16
 80036fe:	68fb      	ldr	r3, [r7, #12]
 8003700:	621a      	str	r2, [r3, #32]
 8003702:	68fb      	ldr	r3, [r7, #12]
 8003704:	699b      	ldr	r3, [r3, #24]
 8003706:	617b      	str	r3, [r7, #20]
 8003708:	68fb      	ldr	r3, [r7, #12]
 800370a:	6a1b      	ldr	r3, [r3, #32]
 800370c:	613b      	str	r3, [r7, #16]
 800370e:	697b      	ldr	r3, [r7, #20]
 8003710:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8003714:	617b      	str	r3, [r7, #20]
 8003716:	687b      	ldr	r3, [r7, #4]
 8003718:	031b      	lsls	r3, r3, #12
 800371a:	697a      	ldr	r2, [r7, #20]
 800371c:	4313      	orrs	r3, r2
 800371e:	617b      	str	r3, [r7, #20]
 8003720:	693b      	ldr	r3, [r7, #16]
 8003722:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8003726:	613b      	str	r3, [r7, #16]
 8003728:	68bb      	ldr	r3, [r7, #8]
 800372a:	011b      	lsls	r3, r3, #4
 800372c:	693a      	ldr	r2, [r7, #16]
 800372e:	4313      	orrs	r3, r2
 8003730:	613b      	str	r3, [r7, #16]
 8003732:	68fb      	ldr	r3, [r7, #12]
 8003734:	697a      	ldr	r2, [r7, #20]
 8003736:	619a      	str	r2, [r3, #24]
 8003738:	68fb      	ldr	r3, [r7, #12]
 800373a:	693a      	ldr	r2, [r7, #16]
 800373c:	621a      	str	r2, [r3, #32]
 800373e:	bf00      	nop
 8003740:	371c      	adds	r7, #28
 8003742:	46bd      	mov	sp, r7
 8003744:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003748:	4770      	bx	lr

0800374a <TIM_ITRx_SetConfig>:
 800374a:	b480      	push	{r7}
 800374c:	b085      	sub	sp, #20
 800374e:	af00      	add	r7, sp, #0
 8003750:	6078      	str	r0, [r7, #4]
 8003752:	6039      	str	r1, [r7, #0]
 8003754:	687b      	ldr	r3, [r7, #4]
 8003756:	689b      	ldr	r3, [r3, #8]
 8003758:	60fb      	str	r3, [r7, #12]
 800375a:	68fb      	ldr	r3, [r7, #12]
 800375c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003760:	60fb      	str	r3, [r7, #12]
 8003762:	683a      	ldr	r2, [r7, #0]
 8003764:	68fb      	ldr	r3, [r7, #12]
 8003766:	4313      	orrs	r3, r2
 8003768:	f043 0307 	orr.w	r3, r3, #7
 800376c:	60fb      	str	r3, [r7, #12]
 800376e:	687b      	ldr	r3, [r7, #4]
 8003770:	68fa      	ldr	r2, [r7, #12]
 8003772:	609a      	str	r2, [r3, #8]
 8003774:	bf00      	nop
 8003776:	3714      	adds	r7, #20
 8003778:	46bd      	mov	sp, r7
 800377a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800377e:	4770      	bx	lr

08003780 <TIM_ETR_SetConfig>:
 8003780:	b480      	push	{r7}
 8003782:	b087      	sub	sp, #28
 8003784:	af00      	add	r7, sp, #0
 8003786:	60f8      	str	r0, [r7, #12]
 8003788:	60b9      	str	r1, [r7, #8]
 800378a:	607a      	str	r2, [r7, #4]
 800378c:	603b      	str	r3, [r7, #0]
 800378e:	68fb      	ldr	r3, [r7, #12]
 8003790:	689b      	ldr	r3, [r3, #8]
 8003792:	617b      	str	r3, [r7, #20]
 8003794:	697b      	ldr	r3, [r7, #20]
 8003796:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800379a:	617b      	str	r3, [r7, #20]
 800379c:	683b      	ldr	r3, [r7, #0]
 800379e:	021a      	lsls	r2, r3, #8
 80037a0:	687b      	ldr	r3, [r7, #4]
 80037a2:	431a      	orrs	r2, r3
 80037a4:	68bb      	ldr	r3, [r7, #8]
 80037a6:	4313      	orrs	r3, r2
 80037a8:	697a      	ldr	r2, [r7, #20]
 80037aa:	4313      	orrs	r3, r2
 80037ac:	617b      	str	r3, [r7, #20]
 80037ae:	68fb      	ldr	r3, [r7, #12]
 80037b0:	697a      	ldr	r2, [r7, #20]
 80037b2:	609a      	str	r2, [r3, #8]
 80037b4:	bf00      	nop
 80037b6:	371c      	adds	r7, #28
 80037b8:	46bd      	mov	sp, r7
 80037ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037be:	4770      	bx	lr

080037c0 <HAL_TIMEx_MasterConfigSynchronization>:
 80037c0:	b480      	push	{r7}
 80037c2:	b085      	sub	sp, #20
 80037c4:	af00      	add	r7, sp, #0
 80037c6:	6078      	str	r0, [r7, #4]
 80037c8:	6039      	str	r1, [r7, #0]
 80037ca:	687b      	ldr	r3, [r7, #4]
 80037cc:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80037d0:	2b01      	cmp	r3, #1
 80037d2:	d101      	bne.n	80037d8 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80037d4:	2302      	movs	r3, #2
 80037d6:	e05a      	b.n	800388e <HAL_TIMEx_MasterConfigSynchronization+0xce>
 80037d8:	687b      	ldr	r3, [r7, #4]
 80037da:	2201      	movs	r2, #1
 80037dc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80037e0:	687b      	ldr	r3, [r7, #4]
 80037e2:	2202      	movs	r2, #2
 80037e4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80037e8:	687b      	ldr	r3, [r7, #4]
 80037ea:	681b      	ldr	r3, [r3, #0]
 80037ec:	685b      	ldr	r3, [r3, #4]
 80037ee:	60fb      	str	r3, [r7, #12]
 80037f0:	687b      	ldr	r3, [r7, #4]
 80037f2:	681b      	ldr	r3, [r3, #0]
 80037f4:	689b      	ldr	r3, [r3, #8]
 80037f6:	60bb      	str	r3, [r7, #8]
 80037f8:	68fb      	ldr	r3, [r7, #12]
 80037fa:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80037fe:	60fb      	str	r3, [r7, #12]
 8003800:	683b      	ldr	r3, [r7, #0]
 8003802:	681b      	ldr	r3, [r3, #0]
 8003804:	68fa      	ldr	r2, [r7, #12]
 8003806:	4313      	orrs	r3, r2
 8003808:	60fb      	str	r3, [r7, #12]
 800380a:	687b      	ldr	r3, [r7, #4]
 800380c:	681b      	ldr	r3, [r3, #0]
 800380e:	68fa      	ldr	r2, [r7, #12]
 8003810:	605a      	str	r2, [r3, #4]
 8003812:	687b      	ldr	r3, [r7, #4]
 8003814:	681b      	ldr	r3, [r3, #0]
 8003816:	4a21      	ldr	r2, [pc, #132]	; (800389c <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8003818:	4293      	cmp	r3, r2
 800381a:	d022      	beq.n	8003862 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800381c:	687b      	ldr	r3, [r7, #4]
 800381e:	681b      	ldr	r3, [r3, #0]
 8003820:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003824:	d01d      	beq.n	8003862 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8003826:	687b      	ldr	r3, [r7, #4]
 8003828:	681b      	ldr	r3, [r3, #0]
 800382a:	4a1d      	ldr	r2, [pc, #116]	; (80038a0 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 800382c:	4293      	cmp	r3, r2
 800382e:	d018      	beq.n	8003862 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8003830:	687b      	ldr	r3, [r7, #4]
 8003832:	681b      	ldr	r3, [r3, #0]
 8003834:	4a1b      	ldr	r2, [pc, #108]	; (80038a4 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8003836:	4293      	cmp	r3, r2
 8003838:	d013      	beq.n	8003862 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800383a:	687b      	ldr	r3, [r7, #4]
 800383c:	681b      	ldr	r3, [r3, #0]
 800383e:	4a1a      	ldr	r2, [pc, #104]	; (80038a8 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8003840:	4293      	cmp	r3, r2
 8003842:	d00e      	beq.n	8003862 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8003844:	687b      	ldr	r3, [r7, #4]
 8003846:	681b      	ldr	r3, [r3, #0]
 8003848:	4a18      	ldr	r2, [pc, #96]	; (80038ac <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 800384a:	4293      	cmp	r3, r2
 800384c:	d009      	beq.n	8003862 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800384e:	687b      	ldr	r3, [r7, #4]
 8003850:	681b      	ldr	r3, [r3, #0]
 8003852:	4a17      	ldr	r2, [pc, #92]	; (80038b0 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8003854:	4293      	cmp	r3, r2
 8003856:	d004      	beq.n	8003862 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8003858:	687b      	ldr	r3, [r7, #4]
 800385a:	681b      	ldr	r3, [r3, #0]
 800385c:	4a15      	ldr	r2, [pc, #84]	; (80038b4 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 800385e:	4293      	cmp	r3, r2
 8003860:	d10c      	bne.n	800387c <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 8003862:	68bb      	ldr	r3, [r7, #8]
 8003864:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8003868:	60bb      	str	r3, [r7, #8]
 800386a:	683b      	ldr	r3, [r7, #0]
 800386c:	685b      	ldr	r3, [r3, #4]
 800386e:	68ba      	ldr	r2, [r7, #8]
 8003870:	4313      	orrs	r3, r2
 8003872:	60bb      	str	r3, [r7, #8]
 8003874:	687b      	ldr	r3, [r7, #4]
 8003876:	681b      	ldr	r3, [r3, #0]
 8003878:	68ba      	ldr	r2, [r7, #8]
 800387a:	609a      	str	r2, [r3, #8]
 800387c:	687b      	ldr	r3, [r7, #4]
 800387e:	2201      	movs	r2, #1
 8003880:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003884:	687b      	ldr	r3, [r7, #4]
 8003886:	2200      	movs	r2, #0
 8003888:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800388c:	2300      	movs	r3, #0
 800388e:	4618      	mov	r0, r3
 8003890:	3714      	adds	r7, #20
 8003892:	46bd      	mov	sp, r7
 8003894:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003898:	4770      	bx	lr
 800389a:	bf00      	nop
 800389c:	40010000 	.word	0x40010000
 80038a0:	40000400 	.word	0x40000400
 80038a4:	40000800 	.word	0x40000800
 80038a8:	40000c00 	.word	0x40000c00
 80038ac:	40010400 	.word	0x40010400
 80038b0:	40014000 	.word	0x40014000
 80038b4:	40001800 	.word	0x40001800

080038b8 <HAL_TIMEx_CommutCallback>:
 80038b8:	b480      	push	{r7}
 80038ba:	b083      	sub	sp, #12
 80038bc:	af00      	add	r7, sp, #0
 80038be:	6078      	str	r0, [r7, #4]
 80038c0:	bf00      	nop
 80038c2:	370c      	adds	r7, #12
 80038c4:	46bd      	mov	sp, r7
 80038c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038ca:	4770      	bx	lr

080038cc <HAL_TIMEx_BreakCallback>:
 80038cc:	b480      	push	{r7}
 80038ce:	b083      	sub	sp, #12
 80038d0:	af00      	add	r7, sp, #0
 80038d2:	6078      	str	r0, [r7, #4]
 80038d4:	bf00      	nop
 80038d6:	370c      	adds	r7, #12
 80038d8:	46bd      	mov	sp, r7
 80038da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038de:	4770      	bx	lr

080038e0 <HAL_UART_Init>:
 80038e0:	b580      	push	{r7, lr}
 80038e2:	b082      	sub	sp, #8
 80038e4:	af00      	add	r7, sp, #0
 80038e6:	6078      	str	r0, [r7, #4]
 80038e8:	687b      	ldr	r3, [r7, #4]
 80038ea:	2b00      	cmp	r3, #0
 80038ec:	d101      	bne.n	80038f2 <HAL_UART_Init+0x12>
 80038ee:	2301      	movs	r3, #1
 80038f0:	e03f      	b.n	8003972 <HAL_UART_Init+0x92>
 80038f2:	687b      	ldr	r3, [r7, #4]
 80038f4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80038f8:	b2db      	uxtb	r3, r3
 80038fa:	2b00      	cmp	r3, #0
 80038fc:	d106      	bne.n	800390c <HAL_UART_Init+0x2c>
 80038fe:	687b      	ldr	r3, [r7, #4]
 8003900:	2200      	movs	r2, #0
 8003902:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003906:	6878      	ldr	r0, [r7, #4]
 8003908:	f7fd fe70 	bl	80015ec <HAL_UART_MspInit>
 800390c:	687b      	ldr	r3, [r7, #4]
 800390e:	2224      	movs	r2, #36	; 0x24
 8003910:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003914:	687b      	ldr	r3, [r7, #4]
 8003916:	681b      	ldr	r3, [r3, #0]
 8003918:	68da      	ldr	r2, [r3, #12]
 800391a:	687b      	ldr	r3, [r7, #4]
 800391c:	681b      	ldr	r3, [r3, #0]
 800391e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8003922:	60da      	str	r2, [r3, #12]
 8003924:	6878      	ldr	r0, [r7, #4]
 8003926:	f000 f929 	bl	8003b7c <UART_SetConfig>
 800392a:	687b      	ldr	r3, [r7, #4]
 800392c:	681b      	ldr	r3, [r3, #0]
 800392e:	691a      	ldr	r2, [r3, #16]
 8003930:	687b      	ldr	r3, [r7, #4]
 8003932:	681b      	ldr	r3, [r3, #0]
 8003934:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8003938:	611a      	str	r2, [r3, #16]
 800393a:	687b      	ldr	r3, [r7, #4]
 800393c:	681b      	ldr	r3, [r3, #0]
 800393e:	695a      	ldr	r2, [r3, #20]
 8003940:	687b      	ldr	r3, [r7, #4]
 8003942:	681b      	ldr	r3, [r3, #0]
 8003944:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8003948:	615a      	str	r2, [r3, #20]
 800394a:	687b      	ldr	r3, [r7, #4]
 800394c:	681b      	ldr	r3, [r3, #0]
 800394e:	68da      	ldr	r2, [r3, #12]
 8003950:	687b      	ldr	r3, [r7, #4]
 8003952:	681b      	ldr	r3, [r3, #0]
 8003954:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8003958:	60da      	str	r2, [r3, #12]
 800395a:	687b      	ldr	r3, [r7, #4]
 800395c:	2200      	movs	r2, #0
 800395e:	641a      	str	r2, [r3, #64]	; 0x40
 8003960:	687b      	ldr	r3, [r7, #4]
 8003962:	2220      	movs	r2, #32
 8003964:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003968:	687b      	ldr	r3, [r7, #4]
 800396a:	2220      	movs	r2, #32
 800396c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003970:	2300      	movs	r3, #0
 8003972:	4618      	mov	r0, r3
 8003974:	3708      	adds	r7, #8
 8003976:	46bd      	mov	sp, r7
 8003978:	bd80      	pop	{r7, pc}

0800397a <HAL_UART_Transmit>:
 800397a:	b580      	push	{r7, lr}
 800397c:	b08a      	sub	sp, #40	; 0x28
 800397e:	af02      	add	r7, sp, #8
 8003980:	60f8      	str	r0, [r7, #12]
 8003982:	60b9      	str	r1, [r7, #8]
 8003984:	603b      	str	r3, [r7, #0]
 8003986:	4613      	mov	r3, r2
 8003988:	80fb      	strh	r3, [r7, #6]
 800398a:	2300      	movs	r3, #0
 800398c:	617b      	str	r3, [r7, #20]
 800398e:	68fb      	ldr	r3, [r7, #12]
 8003990:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003994:	b2db      	uxtb	r3, r3
 8003996:	2b20      	cmp	r3, #32
 8003998:	d17c      	bne.n	8003a94 <HAL_UART_Transmit+0x11a>
 800399a:	68bb      	ldr	r3, [r7, #8]
 800399c:	2b00      	cmp	r3, #0
 800399e:	d002      	beq.n	80039a6 <HAL_UART_Transmit+0x2c>
 80039a0:	88fb      	ldrh	r3, [r7, #6]
 80039a2:	2b00      	cmp	r3, #0
 80039a4:	d101      	bne.n	80039aa <HAL_UART_Transmit+0x30>
 80039a6:	2301      	movs	r3, #1
 80039a8:	e075      	b.n	8003a96 <HAL_UART_Transmit+0x11c>
 80039aa:	68fb      	ldr	r3, [r7, #12]
 80039ac:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80039b0:	2b01      	cmp	r3, #1
 80039b2:	d101      	bne.n	80039b8 <HAL_UART_Transmit+0x3e>
 80039b4:	2302      	movs	r3, #2
 80039b6:	e06e      	b.n	8003a96 <HAL_UART_Transmit+0x11c>
 80039b8:	68fb      	ldr	r3, [r7, #12]
 80039ba:	2201      	movs	r2, #1
 80039bc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80039c0:	68fb      	ldr	r3, [r7, #12]
 80039c2:	2200      	movs	r2, #0
 80039c4:	641a      	str	r2, [r3, #64]	; 0x40
 80039c6:	68fb      	ldr	r3, [r7, #12]
 80039c8:	2221      	movs	r2, #33	; 0x21
 80039ca:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80039ce:	f7fd feb5 	bl	800173c <HAL_GetTick>
 80039d2:	6178      	str	r0, [r7, #20]
 80039d4:	68fb      	ldr	r3, [r7, #12]
 80039d6:	88fa      	ldrh	r2, [r7, #6]
 80039d8:	849a      	strh	r2, [r3, #36]	; 0x24
 80039da:	68fb      	ldr	r3, [r7, #12]
 80039dc:	88fa      	ldrh	r2, [r7, #6]
 80039de:	84da      	strh	r2, [r3, #38]	; 0x26
 80039e0:	68fb      	ldr	r3, [r7, #12]
 80039e2:	689b      	ldr	r3, [r3, #8]
 80039e4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80039e8:	d108      	bne.n	80039fc <HAL_UART_Transmit+0x82>
 80039ea:	68fb      	ldr	r3, [r7, #12]
 80039ec:	691b      	ldr	r3, [r3, #16]
 80039ee:	2b00      	cmp	r3, #0
 80039f0:	d104      	bne.n	80039fc <HAL_UART_Transmit+0x82>
 80039f2:	2300      	movs	r3, #0
 80039f4:	61fb      	str	r3, [r7, #28]
 80039f6:	68bb      	ldr	r3, [r7, #8]
 80039f8:	61bb      	str	r3, [r7, #24]
 80039fa:	e003      	b.n	8003a04 <HAL_UART_Transmit+0x8a>
 80039fc:	68bb      	ldr	r3, [r7, #8]
 80039fe:	61fb      	str	r3, [r7, #28]
 8003a00:	2300      	movs	r3, #0
 8003a02:	61bb      	str	r3, [r7, #24]
 8003a04:	68fb      	ldr	r3, [r7, #12]
 8003a06:	2200      	movs	r2, #0
 8003a08:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003a0c:	e02a      	b.n	8003a64 <HAL_UART_Transmit+0xea>
 8003a0e:	683b      	ldr	r3, [r7, #0]
 8003a10:	9300      	str	r3, [sp, #0]
 8003a12:	697b      	ldr	r3, [r7, #20]
 8003a14:	2200      	movs	r2, #0
 8003a16:	2180      	movs	r1, #128	; 0x80
 8003a18:	68f8      	ldr	r0, [r7, #12]
 8003a1a:	f000 f840 	bl	8003a9e <UART_WaitOnFlagUntilTimeout>
 8003a1e:	4603      	mov	r3, r0
 8003a20:	2b00      	cmp	r3, #0
 8003a22:	d001      	beq.n	8003a28 <HAL_UART_Transmit+0xae>
 8003a24:	2303      	movs	r3, #3
 8003a26:	e036      	b.n	8003a96 <HAL_UART_Transmit+0x11c>
 8003a28:	69fb      	ldr	r3, [r7, #28]
 8003a2a:	2b00      	cmp	r3, #0
 8003a2c:	d10b      	bne.n	8003a46 <HAL_UART_Transmit+0xcc>
 8003a2e:	69bb      	ldr	r3, [r7, #24]
 8003a30:	881b      	ldrh	r3, [r3, #0]
 8003a32:	461a      	mov	r2, r3
 8003a34:	68fb      	ldr	r3, [r7, #12]
 8003a36:	681b      	ldr	r3, [r3, #0]
 8003a38:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003a3c:	605a      	str	r2, [r3, #4]
 8003a3e:	69bb      	ldr	r3, [r7, #24]
 8003a40:	3302      	adds	r3, #2
 8003a42:	61bb      	str	r3, [r7, #24]
 8003a44:	e007      	b.n	8003a56 <HAL_UART_Transmit+0xdc>
 8003a46:	69fb      	ldr	r3, [r7, #28]
 8003a48:	781a      	ldrb	r2, [r3, #0]
 8003a4a:	68fb      	ldr	r3, [r7, #12]
 8003a4c:	681b      	ldr	r3, [r3, #0]
 8003a4e:	605a      	str	r2, [r3, #4]
 8003a50:	69fb      	ldr	r3, [r7, #28]
 8003a52:	3301      	adds	r3, #1
 8003a54:	61fb      	str	r3, [r7, #28]
 8003a56:	68fb      	ldr	r3, [r7, #12]
 8003a58:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8003a5a:	b29b      	uxth	r3, r3
 8003a5c:	3b01      	subs	r3, #1
 8003a5e:	b29a      	uxth	r2, r3
 8003a60:	68fb      	ldr	r3, [r7, #12]
 8003a62:	84da      	strh	r2, [r3, #38]	; 0x26
 8003a64:	68fb      	ldr	r3, [r7, #12]
 8003a66:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8003a68:	b29b      	uxth	r3, r3
 8003a6a:	2b00      	cmp	r3, #0
 8003a6c:	d1cf      	bne.n	8003a0e <HAL_UART_Transmit+0x94>
 8003a6e:	683b      	ldr	r3, [r7, #0]
 8003a70:	9300      	str	r3, [sp, #0]
 8003a72:	697b      	ldr	r3, [r7, #20]
 8003a74:	2200      	movs	r2, #0
 8003a76:	2140      	movs	r1, #64	; 0x40
 8003a78:	68f8      	ldr	r0, [r7, #12]
 8003a7a:	f000 f810 	bl	8003a9e <UART_WaitOnFlagUntilTimeout>
 8003a7e:	4603      	mov	r3, r0
 8003a80:	2b00      	cmp	r3, #0
 8003a82:	d001      	beq.n	8003a88 <HAL_UART_Transmit+0x10e>
 8003a84:	2303      	movs	r3, #3
 8003a86:	e006      	b.n	8003a96 <HAL_UART_Transmit+0x11c>
 8003a88:	68fb      	ldr	r3, [r7, #12]
 8003a8a:	2220      	movs	r2, #32
 8003a8c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003a90:	2300      	movs	r3, #0
 8003a92:	e000      	b.n	8003a96 <HAL_UART_Transmit+0x11c>
 8003a94:	2302      	movs	r3, #2
 8003a96:	4618      	mov	r0, r3
 8003a98:	3720      	adds	r7, #32
 8003a9a:	46bd      	mov	sp, r7
 8003a9c:	bd80      	pop	{r7, pc}

08003a9e <UART_WaitOnFlagUntilTimeout>:
 8003a9e:	b580      	push	{r7, lr}
 8003aa0:	b090      	sub	sp, #64	; 0x40
 8003aa2:	af00      	add	r7, sp, #0
 8003aa4:	60f8      	str	r0, [r7, #12]
 8003aa6:	60b9      	str	r1, [r7, #8]
 8003aa8:	603b      	str	r3, [r7, #0]
 8003aaa:	4613      	mov	r3, r2
 8003aac:	71fb      	strb	r3, [r7, #7]
 8003aae:	e050      	b.n	8003b52 <UART_WaitOnFlagUntilTimeout+0xb4>
 8003ab0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003ab2:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003ab6:	d04c      	beq.n	8003b52 <UART_WaitOnFlagUntilTimeout+0xb4>
 8003ab8:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003aba:	2b00      	cmp	r3, #0
 8003abc:	d007      	beq.n	8003ace <UART_WaitOnFlagUntilTimeout+0x30>
 8003abe:	f7fd fe3d 	bl	800173c <HAL_GetTick>
 8003ac2:	4602      	mov	r2, r0
 8003ac4:	683b      	ldr	r3, [r7, #0]
 8003ac6:	1ad3      	subs	r3, r2, r3
 8003ac8:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8003aca:	429a      	cmp	r2, r3
 8003acc:	d241      	bcs.n	8003b52 <UART_WaitOnFlagUntilTimeout+0xb4>
 8003ace:	68fb      	ldr	r3, [r7, #12]
 8003ad0:	681b      	ldr	r3, [r3, #0]
 8003ad2:	330c      	adds	r3, #12
 8003ad4:	62bb      	str	r3, [r7, #40]	; 0x28
 8003ad6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003ad8:	e853 3f00 	ldrex	r3, [r3]
 8003adc:	627b      	str	r3, [r7, #36]	; 0x24
 8003ade:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003ae0:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 8003ae4:	63fb      	str	r3, [r7, #60]	; 0x3c
 8003ae6:	68fb      	ldr	r3, [r7, #12]
 8003ae8:	681b      	ldr	r3, [r3, #0]
 8003aea:	330c      	adds	r3, #12
 8003aec:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8003aee:	637a      	str	r2, [r7, #52]	; 0x34
 8003af0:	633b      	str	r3, [r7, #48]	; 0x30
 8003af2:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8003af4:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8003af6:	e841 2300 	strex	r3, r2, [r1]
 8003afa:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003afc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003afe:	2b00      	cmp	r3, #0
 8003b00:	d1e5      	bne.n	8003ace <UART_WaitOnFlagUntilTimeout+0x30>
 8003b02:	68fb      	ldr	r3, [r7, #12]
 8003b04:	681b      	ldr	r3, [r3, #0]
 8003b06:	3314      	adds	r3, #20
 8003b08:	617b      	str	r3, [r7, #20]
 8003b0a:	697b      	ldr	r3, [r7, #20]
 8003b0c:	e853 3f00 	ldrex	r3, [r3]
 8003b10:	613b      	str	r3, [r7, #16]
 8003b12:	693b      	ldr	r3, [r7, #16]
 8003b14:	f023 0301 	bic.w	r3, r3, #1
 8003b18:	63bb      	str	r3, [r7, #56]	; 0x38
 8003b1a:	68fb      	ldr	r3, [r7, #12]
 8003b1c:	681b      	ldr	r3, [r3, #0]
 8003b1e:	3314      	adds	r3, #20
 8003b20:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8003b22:	623a      	str	r2, [r7, #32]
 8003b24:	61fb      	str	r3, [r7, #28]
 8003b26:	69f9      	ldr	r1, [r7, #28]
 8003b28:	6a3a      	ldr	r2, [r7, #32]
 8003b2a:	e841 2300 	strex	r3, r2, [r1]
 8003b2e:	61bb      	str	r3, [r7, #24]
 8003b30:	69bb      	ldr	r3, [r7, #24]
 8003b32:	2b00      	cmp	r3, #0
 8003b34:	d1e5      	bne.n	8003b02 <UART_WaitOnFlagUntilTimeout+0x64>
 8003b36:	68fb      	ldr	r3, [r7, #12]
 8003b38:	2220      	movs	r2, #32
 8003b3a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003b3e:	68fb      	ldr	r3, [r7, #12]
 8003b40:	2220      	movs	r2, #32
 8003b42:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003b46:	68fb      	ldr	r3, [r7, #12]
 8003b48:	2200      	movs	r2, #0
 8003b4a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003b4e:	2303      	movs	r3, #3
 8003b50:	e00f      	b.n	8003b72 <UART_WaitOnFlagUntilTimeout+0xd4>
 8003b52:	68fb      	ldr	r3, [r7, #12]
 8003b54:	681b      	ldr	r3, [r3, #0]
 8003b56:	681a      	ldr	r2, [r3, #0]
 8003b58:	68bb      	ldr	r3, [r7, #8]
 8003b5a:	4013      	ands	r3, r2
 8003b5c:	68ba      	ldr	r2, [r7, #8]
 8003b5e:	429a      	cmp	r2, r3
 8003b60:	bf0c      	ite	eq
 8003b62:	2301      	moveq	r3, #1
 8003b64:	2300      	movne	r3, #0
 8003b66:	b2db      	uxtb	r3, r3
 8003b68:	461a      	mov	r2, r3
 8003b6a:	79fb      	ldrb	r3, [r7, #7]
 8003b6c:	429a      	cmp	r2, r3
 8003b6e:	d09f      	beq.n	8003ab0 <UART_WaitOnFlagUntilTimeout+0x12>
 8003b70:	2300      	movs	r3, #0
 8003b72:	4618      	mov	r0, r3
 8003b74:	3740      	adds	r7, #64	; 0x40
 8003b76:	46bd      	mov	sp, r7
 8003b78:	bd80      	pop	{r7, pc}
	...

08003b7c <UART_SetConfig>:
 8003b7c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8003b80:	b0c0      	sub	sp, #256	; 0x100
 8003b82:	af00      	add	r7, sp, #0
 8003b84:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 8003b88:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003b8c:	681b      	ldr	r3, [r3, #0]
 8003b8e:	691b      	ldr	r3, [r3, #16]
 8003b90:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 8003b94:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003b98:	68d9      	ldr	r1, [r3, #12]
 8003b9a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003b9e:	681a      	ldr	r2, [r3, #0]
 8003ba0:	ea40 0301 	orr.w	r3, r0, r1
 8003ba4:	6113      	str	r3, [r2, #16]
 8003ba6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003baa:	689a      	ldr	r2, [r3, #8]
 8003bac:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003bb0:	691b      	ldr	r3, [r3, #16]
 8003bb2:	431a      	orrs	r2, r3
 8003bb4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003bb8:	695b      	ldr	r3, [r3, #20]
 8003bba:	431a      	orrs	r2, r3
 8003bbc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003bc0:	69db      	ldr	r3, [r3, #28]
 8003bc2:	4313      	orrs	r3, r2
 8003bc4:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 8003bc8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003bcc:	681b      	ldr	r3, [r3, #0]
 8003bce:	68db      	ldr	r3, [r3, #12]
 8003bd0:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 8003bd4:	f021 010c 	bic.w	r1, r1, #12
 8003bd8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003bdc:	681a      	ldr	r2, [r3, #0]
 8003bde:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 8003be2:	430b      	orrs	r3, r1
 8003be4:	60d3      	str	r3, [r2, #12]
 8003be6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003bea:	681b      	ldr	r3, [r3, #0]
 8003bec:	695b      	ldr	r3, [r3, #20]
 8003bee:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 8003bf2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003bf6:	6999      	ldr	r1, [r3, #24]
 8003bf8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003bfc:	681a      	ldr	r2, [r3, #0]
 8003bfe:	ea40 0301 	orr.w	r3, r0, r1
 8003c02:	6153      	str	r3, [r2, #20]
 8003c04:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003c08:	681a      	ldr	r2, [r3, #0]
 8003c0a:	4b8f      	ldr	r3, [pc, #572]	; (8003e48 <UART_SetConfig+0x2cc>)
 8003c0c:	429a      	cmp	r2, r3
 8003c0e:	d005      	beq.n	8003c1c <UART_SetConfig+0xa0>
 8003c10:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003c14:	681a      	ldr	r2, [r3, #0]
 8003c16:	4b8d      	ldr	r3, [pc, #564]	; (8003e4c <UART_SetConfig+0x2d0>)
 8003c18:	429a      	cmp	r2, r3
 8003c1a:	d104      	bne.n	8003c26 <UART_SetConfig+0xaa>
 8003c1c:	f7fe f96c 	bl	8001ef8 <HAL_RCC_GetPCLK2Freq>
 8003c20:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 8003c24:	e003      	b.n	8003c2e <UART_SetConfig+0xb2>
 8003c26:	f7fe f953 	bl	8001ed0 <HAL_RCC_GetPCLK1Freq>
 8003c2a:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 8003c2e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003c32:	69db      	ldr	r3, [r3, #28]
 8003c34:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8003c38:	f040 810c 	bne.w	8003e54 <UART_SetConfig+0x2d8>
 8003c3c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8003c40:	2200      	movs	r2, #0
 8003c42:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 8003c46:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 8003c4a:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 8003c4e:	4622      	mov	r2, r4
 8003c50:	462b      	mov	r3, r5
 8003c52:	1891      	adds	r1, r2, r2
 8003c54:	65b9      	str	r1, [r7, #88]	; 0x58
 8003c56:	415b      	adcs	r3, r3
 8003c58:	65fb      	str	r3, [r7, #92]	; 0x5c
 8003c5a:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8003c5e:	4621      	mov	r1, r4
 8003c60:	eb12 0801 	adds.w	r8, r2, r1
 8003c64:	4629      	mov	r1, r5
 8003c66:	eb43 0901 	adc.w	r9, r3, r1
 8003c6a:	f04f 0200 	mov.w	r2, #0
 8003c6e:	f04f 0300 	mov.w	r3, #0
 8003c72:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8003c76:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8003c7a:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8003c7e:	4690      	mov	r8, r2
 8003c80:	4699      	mov	r9, r3
 8003c82:	4623      	mov	r3, r4
 8003c84:	eb18 0303 	adds.w	r3, r8, r3
 8003c88:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8003c8c:	462b      	mov	r3, r5
 8003c8e:	eb49 0303 	adc.w	r3, r9, r3
 8003c92:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8003c96:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003c9a:	685b      	ldr	r3, [r3, #4]
 8003c9c:	2200      	movs	r2, #0
 8003c9e:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8003ca2:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 8003ca6:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 8003caa:	460b      	mov	r3, r1
 8003cac:	18db      	adds	r3, r3, r3
 8003cae:	653b      	str	r3, [r7, #80]	; 0x50
 8003cb0:	4613      	mov	r3, r2
 8003cb2:	eb42 0303 	adc.w	r3, r2, r3
 8003cb6:	657b      	str	r3, [r7, #84]	; 0x54
 8003cb8:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 8003cbc:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 8003cc0:	f7fc fafe 	bl	80002c0 <__aeabi_uldivmod>
 8003cc4:	4602      	mov	r2, r0
 8003cc6:	460b      	mov	r3, r1
 8003cc8:	4b61      	ldr	r3, [pc, #388]	; (8003e50 <UART_SetConfig+0x2d4>)
 8003cca:	fba3 2302 	umull	r2, r3, r3, r2
 8003cce:	095b      	lsrs	r3, r3, #5
 8003cd0:	011c      	lsls	r4, r3, #4
 8003cd2:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8003cd6:	2200      	movs	r2, #0
 8003cd8:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8003cdc:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 8003ce0:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 8003ce4:	4642      	mov	r2, r8
 8003ce6:	464b      	mov	r3, r9
 8003ce8:	1891      	adds	r1, r2, r2
 8003cea:	64b9      	str	r1, [r7, #72]	; 0x48
 8003cec:	415b      	adcs	r3, r3
 8003cee:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003cf0:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8003cf4:	4641      	mov	r1, r8
 8003cf6:	eb12 0a01 	adds.w	sl, r2, r1
 8003cfa:	4649      	mov	r1, r9
 8003cfc:	eb43 0b01 	adc.w	fp, r3, r1
 8003d00:	f04f 0200 	mov.w	r2, #0
 8003d04:	f04f 0300 	mov.w	r3, #0
 8003d08:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8003d0c:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8003d10:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8003d14:	4692      	mov	sl, r2
 8003d16:	469b      	mov	fp, r3
 8003d18:	4643      	mov	r3, r8
 8003d1a:	eb1a 0303 	adds.w	r3, sl, r3
 8003d1e:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8003d22:	464b      	mov	r3, r9
 8003d24:	eb4b 0303 	adc.w	r3, fp, r3
 8003d28:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 8003d2c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003d30:	685b      	ldr	r3, [r3, #4]
 8003d32:	2200      	movs	r2, #0
 8003d34:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8003d38:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 8003d3c:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 8003d40:	460b      	mov	r3, r1
 8003d42:	18db      	adds	r3, r3, r3
 8003d44:	643b      	str	r3, [r7, #64]	; 0x40
 8003d46:	4613      	mov	r3, r2
 8003d48:	eb42 0303 	adc.w	r3, r2, r3
 8003d4c:	647b      	str	r3, [r7, #68]	; 0x44
 8003d4e:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8003d52:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 8003d56:	f7fc fab3 	bl	80002c0 <__aeabi_uldivmod>
 8003d5a:	4602      	mov	r2, r0
 8003d5c:	460b      	mov	r3, r1
 8003d5e:	4611      	mov	r1, r2
 8003d60:	4b3b      	ldr	r3, [pc, #236]	; (8003e50 <UART_SetConfig+0x2d4>)
 8003d62:	fba3 2301 	umull	r2, r3, r3, r1
 8003d66:	095b      	lsrs	r3, r3, #5
 8003d68:	2264      	movs	r2, #100	; 0x64
 8003d6a:	fb02 f303 	mul.w	r3, r2, r3
 8003d6e:	1acb      	subs	r3, r1, r3
 8003d70:	00db      	lsls	r3, r3, #3
 8003d72:	f103 0232 	add.w	r2, r3, #50	; 0x32
 8003d76:	4b36      	ldr	r3, [pc, #216]	; (8003e50 <UART_SetConfig+0x2d4>)
 8003d78:	fba3 2302 	umull	r2, r3, r3, r2
 8003d7c:	095b      	lsrs	r3, r3, #5
 8003d7e:	005b      	lsls	r3, r3, #1
 8003d80:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8003d84:	441c      	add	r4, r3
 8003d86:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8003d8a:	2200      	movs	r2, #0
 8003d8c:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8003d90:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 8003d94:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 8003d98:	4642      	mov	r2, r8
 8003d9a:	464b      	mov	r3, r9
 8003d9c:	1891      	adds	r1, r2, r2
 8003d9e:	63b9      	str	r1, [r7, #56]	; 0x38
 8003da0:	415b      	adcs	r3, r3
 8003da2:	63fb      	str	r3, [r7, #60]	; 0x3c
 8003da4:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 8003da8:	4641      	mov	r1, r8
 8003daa:	1851      	adds	r1, r2, r1
 8003dac:	6339      	str	r1, [r7, #48]	; 0x30
 8003dae:	4649      	mov	r1, r9
 8003db0:	414b      	adcs	r3, r1
 8003db2:	637b      	str	r3, [r7, #52]	; 0x34
 8003db4:	f04f 0200 	mov.w	r2, #0
 8003db8:	f04f 0300 	mov.w	r3, #0
 8003dbc:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 8003dc0:	4659      	mov	r1, fp
 8003dc2:	00cb      	lsls	r3, r1, #3
 8003dc4:	4651      	mov	r1, sl
 8003dc6:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8003dca:	4651      	mov	r1, sl
 8003dcc:	00ca      	lsls	r2, r1, #3
 8003dce:	4610      	mov	r0, r2
 8003dd0:	4619      	mov	r1, r3
 8003dd2:	4603      	mov	r3, r0
 8003dd4:	4642      	mov	r2, r8
 8003dd6:	189b      	adds	r3, r3, r2
 8003dd8:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8003ddc:	464b      	mov	r3, r9
 8003dde:	460a      	mov	r2, r1
 8003de0:	eb42 0303 	adc.w	r3, r2, r3
 8003de4:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8003de8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003dec:	685b      	ldr	r3, [r3, #4]
 8003dee:	2200      	movs	r2, #0
 8003df0:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8003df4:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 8003df8:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 8003dfc:	460b      	mov	r3, r1
 8003dfe:	18db      	adds	r3, r3, r3
 8003e00:	62bb      	str	r3, [r7, #40]	; 0x28
 8003e02:	4613      	mov	r3, r2
 8003e04:	eb42 0303 	adc.w	r3, r2, r3
 8003e08:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003e0a:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8003e0e:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 8003e12:	f7fc fa55 	bl	80002c0 <__aeabi_uldivmod>
 8003e16:	4602      	mov	r2, r0
 8003e18:	460b      	mov	r3, r1
 8003e1a:	4b0d      	ldr	r3, [pc, #52]	; (8003e50 <UART_SetConfig+0x2d4>)
 8003e1c:	fba3 1302 	umull	r1, r3, r3, r2
 8003e20:	095b      	lsrs	r3, r3, #5
 8003e22:	2164      	movs	r1, #100	; 0x64
 8003e24:	fb01 f303 	mul.w	r3, r1, r3
 8003e28:	1ad3      	subs	r3, r2, r3
 8003e2a:	00db      	lsls	r3, r3, #3
 8003e2c:	3332      	adds	r3, #50	; 0x32
 8003e2e:	4a08      	ldr	r2, [pc, #32]	; (8003e50 <UART_SetConfig+0x2d4>)
 8003e30:	fba2 2303 	umull	r2, r3, r2, r3
 8003e34:	095b      	lsrs	r3, r3, #5
 8003e36:	f003 0207 	and.w	r2, r3, #7
 8003e3a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003e3e:	681b      	ldr	r3, [r3, #0]
 8003e40:	4422      	add	r2, r4
 8003e42:	609a      	str	r2, [r3, #8]
 8003e44:	e106      	b.n	8004054 <UART_SetConfig+0x4d8>
 8003e46:	bf00      	nop
 8003e48:	40011000 	.word	0x40011000
 8003e4c:	40011400 	.word	0x40011400
 8003e50:	51eb851f 	.word	0x51eb851f
 8003e54:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8003e58:	2200      	movs	r2, #0
 8003e5a:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8003e5e:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 8003e62:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 8003e66:	4642      	mov	r2, r8
 8003e68:	464b      	mov	r3, r9
 8003e6a:	1891      	adds	r1, r2, r2
 8003e6c:	6239      	str	r1, [r7, #32]
 8003e6e:	415b      	adcs	r3, r3
 8003e70:	627b      	str	r3, [r7, #36]	; 0x24
 8003e72:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8003e76:	4641      	mov	r1, r8
 8003e78:	1854      	adds	r4, r2, r1
 8003e7a:	4649      	mov	r1, r9
 8003e7c:	eb43 0501 	adc.w	r5, r3, r1
 8003e80:	f04f 0200 	mov.w	r2, #0
 8003e84:	f04f 0300 	mov.w	r3, #0
 8003e88:	00eb      	lsls	r3, r5, #3
 8003e8a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8003e8e:	00e2      	lsls	r2, r4, #3
 8003e90:	4614      	mov	r4, r2
 8003e92:	461d      	mov	r5, r3
 8003e94:	4643      	mov	r3, r8
 8003e96:	18e3      	adds	r3, r4, r3
 8003e98:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8003e9c:	464b      	mov	r3, r9
 8003e9e:	eb45 0303 	adc.w	r3, r5, r3
 8003ea2:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8003ea6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003eaa:	685b      	ldr	r3, [r3, #4]
 8003eac:	2200      	movs	r2, #0
 8003eae:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8003eb2:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 8003eb6:	f04f 0200 	mov.w	r2, #0
 8003eba:	f04f 0300 	mov.w	r3, #0
 8003ebe:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 8003ec2:	4629      	mov	r1, r5
 8003ec4:	008b      	lsls	r3, r1, #2
 8003ec6:	4621      	mov	r1, r4
 8003ec8:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8003ecc:	4621      	mov	r1, r4
 8003ece:	008a      	lsls	r2, r1, #2
 8003ed0:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 8003ed4:	f7fc f9f4 	bl	80002c0 <__aeabi_uldivmod>
 8003ed8:	4602      	mov	r2, r0
 8003eda:	460b      	mov	r3, r1
 8003edc:	4b60      	ldr	r3, [pc, #384]	; (8004060 <UART_SetConfig+0x4e4>)
 8003ede:	fba3 2302 	umull	r2, r3, r3, r2
 8003ee2:	095b      	lsrs	r3, r3, #5
 8003ee4:	011c      	lsls	r4, r3, #4
 8003ee6:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8003eea:	2200      	movs	r2, #0
 8003eec:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8003ef0:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8003ef4:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 8003ef8:	4642      	mov	r2, r8
 8003efa:	464b      	mov	r3, r9
 8003efc:	1891      	adds	r1, r2, r2
 8003efe:	61b9      	str	r1, [r7, #24]
 8003f00:	415b      	adcs	r3, r3
 8003f02:	61fb      	str	r3, [r7, #28]
 8003f04:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8003f08:	4641      	mov	r1, r8
 8003f0a:	1851      	adds	r1, r2, r1
 8003f0c:	6139      	str	r1, [r7, #16]
 8003f0e:	4649      	mov	r1, r9
 8003f10:	414b      	adcs	r3, r1
 8003f12:	617b      	str	r3, [r7, #20]
 8003f14:	f04f 0200 	mov.w	r2, #0
 8003f18:	f04f 0300 	mov.w	r3, #0
 8003f1c:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8003f20:	4659      	mov	r1, fp
 8003f22:	00cb      	lsls	r3, r1, #3
 8003f24:	4651      	mov	r1, sl
 8003f26:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8003f2a:	4651      	mov	r1, sl
 8003f2c:	00ca      	lsls	r2, r1, #3
 8003f2e:	4610      	mov	r0, r2
 8003f30:	4619      	mov	r1, r3
 8003f32:	4603      	mov	r3, r0
 8003f34:	4642      	mov	r2, r8
 8003f36:	189b      	adds	r3, r3, r2
 8003f38:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8003f3c:	464b      	mov	r3, r9
 8003f3e:	460a      	mov	r2, r1
 8003f40:	eb42 0303 	adc.w	r3, r2, r3
 8003f44:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8003f48:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003f4c:	685b      	ldr	r3, [r3, #4]
 8003f4e:	2200      	movs	r2, #0
 8003f50:	67bb      	str	r3, [r7, #120]	; 0x78
 8003f52:	67fa      	str	r2, [r7, #124]	; 0x7c
 8003f54:	f04f 0200 	mov.w	r2, #0
 8003f58:	f04f 0300 	mov.w	r3, #0
 8003f5c:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 8003f60:	4649      	mov	r1, r9
 8003f62:	008b      	lsls	r3, r1, #2
 8003f64:	4641      	mov	r1, r8
 8003f66:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8003f6a:	4641      	mov	r1, r8
 8003f6c:	008a      	lsls	r2, r1, #2
 8003f6e:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 8003f72:	f7fc f9a5 	bl	80002c0 <__aeabi_uldivmod>
 8003f76:	4602      	mov	r2, r0
 8003f78:	460b      	mov	r3, r1
 8003f7a:	4611      	mov	r1, r2
 8003f7c:	4b38      	ldr	r3, [pc, #224]	; (8004060 <UART_SetConfig+0x4e4>)
 8003f7e:	fba3 2301 	umull	r2, r3, r3, r1
 8003f82:	095b      	lsrs	r3, r3, #5
 8003f84:	2264      	movs	r2, #100	; 0x64
 8003f86:	fb02 f303 	mul.w	r3, r2, r3
 8003f8a:	1acb      	subs	r3, r1, r3
 8003f8c:	011b      	lsls	r3, r3, #4
 8003f8e:	3332      	adds	r3, #50	; 0x32
 8003f90:	4a33      	ldr	r2, [pc, #204]	; (8004060 <UART_SetConfig+0x4e4>)
 8003f92:	fba2 2303 	umull	r2, r3, r2, r3
 8003f96:	095b      	lsrs	r3, r3, #5
 8003f98:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8003f9c:	441c      	add	r4, r3
 8003f9e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8003fa2:	2200      	movs	r2, #0
 8003fa4:	673b      	str	r3, [r7, #112]	; 0x70
 8003fa6:	677a      	str	r2, [r7, #116]	; 0x74
 8003fa8:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 8003fac:	4642      	mov	r2, r8
 8003fae:	464b      	mov	r3, r9
 8003fb0:	1891      	adds	r1, r2, r2
 8003fb2:	60b9      	str	r1, [r7, #8]
 8003fb4:	415b      	adcs	r3, r3
 8003fb6:	60fb      	str	r3, [r7, #12]
 8003fb8:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8003fbc:	4641      	mov	r1, r8
 8003fbe:	1851      	adds	r1, r2, r1
 8003fc0:	6039      	str	r1, [r7, #0]
 8003fc2:	4649      	mov	r1, r9
 8003fc4:	414b      	adcs	r3, r1
 8003fc6:	607b      	str	r3, [r7, #4]
 8003fc8:	f04f 0200 	mov.w	r2, #0
 8003fcc:	f04f 0300 	mov.w	r3, #0
 8003fd0:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8003fd4:	4659      	mov	r1, fp
 8003fd6:	00cb      	lsls	r3, r1, #3
 8003fd8:	4651      	mov	r1, sl
 8003fda:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8003fde:	4651      	mov	r1, sl
 8003fe0:	00ca      	lsls	r2, r1, #3
 8003fe2:	4610      	mov	r0, r2
 8003fe4:	4619      	mov	r1, r3
 8003fe6:	4603      	mov	r3, r0
 8003fe8:	4642      	mov	r2, r8
 8003fea:	189b      	adds	r3, r3, r2
 8003fec:	66bb      	str	r3, [r7, #104]	; 0x68
 8003fee:	464b      	mov	r3, r9
 8003ff0:	460a      	mov	r2, r1
 8003ff2:	eb42 0303 	adc.w	r3, r2, r3
 8003ff6:	66fb      	str	r3, [r7, #108]	; 0x6c
 8003ff8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003ffc:	685b      	ldr	r3, [r3, #4]
 8003ffe:	2200      	movs	r2, #0
 8004000:	663b      	str	r3, [r7, #96]	; 0x60
 8004002:	667a      	str	r2, [r7, #100]	; 0x64
 8004004:	f04f 0200 	mov.w	r2, #0
 8004008:	f04f 0300 	mov.w	r3, #0
 800400c:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 8004010:	4649      	mov	r1, r9
 8004012:	008b      	lsls	r3, r1, #2
 8004014:	4641      	mov	r1, r8
 8004016:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800401a:	4641      	mov	r1, r8
 800401c:	008a      	lsls	r2, r1, #2
 800401e:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 8004022:	f7fc f94d 	bl	80002c0 <__aeabi_uldivmod>
 8004026:	4602      	mov	r2, r0
 8004028:	460b      	mov	r3, r1
 800402a:	4b0d      	ldr	r3, [pc, #52]	; (8004060 <UART_SetConfig+0x4e4>)
 800402c:	fba3 1302 	umull	r1, r3, r3, r2
 8004030:	095b      	lsrs	r3, r3, #5
 8004032:	2164      	movs	r1, #100	; 0x64
 8004034:	fb01 f303 	mul.w	r3, r1, r3
 8004038:	1ad3      	subs	r3, r2, r3
 800403a:	011b      	lsls	r3, r3, #4
 800403c:	3332      	adds	r3, #50	; 0x32
 800403e:	4a08      	ldr	r2, [pc, #32]	; (8004060 <UART_SetConfig+0x4e4>)
 8004040:	fba2 2303 	umull	r2, r3, r2, r3
 8004044:	095b      	lsrs	r3, r3, #5
 8004046:	f003 020f 	and.w	r2, r3, #15
 800404a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800404e:	681b      	ldr	r3, [r3, #0]
 8004050:	4422      	add	r2, r4
 8004052:	609a      	str	r2, [r3, #8]
 8004054:	bf00      	nop
 8004056:	f507 7780 	add.w	r7, r7, #256	; 0x100
 800405a:	46bd      	mov	sp, r7
 800405c:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8004060:	51eb851f 	.word	0x51eb851f

08004064 <sniprintf>:
 8004064:	b40c      	push	{r2, r3}
 8004066:	b530      	push	{r4, r5, lr}
 8004068:	4b17      	ldr	r3, [pc, #92]	; (80040c8 <sniprintf+0x64>)
 800406a:	1e0c      	subs	r4, r1, #0
 800406c:	681d      	ldr	r5, [r3, #0]
 800406e:	b09d      	sub	sp, #116	; 0x74
 8004070:	da08      	bge.n	8004084 <sniprintf+0x20>
 8004072:	238b      	movs	r3, #139	; 0x8b
 8004074:	602b      	str	r3, [r5, #0]
 8004076:	f04f 30ff 	mov.w	r0, #4294967295
 800407a:	b01d      	add	sp, #116	; 0x74
 800407c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8004080:	b002      	add	sp, #8
 8004082:	4770      	bx	lr
 8004084:	f44f 7302 	mov.w	r3, #520	; 0x208
 8004088:	f8ad 3014 	strh.w	r3, [sp, #20]
 800408c:	bf14      	ite	ne
 800408e:	f104 33ff 	addne.w	r3, r4, #4294967295
 8004092:	4623      	moveq	r3, r4
 8004094:	9304      	str	r3, [sp, #16]
 8004096:	9307      	str	r3, [sp, #28]
 8004098:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800409c:	9002      	str	r0, [sp, #8]
 800409e:	9006      	str	r0, [sp, #24]
 80040a0:	f8ad 3016 	strh.w	r3, [sp, #22]
 80040a4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80040a6:	ab21      	add	r3, sp, #132	; 0x84
 80040a8:	a902      	add	r1, sp, #8
 80040aa:	4628      	mov	r0, r5
 80040ac:	9301      	str	r3, [sp, #4]
 80040ae:	f000 f9b3 	bl	8004418 <_svfiprintf_r>
 80040b2:	1c43      	adds	r3, r0, #1
 80040b4:	bfbc      	itt	lt
 80040b6:	238b      	movlt	r3, #139	; 0x8b
 80040b8:	602b      	strlt	r3, [r5, #0]
 80040ba:	2c00      	cmp	r4, #0
 80040bc:	d0dd      	beq.n	800407a <sniprintf+0x16>
 80040be:	9b02      	ldr	r3, [sp, #8]
 80040c0:	2200      	movs	r2, #0
 80040c2:	701a      	strb	r2, [r3, #0]
 80040c4:	e7d9      	b.n	800407a <sniprintf+0x16>
 80040c6:	bf00      	nop
 80040c8:	20000058 	.word	0x20000058

080040cc <siprintf>:
 80040cc:	b40e      	push	{r1, r2, r3}
 80040ce:	b500      	push	{lr}
 80040d0:	b09c      	sub	sp, #112	; 0x70
 80040d2:	ab1d      	add	r3, sp, #116	; 0x74
 80040d4:	9002      	str	r0, [sp, #8]
 80040d6:	9006      	str	r0, [sp, #24]
 80040d8:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80040dc:	4809      	ldr	r0, [pc, #36]	; (8004104 <siprintf+0x38>)
 80040de:	9107      	str	r1, [sp, #28]
 80040e0:	9104      	str	r1, [sp, #16]
 80040e2:	4909      	ldr	r1, [pc, #36]	; (8004108 <siprintf+0x3c>)
 80040e4:	f853 2b04 	ldr.w	r2, [r3], #4
 80040e8:	9105      	str	r1, [sp, #20]
 80040ea:	6800      	ldr	r0, [r0, #0]
 80040ec:	9301      	str	r3, [sp, #4]
 80040ee:	a902      	add	r1, sp, #8
 80040f0:	f000 f992 	bl	8004418 <_svfiprintf_r>
 80040f4:	9b02      	ldr	r3, [sp, #8]
 80040f6:	2200      	movs	r2, #0
 80040f8:	701a      	strb	r2, [r3, #0]
 80040fa:	b01c      	add	sp, #112	; 0x70
 80040fc:	f85d eb04 	ldr.w	lr, [sp], #4
 8004100:	b003      	add	sp, #12
 8004102:	4770      	bx	lr
 8004104:	20000058 	.word	0x20000058
 8004108:	ffff0208 	.word	0xffff0208

0800410c <memset>:
 800410c:	4402      	add	r2, r0
 800410e:	4603      	mov	r3, r0
 8004110:	4293      	cmp	r3, r2
 8004112:	d100      	bne.n	8004116 <memset+0xa>
 8004114:	4770      	bx	lr
 8004116:	f803 1b01 	strb.w	r1, [r3], #1
 800411a:	e7f9      	b.n	8004110 <memset+0x4>

0800411c <__errno>:
 800411c:	4b01      	ldr	r3, [pc, #4]	; (8004124 <__errno+0x8>)
 800411e:	6818      	ldr	r0, [r3, #0]
 8004120:	4770      	bx	lr
 8004122:	bf00      	nop
 8004124:	20000058 	.word	0x20000058

08004128 <__libc_init_array>:
 8004128:	b570      	push	{r4, r5, r6, lr}
 800412a:	4d0d      	ldr	r5, [pc, #52]	; (8004160 <__libc_init_array+0x38>)
 800412c:	4c0d      	ldr	r4, [pc, #52]	; (8004164 <__libc_init_array+0x3c>)
 800412e:	1b64      	subs	r4, r4, r5
 8004130:	10a4      	asrs	r4, r4, #2
 8004132:	2600      	movs	r6, #0
 8004134:	42a6      	cmp	r6, r4
 8004136:	d109      	bne.n	800414c <__libc_init_array+0x24>
 8004138:	4d0b      	ldr	r5, [pc, #44]	; (8004168 <__libc_init_array+0x40>)
 800413a:	4c0c      	ldr	r4, [pc, #48]	; (800416c <__libc_init_array+0x44>)
 800413c:	f000 fc6a 	bl	8004a14 <_init>
 8004140:	1b64      	subs	r4, r4, r5
 8004142:	10a4      	asrs	r4, r4, #2
 8004144:	2600      	movs	r6, #0
 8004146:	42a6      	cmp	r6, r4
 8004148:	d105      	bne.n	8004156 <__libc_init_array+0x2e>
 800414a:	bd70      	pop	{r4, r5, r6, pc}
 800414c:	f855 3b04 	ldr.w	r3, [r5], #4
 8004150:	4798      	blx	r3
 8004152:	3601      	adds	r6, #1
 8004154:	e7ee      	b.n	8004134 <__libc_init_array+0xc>
 8004156:	f855 3b04 	ldr.w	r3, [r5], #4
 800415a:	4798      	blx	r3
 800415c:	3601      	adds	r6, #1
 800415e:	e7f2      	b.n	8004146 <__libc_init_array+0x1e>
 8004160:	08004b74 	.word	0x08004b74
 8004164:	08004b74 	.word	0x08004b74
 8004168:	08004b74 	.word	0x08004b74
 800416c:	08004b78 	.word	0x08004b78

08004170 <__retarget_lock_acquire_recursive>:
 8004170:	4770      	bx	lr

08004172 <__retarget_lock_release_recursive>:
 8004172:	4770      	bx	lr

08004174 <_free_r>:
 8004174:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004176:	2900      	cmp	r1, #0
 8004178:	d044      	beq.n	8004204 <_free_r+0x90>
 800417a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800417e:	9001      	str	r0, [sp, #4]
 8004180:	2b00      	cmp	r3, #0
 8004182:	f1a1 0404 	sub.w	r4, r1, #4
 8004186:	bfb8      	it	lt
 8004188:	18e4      	addlt	r4, r4, r3
 800418a:	f000 f8df 	bl	800434c <__malloc_lock>
 800418e:	4a1e      	ldr	r2, [pc, #120]	; (8004208 <_free_r+0x94>)
 8004190:	9801      	ldr	r0, [sp, #4]
 8004192:	6813      	ldr	r3, [r2, #0]
 8004194:	b933      	cbnz	r3, 80041a4 <_free_r+0x30>
 8004196:	6063      	str	r3, [r4, #4]
 8004198:	6014      	str	r4, [r2, #0]
 800419a:	b003      	add	sp, #12
 800419c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80041a0:	f000 b8da 	b.w	8004358 <__malloc_unlock>
 80041a4:	42a3      	cmp	r3, r4
 80041a6:	d908      	bls.n	80041ba <_free_r+0x46>
 80041a8:	6825      	ldr	r5, [r4, #0]
 80041aa:	1961      	adds	r1, r4, r5
 80041ac:	428b      	cmp	r3, r1
 80041ae:	bf01      	itttt	eq
 80041b0:	6819      	ldreq	r1, [r3, #0]
 80041b2:	685b      	ldreq	r3, [r3, #4]
 80041b4:	1949      	addeq	r1, r1, r5
 80041b6:	6021      	streq	r1, [r4, #0]
 80041b8:	e7ed      	b.n	8004196 <_free_r+0x22>
 80041ba:	461a      	mov	r2, r3
 80041bc:	685b      	ldr	r3, [r3, #4]
 80041be:	b10b      	cbz	r3, 80041c4 <_free_r+0x50>
 80041c0:	42a3      	cmp	r3, r4
 80041c2:	d9fa      	bls.n	80041ba <_free_r+0x46>
 80041c4:	6811      	ldr	r1, [r2, #0]
 80041c6:	1855      	adds	r5, r2, r1
 80041c8:	42a5      	cmp	r5, r4
 80041ca:	d10b      	bne.n	80041e4 <_free_r+0x70>
 80041cc:	6824      	ldr	r4, [r4, #0]
 80041ce:	4421      	add	r1, r4
 80041d0:	1854      	adds	r4, r2, r1
 80041d2:	42a3      	cmp	r3, r4
 80041d4:	6011      	str	r1, [r2, #0]
 80041d6:	d1e0      	bne.n	800419a <_free_r+0x26>
 80041d8:	681c      	ldr	r4, [r3, #0]
 80041da:	685b      	ldr	r3, [r3, #4]
 80041dc:	6053      	str	r3, [r2, #4]
 80041de:	440c      	add	r4, r1
 80041e0:	6014      	str	r4, [r2, #0]
 80041e2:	e7da      	b.n	800419a <_free_r+0x26>
 80041e4:	d902      	bls.n	80041ec <_free_r+0x78>
 80041e6:	230c      	movs	r3, #12
 80041e8:	6003      	str	r3, [r0, #0]
 80041ea:	e7d6      	b.n	800419a <_free_r+0x26>
 80041ec:	6825      	ldr	r5, [r4, #0]
 80041ee:	1961      	adds	r1, r4, r5
 80041f0:	428b      	cmp	r3, r1
 80041f2:	bf04      	itt	eq
 80041f4:	6819      	ldreq	r1, [r3, #0]
 80041f6:	685b      	ldreq	r3, [r3, #4]
 80041f8:	6063      	str	r3, [r4, #4]
 80041fa:	bf04      	itt	eq
 80041fc:	1949      	addeq	r1, r1, r5
 80041fe:	6021      	streq	r1, [r4, #0]
 8004200:	6054      	str	r4, [r2, #4]
 8004202:	e7ca      	b.n	800419a <_free_r+0x26>
 8004204:	b003      	add	sp, #12
 8004206:	bd30      	pop	{r4, r5, pc}
 8004208:	20000334 	.word	0x20000334

0800420c <sbrk_aligned>:
 800420c:	b570      	push	{r4, r5, r6, lr}
 800420e:	4e0e      	ldr	r6, [pc, #56]	; (8004248 <sbrk_aligned+0x3c>)
 8004210:	460c      	mov	r4, r1
 8004212:	6831      	ldr	r1, [r6, #0]
 8004214:	4605      	mov	r5, r0
 8004216:	b911      	cbnz	r1, 800421e <sbrk_aligned+0x12>
 8004218:	f000 fba6 	bl	8004968 <_sbrk_r>
 800421c:	6030      	str	r0, [r6, #0]
 800421e:	4621      	mov	r1, r4
 8004220:	4628      	mov	r0, r5
 8004222:	f000 fba1 	bl	8004968 <_sbrk_r>
 8004226:	1c43      	adds	r3, r0, #1
 8004228:	d00a      	beq.n	8004240 <sbrk_aligned+0x34>
 800422a:	1cc4      	adds	r4, r0, #3
 800422c:	f024 0403 	bic.w	r4, r4, #3
 8004230:	42a0      	cmp	r0, r4
 8004232:	d007      	beq.n	8004244 <sbrk_aligned+0x38>
 8004234:	1a21      	subs	r1, r4, r0
 8004236:	4628      	mov	r0, r5
 8004238:	f000 fb96 	bl	8004968 <_sbrk_r>
 800423c:	3001      	adds	r0, #1
 800423e:	d101      	bne.n	8004244 <sbrk_aligned+0x38>
 8004240:	f04f 34ff 	mov.w	r4, #4294967295
 8004244:	4620      	mov	r0, r4
 8004246:	bd70      	pop	{r4, r5, r6, pc}
 8004248:	20000338 	.word	0x20000338

0800424c <_malloc_r>:
 800424c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004250:	1ccd      	adds	r5, r1, #3
 8004252:	f025 0503 	bic.w	r5, r5, #3
 8004256:	3508      	adds	r5, #8
 8004258:	2d0c      	cmp	r5, #12
 800425a:	bf38      	it	cc
 800425c:	250c      	movcc	r5, #12
 800425e:	2d00      	cmp	r5, #0
 8004260:	4607      	mov	r7, r0
 8004262:	db01      	blt.n	8004268 <_malloc_r+0x1c>
 8004264:	42a9      	cmp	r1, r5
 8004266:	d905      	bls.n	8004274 <_malloc_r+0x28>
 8004268:	230c      	movs	r3, #12
 800426a:	603b      	str	r3, [r7, #0]
 800426c:	2600      	movs	r6, #0
 800426e:	4630      	mov	r0, r6
 8004270:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004274:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8004348 <_malloc_r+0xfc>
 8004278:	f000 f868 	bl	800434c <__malloc_lock>
 800427c:	f8d8 3000 	ldr.w	r3, [r8]
 8004280:	461c      	mov	r4, r3
 8004282:	bb5c      	cbnz	r4, 80042dc <_malloc_r+0x90>
 8004284:	4629      	mov	r1, r5
 8004286:	4638      	mov	r0, r7
 8004288:	f7ff ffc0 	bl	800420c <sbrk_aligned>
 800428c:	1c43      	adds	r3, r0, #1
 800428e:	4604      	mov	r4, r0
 8004290:	d155      	bne.n	800433e <_malloc_r+0xf2>
 8004292:	f8d8 4000 	ldr.w	r4, [r8]
 8004296:	4626      	mov	r6, r4
 8004298:	2e00      	cmp	r6, #0
 800429a:	d145      	bne.n	8004328 <_malloc_r+0xdc>
 800429c:	2c00      	cmp	r4, #0
 800429e:	d048      	beq.n	8004332 <_malloc_r+0xe6>
 80042a0:	6823      	ldr	r3, [r4, #0]
 80042a2:	4631      	mov	r1, r6
 80042a4:	4638      	mov	r0, r7
 80042a6:	eb04 0903 	add.w	r9, r4, r3
 80042aa:	f000 fb5d 	bl	8004968 <_sbrk_r>
 80042ae:	4581      	cmp	r9, r0
 80042b0:	d13f      	bne.n	8004332 <_malloc_r+0xe6>
 80042b2:	6821      	ldr	r1, [r4, #0]
 80042b4:	1a6d      	subs	r5, r5, r1
 80042b6:	4629      	mov	r1, r5
 80042b8:	4638      	mov	r0, r7
 80042ba:	f7ff ffa7 	bl	800420c <sbrk_aligned>
 80042be:	3001      	adds	r0, #1
 80042c0:	d037      	beq.n	8004332 <_malloc_r+0xe6>
 80042c2:	6823      	ldr	r3, [r4, #0]
 80042c4:	442b      	add	r3, r5
 80042c6:	6023      	str	r3, [r4, #0]
 80042c8:	f8d8 3000 	ldr.w	r3, [r8]
 80042cc:	2b00      	cmp	r3, #0
 80042ce:	d038      	beq.n	8004342 <_malloc_r+0xf6>
 80042d0:	685a      	ldr	r2, [r3, #4]
 80042d2:	42a2      	cmp	r2, r4
 80042d4:	d12b      	bne.n	800432e <_malloc_r+0xe2>
 80042d6:	2200      	movs	r2, #0
 80042d8:	605a      	str	r2, [r3, #4]
 80042da:	e00f      	b.n	80042fc <_malloc_r+0xb0>
 80042dc:	6822      	ldr	r2, [r4, #0]
 80042de:	1b52      	subs	r2, r2, r5
 80042e0:	d41f      	bmi.n	8004322 <_malloc_r+0xd6>
 80042e2:	2a0b      	cmp	r2, #11
 80042e4:	d917      	bls.n	8004316 <_malloc_r+0xca>
 80042e6:	1961      	adds	r1, r4, r5
 80042e8:	42a3      	cmp	r3, r4
 80042ea:	6025      	str	r5, [r4, #0]
 80042ec:	bf18      	it	ne
 80042ee:	6059      	strne	r1, [r3, #4]
 80042f0:	6863      	ldr	r3, [r4, #4]
 80042f2:	bf08      	it	eq
 80042f4:	f8c8 1000 	streq.w	r1, [r8]
 80042f8:	5162      	str	r2, [r4, r5]
 80042fa:	604b      	str	r3, [r1, #4]
 80042fc:	4638      	mov	r0, r7
 80042fe:	f104 060b 	add.w	r6, r4, #11
 8004302:	f000 f829 	bl	8004358 <__malloc_unlock>
 8004306:	f026 0607 	bic.w	r6, r6, #7
 800430a:	1d23      	adds	r3, r4, #4
 800430c:	1af2      	subs	r2, r6, r3
 800430e:	d0ae      	beq.n	800426e <_malloc_r+0x22>
 8004310:	1b9b      	subs	r3, r3, r6
 8004312:	50a3      	str	r3, [r4, r2]
 8004314:	e7ab      	b.n	800426e <_malloc_r+0x22>
 8004316:	42a3      	cmp	r3, r4
 8004318:	6862      	ldr	r2, [r4, #4]
 800431a:	d1dd      	bne.n	80042d8 <_malloc_r+0x8c>
 800431c:	f8c8 2000 	str.w	r2, [r8]
 8004320:	e7ec      	b.n	80042fc <_malloc_r+0xb0>
 8004322:	4623      	mov	r3, r4
 8004324:	6864      	ldr	r4, [r4, #4]
 8004326:	e7ac      	b.n	8004282 <_malloc_r+0x36>
 8004328:	4634      	mov	r4, r6
 800432a:	6876      	ldr	r6, [r6, #4]
 800432c:	e7b4      	b.n	8004298 <_malloc_r+0x4c>
 800432e:	4613      	mov	r3, r2
 8004330:	e7cc      	b.n	80042cc <_malloc_r+0x80>
 8004332:	230c      	movs	r3, #12
 8004334:	603b      	str	r3, [r7, #0]
 8004336:	4638      	mov	r0, r7
 8004338:	f000 f80e 	bl	8004358 <__malloc_unlock>
 800433c:	e797      	b.n	800426e <_malloc_r+0x22>
 800433e:	6025      	str	r5, [r4, #0]
 8004340:	e7dc      	b.n	80042fc <_malloc_r+0xb0>
 8004342:	605b      	str	r3, [r3, #4]
 8004344:	deff      	udf	#255	; 0xff
 8004346:	bf00      	nop
 8004348:	20000334 	.word	0x20000334

0800434c <__malloc_lock>:
 800434c:	4801      	ldr	r0, [pc, #4]	; (8004354 <__malloc_lock+0x8>)
 800434e:	f7ff bf0f 	b.w	8004170 <__retarget_lock_acquire_recursive>
 8004352:	bf00      	nop
 8004354:	20000330 	.word	0x20000330

08004358 <__malloc_unlock>:
 8004358:	4801      	ldr	r0, [pc, #4]	; (8004360 <__malloc_unlock+0x8>)
 800435a:	f7ff bf0a 	b.w	8004172 <__retarget_lock_release_recursive>
 800435e:	bf00      	nop
 8004360:	20000330 	.word	0x20000330

08004364 <__ssputs_r>:
 8004364:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004368:	688e      	ldr	r6, [r1, #8]
 800436a:	461f      	mov	r7, r3
 800436c:	42be      	cmp	r6, r7
 800436e:	680b      	ldr	r3, [r1, #0]
 8004370:	4682      	mov	sl, r0
 8004372:	460c      	mov	r4, r1
 8004374:	4690      	mov	r8, r2
 8004376:	d82c      	bhi.n	80043d2 <__ssputs_r+0x6e>
 8004378:	898a      	ldrh	r2, [r1, #12]
 800437a:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800437e:	d026      	beq.n	80043ce <__ssputs_r+0x6a>
 8004380:	6965      	ldr	r5, [r4, #20]
 8004382:	6909      	ldr	r1, [r1, #16]
 8004384:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004388:	eba3 0901 	sub.w	r9, r3, r1
 800438c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8004390:	1c7b      	adds	r3, r7, #1
 8004392:	444b      	add	r3, r9
 8004394:	106d      	asrs	r5, r5, #1
 8004396:	429d      	cmp	r5, r3
 8004398:	bf38      	it	cc
 800439a:	461d      	movcc	r5, r3
 800439c:	0553      	lsls	r3, r2, #21
 800439e:	d527      	bpl.n	80043f0 <__ssputs_r+0x8c>
 80043a0:	4629      	mov	r1, r5
 80043a2:	f7ff ff53 	bl	800424c <_malloc_r>
 80043a6:	4606      	mov	r6, r0
 80043a8:	b360      	cbz	r0, 8004404 <__ssputs_r+0xa0>
 80043aa:	6921      	ldr	r1, [r4, #16]
 80043ac:	464a      	mov	r2, r9
 80043ae:	f000 faeb 	bl	8004988 <memcpy>
 80043b2:	89a3      	ldrh	r3, [r4, #12]
 80043b4:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 80043b8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80043bc:	81a3      	strh	r3, [r4, #12]
 80043be:	6126      	str	r6, [r4, #16]
 80043c0:	6165      	str	r5, [r4, #20]
 80043c2:	444e      	add	r6, r9
 80043c4:	eba5 0509 	sub.w	r5, r5, r9
 80043c8:	6026      	str	r6, [r4, #0]
 80043ca:	60a5      	str	r5, [r4, #8]
 80043cc:	463e      	mov	r6, r7
 80043ce:	42be      	cmp	r6, r7
 80043d0:	d900      	bls.n	80043d4 <__ssputs_r+0x70>
 80043d2:	463e      	mov	r6, r7
 80043d4:	6820      	ldr	r0, [r4, #0]
 80043d6:	4632      	mov	r2, r6
 80043d8:	4641      	mov	r1, r8
 80043da:	f000 faab 	bl	8004934 <memmove>
 80043de:	68a3      	ldr	r3, [r4, #8]
 80043e0:	1b9b      	subs	r3, r3, r6
 80043e2:	60a3      	str	r3, [r4, #8]
 80043e4:	6823      	ldr	r3, [r4, #0]
 80043e6:	4433      	add	r3, r6
 80043e8:	6023      	str	r3, [r4, #0]
 80043ea:	2000      	movs	r0, #0
 80043ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80043f0:	462a      	mov	r2, r5
 80043f2:	f000 fad7 	bl	80049a4 <_realloc_r>
 80043f6:	4606      	mov	r6, r0
 80043f8:	2800      	cmp	r0, #0
 80043fa:	d1e0      	bne.n	80043be <__ssputs_r+0x5a>
 80043fc:	6921      	ldr	r1, [r4, #16]
 80043fe:	4650      	mov	r0, sl
 8004400:	f7ff feb8 	bl	8004174 <_free_r>
 8004404:	230c      	movs	r3, #12
 8004406:	f8ca 3000 	str.w	r3, [sl]
 800440a:	89a3      	ldrh	r3, [r4, #12]
 800440c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004410:	81a3      	strh	r3, [r4, #12]
 8004412:	f04f 30ff 	mov.w	r0, #4294967295
 8004416:	e7e9      	b.n	80043ec <__ssputs_r+0x88>

08004418 <_svfiprintf_r>:
 8004418:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800441c:	4698      	mov	r8, r3
 800441e:	898b      	ldrh	r3, [r1, #12]
 8004420:	061b      	lsls	r3, r3, #24
 8004422:	b09d      	sub	sp, #116	; 0x74
 8004424:	4607      	mov	r7, r0
 8004426:	460d      	mov	r5, r1
 8004428:	4614      	mov	r4, r2
 800442a:	d50e      	bpl.n	800444a <_svfiprintf_r+0x32>
 800442c:	690b      	ldr	r3, [r1, #16]
 800442e:	b963      	cbnz	r3, 800444a <_svfiprintf_r+0x32>
 8004430:	2140      	movs	r1, #64	; 0x40
 8004432:	f7ff ff0b 	bl	800424c <_malloc_r>
 8004436:	6028      	str	r0, [r5, #0]
 8004438:	6128      	str	r0, [r5, #16]
 800443a:	b920      	cbnz	r0, 8004446 <_svfiprintf_r+0x2e>
 800443c:	230c      	movs	r3, #12
 800443e:	603b      	str	r3, [r7, #0]
 8004440:	f04f 30ff 	mov.w	r0, #4294967295
 8004444:	e0d0      	b.n	80045e8 <_svfiprintf_r+0x1d0>
 8004446:	2340      	movs	r3, #64	; 0x40
 8004448:	616b      	str	r3, [r5, #20]
 800444a:	2300      	movs	r3, #0
 800444c:	9309      	str	r3, [sp, #36]	; 0x24
 800444e:	2320      	movs	r3, #32
 8004450:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8004454:	f8cd 800c 	str.w	r8, [sp, #12]
 8004458:	2330      	movs	r3, #48	; 0x30
 800445a:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8004600 <_svfiprintf_r+0x1e8>
 800445e:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8004462:	f04f 0901 	mov.w	r9, #1
 8004466:	4623      	mov	r3, r4
 8004468:	469a      	mov	sl, r3
 800446a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800446e:	b10a      	cbz	r2, 8004474 <_svfiprintf_r+0x5c>
 8004470:	2a25      	cmp	r2, #37	; 0x25
 8004472:	d1f9      	bne.n	8004468 <_svfiprintf_r+0x50>
 8004474:	ebba 0b04 	subs.w	fp, sl, r4
 8004478:	d00b      	beq.n	8004492 <_svfiprintf_r+0x7a>
 800447a:	465b      	mov	r3, fp
 800447c:	4622      	mov	r2, r4
 800447e:	4629      	mov	r1, r5
 8004480:	4638      	mov	r0, r7
 8004482:	f7ff ff6f 	bl	8004364 <__ssputs_r>
 8004486:	3001      	adds	r0, #1
 8004488:	f000 80a9 	beq.w	80045de <_svfiprintf_r+0x1c6>
 800448c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800448e:	445a      	add	r2, fp
 8004490:	9209      	str	r2, [sp, #36]	; 0x24
 8004492:	f89a 3000 	ldrb.w	r3, [sl]
 8004496:	2b00      	cmp	r3, #0
 8004498:	f000 80a1 	beq.w	80045de <_svfiprintf_r+0x1c6>
 800449c:	2300      	movs	r3, #0
 800449e:	f04f 32ff 	mov.w	r2, #4294967295
 80044a2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80044a6:	f10a 0a01 	add.w	sl, sl, #1
 80044aa:	9304      	str	r3, [sp, #16]
 80044ac:	9307      	str	r3, [sp, #28]
 80044ae:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80044b2:	931a      	str	r3, [sp, #104]	; 0x68
 80044b4:	4654      	mov	r4, sl
 80044b6:	2205      	movs	r2, #5
 80044b8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80044bc:	4850      	ldr	r0, [pc, #320]	; (8004600 <_svfiprintf_r+0x1e8>)
 80044be:	f7fb feaf 	bl	8000220 <memchr>
 80044c2:	9a04      	ldr	r2, [sp, #16]
 80044c4:	b9d8      	cbnz	r0, 80044fe <_svfiprintf_r+0xe6>
 80044c6:	06d0      	lsls	r0, r2, #27
 80044c8:	bf44      	itt	mi
 80044ca:	2320      	movmi	r3, #32
 80044cc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80044d0:	0711      	lsls	r1, r2, #28
 80044d2:	bf44      	itt	mi
 80044d4:	232b      	movmi	r3, #43	; 0x2b
 80044d6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80044da:	f89a 3000 	ldrb.w	r3, [sl]
 80044de:	2b2a      	cmp	r3, #42	; 0x2a
 80044e0:	d015      	beq.n	800450e <_svfiprintf_r+0xf6>
 80044e2:	9a07      	ldr	r2, [sp, #28]
 80044e4:	4654      	mov	r4, sl
 80044e6:	2000      	movs	r0, #0
 80044e8:	f04f 0c0a 	mov.w	ip, #10
 80044ec:	4621      	mov	r1, r4
 80044ee:	f811 3b01 	ldrb.w	r3, [r1], #1
 80044f2:	3b30      	subs	r3, #48	; 0x30
 80044f4:	2b09      	cmp	r3, #9
 80044f6:	d94d      	bls.n	8004594 <_svfiprintf_r+0x17c>
 80044f8:	b1b0      	cbz	r0, 8004528 <_svfiprintf_r+0x110>
 80044fa:	9207      	str	r2, [sp, #28]
 80044fc:	e014      	b.n	8004528 <_svfiprintf_r+0x110>
 80044fe:	eba0 0308 	sub.w	r3, r0, r8
 8004502:	fa09 f303 	lsl.w	r3, r9, r3
 8004506:	4313      	orrs	r3, r2
 8004508:	9304      	str	r3, [sp, #16]
 800450a:	46a2      	mov	sl, r4
 800450c:	e7d2      	b.n	80044b4 <_svfiprintf_r+0x9c>
 800450e:	9b03      	ldr	r3, [sp, #12]
 8004510:	1d19      	adds	r1, r3, #4
 8004512:	681b      	ldr	r3, [r3, #0]
 8004514:	9103      	str	r1, [sp, #12]
 8004516:	2b00      	cmp	r3, #0
 8004518:	bfbb      	ittet	lt
 800451a:	425b      	neglt	r3, r3
 800451c:	f042 0202 	orrlt.w	r2, r2, #2
 8004520:	9307      	strge	r3, [sp, #28]
 8004522:	9307      	strlt	r3, [sp, #28]
 8004524:	bfb8      	it	lt
 8004526:	9204      	strlt	r2, [sp, #16]
 8004528:	7823      	ldrb	r3, [r4, #0]
 800452a:	2b2e      	cmp	r3, #46	; 0x2e
 800452c:	d10c      	bne.n	8004548 <_svfiprintf_r+0x130>
 800452e:	7863      	ldrb	r3, [r4, #1]
 8004530:	2b2a      	cmp	r3, #42	; 0x2a
 8004532:	d134      	bne.n	800459e <_svfiprintf_r+0x186>
 8004534:	9b03      	ldr	r3, [sp, #12]
 8004536:	1d1a      	adds	r2, r3, #4
 8004538:	681b      	ldr	r3, [r3, #0]
 800453a:	9203      	str	r2, [sp, #12]
 800453c:	2b00      	cmp	r3, #0
 800453e:	bfb8      	it	lt
 8004540:	f04f 33ff 	movlt.w	r3, #4294967295
 8004544:	3402      	adds	r4, #2
 8004546:	9305      	str	r3, [sp, #20]
 8004548:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 8004610 <_svfiprintf_r+0x1f8>
 800454c:	7821      	ldrb	r1, [r4, #0]
 800454e:	2203      	movs	r2, #3
 8004550:	4650      	mov	r0, sl
 8004552:	f7fb fe65 	bl	8000220 <memchr>
 8004556:	b138      	cbz	r0, 8004568 <_svfiprintf_r+0x150>
 8004558:	9b04      	ldr	r3, [sp, #16]
 800455a:	eba0 000a 	sub.w	r0, r0, sl
 800455e:	2240      	movs	r2, #64	; 0x40
 8004560:	4082      	lsls	r2, r0
 8004562:	4313      	orrs	r3, r2
 8004564:	3401      	adds	r4, #1
 8004566:	9304      	str	r3, [sp, #16]
 8004568:	f814 1b01 	ldrb.w	r1, [r4], #1
 800456c:	4825      	ldr	r0, [pc, #148]	; (8004604 <_svfiprintf_r+0x1ec>)
 800456e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8004572:	2206      	movs	r2, #6
 8004574:	f7fb fe54 	bl	8000220 <memchr>
 8004578:	2800      	cmp	r0, #0
 800457a:	d038      	beq.n	80045ee <_svfiprintf_r+0x1d6>
 800457c:	4b22      	ldr	r3, [pc, #136]	; (8004608 <_svfiprintf_r+0x1f0>)
 800457e:	bb1b      	cbnz	r3, 80045c8 <_svfiprintf_r+0x1b0>
 8004580:	9b03      	ldr	r3, [sp, #12]
 8004582:	3307      	adds	r3, #7
 8004584:	f023 0307 	bic.w	r3, r3, #7
 8004588:	3308      	adds	r3, #8
 800458a:	9303      	str	r3, [sp, #12]
 800458c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800458e:	4433      	add	r3, r6
 8004590:	9309      	str	r3, [sp, #36]	; 0x24
 8004592:	e768      	b.n	8004466 <_svfiprintf_r+0x4e>
 8004594:	fb0c 3202 	mla	r2, ip, r2, r3
 8004598:	460c      	mov	r4, r1
 800459a:	2001      	movs	r0, #1
 800459c:	e7a6      	b.n	80044ec <_svfiprintf_r+0xd4>
 800459e:	2300      	movs	r3, #0
 80045a0:	3401      	adds	r4, #1
 80045a2:	9305      	str	r3, [sp, #20]
 80045a4:	4619      	mov	r1, r3
 80045a6:	f04f 0c0a 	mov.w	ip, #10
 80045aa:	4620      	mov	r0, r4
 80045ac:	f810 2b01 	ldrb.w	r2, [r0], #1
 80045b0:	3a30      	subs	r2, #48	; 0x30
 80045b2:	2a09      	cmp	r2, #9
 80045b4:	d903      	bls.n	80045be <_svfiprintf_r+0x1a6>
 80045b6:	2b00      	cmp	r3, #0
 80045b8:	d0c6      	beq.n	8004548 <_svfiprintf_r+0x130>
 80045ba:	9105      	str	r1, [sp, #20]
 80045bc:	e7c4      	b.n	8004548 <_svfiprintf_r+0x130>
 80045be:	fb0c 2101 	mla	r1, ip, r1, r2
 80045c2:	4604      	mov	r4, r0
 80045c4:	2301      	movs	r3, #1
 80045c6:	e7f0      	b.n	80045aa <_svfiprintf_r+0x192>
 80045c8:	ab03      	add	r3, sp, #12
 80045ca:	9300      	str	r3, [sp, #0]
 80045cc:	462a      	mov	r2, r5
 80045ce:	4b0f      	ldr	r3, [pc, #60]	; (800460c <_svfiprintf_r+0x1f4>)
 80045d0:	a904      	add	r1, sp, #16
 80045d2:	4638      	mov	r0, r7
 80045d4:	f3af 8000 	nop.w
 80045d8:	1c42      	adds	r2, r0, #1
 80045da:	4606      	mov	r6, r0
 80045dc:	d1d6      	bne.n	800458c <_svfiprintf_r+0x174>
 80045de:	89ab      	ldrh	r3, [r5, #12]
 80045e0:	065b      	lsls	r3, r3, #25
 80045e2:	f53f af2d 	bmi.w	8004440 <_svfiprintf_r+0x28>
 80045e6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80045e8:	b01d      	add	sp, #116	; 0x74
 80045ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80045ee:	ab03      	add	r3, sp, #12
 80045f0:	9300      	str	r3, [sp, #0]
 80045f2:	462a      	mov	r2, r5
 80045f4:	4b05      	ldr	r3, [pc, #20]	; (800460c <_svfiprintf_r+0x1f4>)
 80045f6:	a904      	add	r1, sp, #16
 80045f8:	4638      	mov	r0, r7
 80045fa:	f000 f879 	bl	80046f0 <_printf_i>
 80045fe:	e7eb      	b.n	80045d8 <_svfiprintf_r+0x1c0>
 8004600:	08004b38 	.word	0x08004b38
 8004604:	08004b42 	.word	0x08004b42
 8004608:	00000000 	.word	0x00000000
 800460c:	08004365 	.word	0x08004365
 8004610:	08004b3e 	.word	0x08004b3e

08004614 <_printf_common>:
 8004614:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004618:	4616      	mov	r6, r2
 800461a:	4699      	mov	r9, r3
 800461c:	688a      	ldr	r2, [r1, #8]
 800461e:	690b      	ldr	r3, [r1, #16]
 8004620:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8004624:	4293      	cmp	r3, r2
 8004626:	bfb8      	it	lt
 8004628:	4613      	movlt	r3, r2
 800462a:	6033      	str	r3, [r6, #0]
 800462c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8004630:	4607      	mov	r7, r0
 8004632:	460c      	mov	r4, r1
 8004634:	b10a      	cbz	r2, 800463a <_printf_common+0x26>
 8004636:	3301      	adds	r3, #1
 8004638:	6033      	str	r3, [r6, #0]
 800463a:	6823      	ldr	r3, [r4, #0]
 800463c:	0699      	lsls	r1, r3, #26
 800463e:	bf42      	ittt	mi
 8004640:	6833      	ldrmi	r3, [r6, #0]
 8004642:	3302      	addmi	r3, #2
 8004644:	6033      	strmi	r3, [r6, #0]
 8004646:	6825      	ldr	r5, [r4, #0]
 8004648:	f015 0506 	ands.w	r5, r5, #6
 800464c:	d106      	bne.n	800465c <_printf_common+0x48>
 800464e:	f104 0a19 	add.w	sl, r4, #25
 8004652:	68e3      	ldr	r3, [r4, #12]
 8004654:	6832      	ldr	r2, [r6, #0]
 8004656:	1a9b      	subs	r3, r3, r2
 8004658:	42ab      	cmp	r3, r5
 800465a:	dc26      	bgt.n	80046aa <_printf_common+0x96>
 800465c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8004660:	1e13      	subs	r3, r2, #0
 8004662:	6822      	ldr	r2, [r4, #0]
 8004664:	bf18      	it	ne
 8004666:	2301      	movne	r3, #1
 8004668:	0692      	lsls	r2, r2, #26
 800466a:	d42b      	bmi.n	80046c4 <_printf_common+0xb0>
 800466c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8004670:	4649      	mov	r1, r9
 8004672:	4638      	mov	r0, r7
 8004674:	47c0      	blx	r8
 8004676:	3001      	adds	r0, #1
 8004678:	d01e      	beq.n	80046b8 <_printf_common+0xa4>
 800467a:	6823      	ldr	r3, [r4, #0]
 800467c:	6922      	ldr	r2, [r4, #16]
 800467e:	f003 0306 	and.w	r3, r3, #6
 8004682:	2b04      	cmp	r3, #4
 8004684:	bf02      	ittt	eq
 8004686:	68e5      	ldreq	r5, [r4, #12]
 8004688:	6833      	ldreq	r3, [r6, #0]
 800468a:	1aed      	subeq	r5, r5, r3
 800468c:	68a3      	ldr	r3, [r4, #8]
 800468e:	bf0c      	ite	eq
 8004690:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004694:	2500      	movne	r5, #0
 8004696:	4293      	cmp	r3, r2
 8004698:	bfc4      	itt	gt
 800469a:	1a9b      	subgt	r3, r3, r2
 800469c:	18ed      	addgt	r5, r5, r3
 800469e:	2600      	movs	r6, #0
 80046a0:	341a      	adds	r4, #26
 80046a2:	42b5      	cmp	r5, r6
 80046a4:	d11a      	bne.n	80046dc <_printf_common+0xc8>
 80046a6:	2000      	movs	r0, #0
 80046a8:	e008      	b.n	80046bc <_printf_common+0xa8>
 80046aa:	2301      	movs	r3, #1
 80046ac:	4652      	mov	r2, sl
 80046ae:	4649      	mov	r1, r9
 80046b0:	4638      	mov	r0, r7
 80046b2:	47c0      	blx	r8
 80046b4:	3001      	adds	r0, #1
 80046b6:	d103      	bne.n	80046c0 <_printf_common+0xac>
 80046b8:	f04f 30ff 	mov.w	r0, #4294967295
 80046bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80046c0:	3501      	adds	r5, #1
 80046c2:	e7c6      	b.n	8004652 <_printf_common+0x3e>
 80046c4:	18e1      	adds	r1, r4, r3
 80046c6:	1c5a      	adds	r2, r3, #1
 80046c8:	2030      	movs	r0, #48	; 0x30
 80046ca:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80046ce:	4422      	add	r2, r4
 80046d0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80046d4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80046d8:	3302      	adds	r3, #2
 80046da:	e7c7      	b.n	800466c <_printf_common+0x58>
 80046dc:	2301      	movs	r3, #1
 80046de:	4622      	mov	r2, r4
 80046e0:	4649      	mov	r1, r9
 80046e2:	4638      	mov	r0, r7
 80046e4:	47c0      	blx	r8
 80046e6:	3001      	adds	r0, #1
 80046e8:	d0e6      	beq.n	80046b8 <_printf_common+0xa4>
 80046ea:	3601      	adds	r6, #1
 80046ec:	e7d9      	b.n	80046a2 <_printf_common+0x8e>
	...

080046f0 <_printf_i>:
 80046f0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80046f4:	7e0f      	ldrb	r7, [r1, #24]
 80046f6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80046f8:	2f78      	cmp	r7, #120	; 0x78
 80046fa:	4691      	mov	r9, r2
 80046fc:	4680      	mov	r8, r0
 80046fe:	460c      	mov	r4, r1
 8004700:	469a      	mov	sl, r3
 8004702:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8004706:	d807      	bhi.n	8004718 <_printf_i+0x28>
 8004708:	2f62      	cmp	r7, #98	; 0x62
 800470a:	d80a      	bhi.n	8004722 <_printf_i+0x32>
 800470c:	2f00      	cmp	r7, #0
 800470e:	f000 80d4 	beq.w	80048ba <_printf_i+0x1ca>
 8004712:	2f58      	cmp	r7, #88	; 0x58
 8004714:	f000 80c0 	beq.w	8004898 <_printf_i+0x1a8>
 8004718:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800471c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8004720:	e03a      	b.n	8004798 <_printf_i+0xa8>
 8004722:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8004726:	2b15      	cmp	r3, #21
 8004728:	d8f6      	bhi.n	8004718 <_printf_i+0x28>
 800472a:	a101      	add	r1, pc, #4	; (adr r1, 8004730 <_printf_i+0x40>)
 800472c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8004730:	08004789 	.word	0x08004789
 8004734:	0800479d 	.word	0x0800479d
 8004738:	08004719 	.word	0x08004719
 800473c:	08004719 	.word	0x08004719
 8004740:	08004719 	.word	0x08004719
 8004744:	08004719 	.word	0x08004719
 8004748:	0800479d 	.word	0x0800479d
 800474c:	08004719 	.word	0x08004719
 8004750:	08004719 	.word	0x08004719
 8004754:	08004719 	.word	0x08004719
 8004758:	08004719 	.word	0x08004719
 800475c:	080048a1 	.word	0x080048a1
 8004760:	080047c9 	.word	0x080047c9
 8004764:	0800485b 	.word	0x0800485b
 8004768:	08004719 	.word	0x08004719
 800476c:	08004719 	.word	0x08004719
 8004770:	080048c3 	.word	0x080048c3
 8004774:	08004719 	.word	0x08004719
 8004778:	080047c9 	.word	0x080047c9
 800477c:	08004719 	.word	0x08004719
 8004780:	08004719 	.word	0x08004719
 8004784:	08004863 	.word	0x08004863
 8004788:	682b      	ldr	r3, [r5, #0]
 800478a:	1d1a      	adds	r2, r3, #4
 800478c:	681b      	ldr	r3, [r3, #0]
 800478e:	602a      	str	r2, [r5, #0]
 8004790:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8004794:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8004798:	2301      	movs	r3, #1
 800479a:	e09f      	b.n	80048dc <_printf_i+0x1ec>
 800479c:	6820      	ldr	r0, [r4, #0]
 800479e:	682b      	ldr	r3, [r5, #0]
 80047a0:	0607      	lsls	r7, r0, #24
 80047a2:	f103 0104 	add.w	r1, r3, #4
 80047a6:	6029      	str	r1, [r5, #0]
 80047a8:	d501      	bpl.n	80047ae <_printf_i+0xbe>
 80047aa:	681e      	ldr	r6, [r3, #0]
 80047ac:	e003      	b.n	80047b6 <_printf_i+0xc6>
 80047ae:	0646      	lsls	r6, r0, #25
 80047b0:	d5fb      	bpl.n	80047aa <_printf_i+0xba>
 80047b2:	f9b3 6000 	ldrsh.w	r6, [r3]
 80047b6:	2e00      	cmp	r6, #0
 80047b8:	da03      	bge.n	80047c2 <_printf_i+0xd2>
 80047ba:	232d      	movs	r3, #45	; 0x2d
 80047bc:	4276      	negs	r6, r6
 80047be:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80047c2:	485a      	ldr	r0, [pc, #360]	; (800492c <_printf_i+0x23c>)
 80047c4:	230a      	movs	r3, #10
 80047c6:	e012      	b.n	80047ee <_printf_i+0xfe>
 80047c8:	682b      	ldr	r3, [r5, #0]
 80047ca:	6820      	ldr	r0, [r4, #0]
 80047cc:	1d19      	adds	r1, r3, #4
 80047ce:	6029      	str	r1, [r5, #0]
 80047d0:	0605      	lsls	r5, r0, #24
 80047d2:	d501      	bpl.n	80047d8 <_printf_i+0xe8>
 80047d4:	681e      	ldr	r6, [r3, #0]
 80047d6:	e002      	b.n	80047de <_printf_i+0xee>
 80047d8:	0641      	lsls	r1, r0, #25
 80047da:	d5fb      	bpl.n	80047d4 <_printf_i+0xe4>
 80047dc:	881e      	ldrh	r6, [r3, #0]
 80047de:	4853      	ldr	r0, [pc, #332]	; (800492c <_printf_i+0x23c>)
 80047e0:	2f6f      	cmp	r7, #111	; 0x6f
 80047e2:	bf0c      	ite	eq
 80047e4:	2308      	moveq	r3, #8
 80047e6:	230a      	movne	r3, #10
 80047e8:	2100      	movs	r1, #0
 80047ea:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80047ee:	6865      	ldr	r5, [r4, #4]
 80047f0:	60a5      	str	r5, [r4, #8]
 80047f2:	2d00      	cmp	r5, #0
 80047f4:	bfa2      	ittt	ge
 80047f6:	6821      	ldrge	r1, [r4, #0]
 80047f8:	f021 0104 	bicge.w	r1, r1, #4
 80047fc:	6021      	strge	r1, [r4, #0]
 80047fe:	b90e      	cbnz	r6, 8004804 <_printf_i+0x114>
 8004800:	2d00      	cmp	r5, #0
 8004802:	d04b      	beq.n	800489c <_printf_i+0x1ac>
 8004804:	4615      	mov	r5, r2
 8004806:	fbb6 f1f3 	udiv	r1, r6, r3
 800480a:	fb03 6711 	mls	r7, r3, r1, r6
 800480e:	5dc7      	ldrb	r7, [r0, r7]
 8004810:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8004814:	4637      	mov	r7, r6
 8004816:	42bb      	cmp	r3, r7
 8004818:	460e      	mov	r6, r1
 800481a:	d9f4      	bls.n	8004806 <_printf_i+0x116>
 800481c:	2b08      	cmp	r3, #8
 800481e:	d10b      	bne.n	8004838 <_printf_i+0x148>
 8004820:	6823      	ldr	r3, [r4, #0]
 8004822:	07de      	lsls	r6, r3, #31
 8004824:	d508      	bpl.n	8004838 <_printf_i+0x148>
 8004826:	6923      	ldr	r3, [r4, #16]
 8004828:	6861      	ldr	r1, [r4, #4]
 800482a:	4299      	cmp	r1, r3
 800482c:	bfde      	ittt	le
 800482e:	2330      	movle	r3, #48	; 0x30
 8004830:	f805 3c01 	strble.w	r3, [r5, #-1]
 8004834:	f105 35ff 	addle.w	r5, r5, #4294967295
 8004838:	1b52      	subs	r2, r2, r5
 800483a:	6122      	str	r2, [r4, #16]
 800483c:	f8cd a000 	str.w	sl, [sp]
 8004840:	464b      	mov	r3, r9
 8004842:	aa03      	add	r2, sp, #12
 8004844:	4621      	mov	r1, r4
 8004846:	4640      	mov	r0, r8
 8004848:	f7ff fee4 	bl	8004614 <_printf_common>
 800484c:	3001      	adds	r0, #1
 800484e:	d14a      	bne.n	80048e6 <_printf_i+0x1f6>
 8004850:	f04f 30ff 	mov.w	r0, #4294967295
 8004854:	b004      	add	sp, #16
 8004856:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800485a:	6823      	ldr	r3, [r4, #0]
 800485c:	f043 0320 	orr.w	r3, r3, #32
 8004860:	6023      	str	r3, [r4, #0]
 8004862:	4833      	ldr	r0, [pc, #204]	; (8004930 <_printf_i+0x240>)
 8004864:	2778      	movs	r7, #120	; 0x78
 8004866:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800486a:	6823      	ldr	r3, [r4, #0]
 800486c:	6829      	ldr	r1, [r5, #0]
 800486e:	061f      	lsls	r7, r3, #24
 8004870:	f851 6b04 	ldr.w	r6, [r1], #4
 8004874:	d402      	bmi.n	800487c <_printf_i+0x18c>
 8004876:	065f      	lsls	r7, r3, #25
 8004878:	bf48      	it	mi
 800487a:	b2b6      	uxthmi	r6, r6
 800487c:	07df      	lsls	r7, r3, #31
 800487e:	bf48      	it	mi
 8004880:	f043 0320 	orrmi.w	r3, r3, #32
 8004884:	6029      	str	r1, [r5, #0]
 8004886:	bf48      	it	mi
 8004888:	6023      	strmi	r3, [r4, #0]
 800488a:	b91e      	cbnz	r6, 8004894 <_printf_i+0x1a4>
 800488c:	6823      	ldr	r3, [r4, #0]
 800488e:	f023 0320 	bic.w	r3, r3, #32
 8004892:	6023      	str	r3, [r4, #0]
 8004894:	2310      	movs	r3, #16
 8004896:	e7a7      	b.n	80047e8 <_printf_i+0xf8>
 8004898:	4824      	ldr	r0, [pc, #144]	; (800492c <_printf_i+0x23c>)
 800489a:	e7e4      	b.n	8004866 <_printf_i+0x176>
 800489c:	4615      	mov	r5, r2
 800489e:	e7bd      	b.n	800481c <_printf_i+0x12c>
 80048a0:	682b      	ldr	r3, [r5, #0]
 80048a2:	6826      	ldr	r6, [r4, #0]
 80048a4:	6961      	ldr	r1, [r4, #20]
 80048a6:	1d18      	adds	r0, r3, #4
 80048a8:	6028      	str	r0, [r5, #0]
 80048aa:	0635      	lsls	r5, r6, #24
 80048ac:	681b      	ldr	r3, [r3, #0]
 80048ae:	d501      	bpl.n	80048b4 <_printf_i+0x1c4>
 80048b0:	6019      	str	r1, [r3, #0]
 80048b2:	e002      	b.n	80048ba <_printf_i+0x1ca>
 80048b4:	0670      	lsls	r0, r6, #25
 80048b6:	d5fb      	bpl.n	80048b0 <_printf_i+0x1c0>
 80048b8:	8019      	strh	r1, [r3, #0]
 80048ba:	2300      	movs	r3, #0
 80048bc:	6123      	str	r3, [r4, #16]
 80048be:	4615      	mov	r5, r2
 80048c0:	e7bc      	b.n	800483c <_printf_i+0x14c>
 80048c2:	682b      	ldr	r3, [r5, #0]
 80048c4:	1d1a      	adds	r2, r3, #4
 80048c6:	602a      	str	r2, [r5, #0]
 80048c8:	681d      	ldr	r5, [r3, #0]
 80048ca:	6862      	ldr	r2, [r4, #4]
 80048cc:	2100      	movs	r1, #0
 80048ce:	4628      	mov	r0, r5
 80048d0:	f7fb fca6 	bl	8000220 <memchr>
 80048d4:	b108      	cbz	r0, 80048da <_printf_i+0x1ea>
 80048d6:	1b40      	subs	r0, r0, r5
 80048d8:	6060      	str	r0, [r4, #4]
 80048da:	6863      	ldr	r3, [r4, #4]
 80048dc:	6123      	str	r3, [r4, #16]
 80048de:	2300      	movs	r3, #0
 80048e0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80048e4:	e7aa      	b.n	800483c <_printf_i+0x14c>
 80048e6:	6923      	ldr	r3, [r4, #16]
 80048e8:	462a      	mov	r2, r5
 80048ea:	4649      	mov	r1, r9
 80048ec:	4640      	mov	r0, r8
 80048ee:	47d0      	blx	sl
 80048f0:	3001      	adds	r0, #1
 80048f2:	d0ad      	beq.n	8004850 <_printf_i+0x160>
 80048f4:	6823      	ldr	r3, [r4, #0]
 80048f6:	079b      	lsls	r3, r3, #30
 80048f8:	d413      	bmi.n	8004922 <_printf_i+0x232>
 80048fa:	68e0      	ldr	r0, [r4, #12]
 80048fc:	9b03      	ldr	r3, [sp, #12]
 80048fe:	4298      	cmp	r0, r3
 8004900:	bfb8      	it	lt
 8004902:	4618      	movlt	r0, r3
 8004904:	e7a6      	b.n	8004854 <_printf_i+0x164>
 8004906:	2301      	movs	r3, #1
 8004908:	4632      	mov	r2, r6
 800490a:	4649      	mov	r1, r9
 800490c:	4640      	mov	r0, r8
 800490e:	47d0      	blx	sl
 8004910:	3001      	adds	r0, #1
 8004912:	d09d      	beq.n	8004850 <_printf_i+0x160>
 8004914:	3501      	adds	r5, #1
 8004916:	68e3      	ldr	r3, [r4, #12]
 8004918:	9903      	ldr	r1, [sp, #12]
 800491a:	1a5b      	subs	r3, r3, r1
 800491c:	42ab      	cmp	r3, r5
 800491e:	dcf2      	bgt.n	8004906 <_printf_i+0x216>
 8004920:	e7eb      	b.n	80048fa <_printf_i+0x20a>
 8004922:	2500      	movs	r5, #0
 8004924:	f104 0619 	add.w	r6, r4, #25
 8004928:	e7f5      	b.n	8004916 <_printf_i+0x226>
 800492a:	bf00      	nop
 800492c:	08004b49 	.word	0x08004b49
 8004930:	08004b5a 	.word	0x08004b5a

08004934 <memmove>:
 8004934:	4288      	cmp	r0, r1
 8004936:	b510      	push	{r4, lr}
 8004938:	eb01 0402 	add.w	r4, r1, r2
 800493c:	d902      	bls.n	8004944 <memmove+0x10>
 800493e:	4284      	cmp	r4, r0
 8004940:	4623      	mov	r3, r4
 8004942:	d807      	bhi.n	8004954 <memmove+0x20>
 8004944:	1e43      	subs	r3, r0, #1
 8004946:	42a1      	cmp	r1, r4
 8004948:	d008      	beq.n	800495c <memmove+0x28>
 800494a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800494e:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004952:	e7f8      	b.n	8004946 <memmove+0x12>
 8004954:	4402      	add	r2, r0
 8004956:	4601      	mov	r1, r0
 8004958:	428a      	cmp	r2, r1
 800495a:	d100      	bne.n	800495e <memmove+0x2a>
 800495c:	bd10      	pop	{r4, pc}
 800495e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004962:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8004966:	e7f7      	b.n	8004958 <memmove+0x24>

08004968 <_sbrk_r>:
 8004968:	b538      	push	{r3, r4, r5, lr}
 800496a:	4d06      	ldr	r5, [pc, #24]	; (8004984 <_sbrk_r+0x1c>)
 800496c:	2300      	movs	r3, #0
 800496e:	4604      	mov	r4, r0
 8004970:	4608      	mov	r0, r1
 8004972:	602b      	str	r3, [r5, #0]
 8004974:	f7fc fcc4 	bl	8001300 <_sbrk>
 8004978:	1c43      	adds	r3, r0, #1
 800497a:	d102      	bne.n	8004982 <_sbrk_r+0x1a>
 800497c:	682b      	ldr	r3, [r5, #0]
 800497e:	b103      	cbz	r3, 8004982 <_sbrk_r+0x1a>
 8004980:	6023      	str	r3, [r4, #0]
 8004982:	bd38      	pop	{r3, r4, r5, pc}
 8004984:	2000032c 	.word	0x2000032c

08004988 <memcpy>:
 8004988:	440a      	add	r2, r1
 800498a:	4291      	cmp	r1, r2
 800498c:	f100 33ff 	add.w	r3, r0, #4294967295
 8004990:	d100      	bne.n	8004994 <memcpy+0xc>
 8004992:	4770      	bx	lr
 8004994:	b510      	push	{r4, lr}
 8004996:	f811 4b01 	ldrb.w	r4, [r1], #1
 800499a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800499e:	4291      	cmp	r1, r2
 80049a0:	d1f9      	bne.n	8004996 <memcpy+0xe>
 80049a2:	bd10      	pop	{r4, pc}

080049a4 <_realloc_r>:
 80049a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80049a8:	4680      	mov	r8, r0
 80049aa:	4614      	mov	r4, r2
 80049ac:	460e      	mov	r6, r1
 80049ae:	b921      	cbnz	r1, 80049ba <_realloc_r+0x16>
 80049b0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80049b4:	4611      	mov	r1, r2
 80049b6:	f7ff bc49 	b.w	800424c <_malloc_r>
 80049ba:	b92a      	cbnz	r2, 80049c8 <_realloc_r+0x24>
 80049bc:	f7ff fbda 	bl	8004174 <_free_r>
 80049c0:	4625      	mov	r5, r4
 80049c2:	4628      	mov	r0, r5
 80049c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80049c8:	f000 f81b 	bl	8004a02 <_malloc_usable_size_r>
 80049cc:	4284      	cmp	r4, r0
 80049ce:	4607      	mov	r7, r0
 80049d0:	d802      	bhi.n	80049d8 <_realloc_r+0x34>
 80049d2:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80049d6:	d812      	bhi.n	80049fe <_realloc_r+0x5a>
 80049d8:	4621      	mov	r1, r4
 80049da:	4640      	mov	r0, r8
 80049dc:	f7ff fc36 	bl	800424c <_malloc_r>
 80049e0:	4605      	mov	r5, r0
 80049e2:	2800      	cmp	r0, #0
 80049e4:	d0ed      	beq.n	80049c2 <_realloc_r+0x1e>
 80049e6:	42bc      	cmp	r4, r7
 80049e8:	4622      	mov	r2, r4
 80049ea:	4631      	mov	r1, r6
 80049ec:	bf28      	it	cs
 80049ee:	463a      	movcs	r2, r7
 80049f0:	f7ff ffca 	bl	8004988 <memcpy>
 80049f4:	4631      	mov	r1, r6
 80049f6:	4640      	mov	r0, r8
 80049f8:	f7ff fbbc 	bl	8004174 <_free_r>
 80049fc:	e7e1      	b.n	80049c2 <_realloc_r+0x1e>
 80049fe:	4635      	mov	r5, r6
 8004a00:	e7df      	b.n	80049c2 <_realloc_r+0x1e>

08004a02 <_malloc_usable_size_r>:
 8004a02:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004a06:	1f18      	subs	r0, r3, #4
 8004a08:	2b00      	cmp	r3, #0
 8004a0a:	bfbc      	itt	lt
 8004a0c:	580b      	ldrlt	r3, [r1, r0]
 8004a0e:	18c0      	addlt	r0, r0, r3
 8004a10:	4770      	bx	lr
	...

08004a14 <_init>:
 8004a14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004a16:	bf00      	nop
 8004a18:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004a1a:	bc08      	pop	{r3}
 8004a1c:	469e      	mov	lr, r3
 8004a1e:	4770      	bx	lr

08004a20 <_fini>:
 8004a20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004a22:	bf00      	nop
 8004a24:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004a26:	bc08      	pop	{r3}
 8004a28:	469e      	mov	lr, r3
 8004a2a:	4770      	bx	lr
